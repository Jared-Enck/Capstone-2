{"version":3,"file":"static/js/170.88830f5c.chunk.js","mappings":"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","sources":["components/common/ContentContainer.js","components/NotFound.js","components/Home.js","components/common/PasswordAdornment.js","components/common/FormComponent.js","components/account/LoginForm.js","components/account/SignUpForm.js","components/account/ProfileSkeleton.js","components/account/EditAvatar.js","components/account/EditProfile.js","components/account/Profile.js","components/search/ResultsSkeleton.js","components/search/SearchResultsPage.js","components/games/GameDescription.js","components/games/GameDescSkeleton.js","components/games/VideoOverlay.js","components/games/MediaCard.js","components/games/MediaContainer.js","components/games/MediaSkeleton.js","components/games/DetailListItem.js","components/games/GameDetails.js","components/games/GameDetailsPage.js","AllRoutes.js","components/common/BaseSkeleton.js","components/common/PlayersAndDuration.js","components/common/ResultsPagination.js","components/games/CollectionSkeleton.js","components/games/GameCard.js","hooks/usePagination.js"],"sourcesContent":["import React from 'react';\nimport { Container, Typography, Divider, alpha } from '@mui/material';\nimport styled from '@emotion/styled';\n\nconst StyledContainer = styled(Container)(({ alphascale, theme }) => ({\n  margin: 0,\n  backgroundColor: alpha(`${theme.palette.primary.main}`, alphascale),\n  borderRadius: theme.shape.borderRadius,\n  padding: '1.5rem',\n  alignSelf: 'center',\n}));\n\nexport default function ContentContainer({\n  alphascale = 1,\n  shadow = 'none',\n  header = null,\n  divider,\n  blur,\n  children,\n}) {\n  return (\n    <StyledContainer\n      maxWidth={'lg'}\n      alphascale={alphascale}\n      sx={{\n        boxShadow: shadow,\n        backdropFilter: blur ? `blur(7px)` : 'none',\n      }}\n    >\n      {header ? (\n        <Typography\n          variant={'h5'}\n          sx={{\n            color: 'secondary.main',\n          }}\n          gutterBottom\n        >\n          {header}\n        </Typography>\n      ) : null}\n      {divider ? <Divider sx={{ color: 'primary.muted' }} /> : null}\n      {children}\n    </StyledContainer>\n  );\n}\n","import React from 'react';\nimport { Typography, Stack } from '@mui/material';\nimport ContentContainer from './common/ContentContainer';\n\nexport default function NotFound() {\n  return (\n    <Stack>\n      <ContentContainer>\n        <Typography\n          variant='h5'\n          sx={{ color: 'primary.text', textAlign: 'center' }}\n        >\n          404 Sorry, can't find what you're looking for.\n        </Typography>\n      </ContentContainer>\n    </Stack>\n  );\n}\n","import React, { useContext, useEffect } from 'react';\nimport UserContext from '../context/UserContext';\nimport DataContext from '../context/DataContext';\nimport { Stack, Typography, Box, Grid } from '@mui/material';\nimport ContentContainer from './common/ContentContainer';\nimport GamesListItem from './common/GamesListItem';\nimport CircularLoading from './common/CircularLoading';\n\nexport default function Home() {\n  const { currentUser, navigate } = useContext(UserContext);\n  const { hotGames, getHotGames } = useContext(DataContext);\n\n  useEffect(() => {\n    if (!hotGames.length && currentUser) getHotGames();\n  }, [hotGames.length]);\n\n  const WelcomeMsg = () => {\n    return (\n      <Box\n        sx={{\n          color: 'primary.text',\n          fontSize: '1.2rem',\n          width: '95%',\n          margin: 'auto',\n        }}\n      >\n        <Typography\n          variant='h5'\n          gutterBottom\n        >\n          Welcome to MyGameNights!\n        </Typography>\n        <p>\n          You can browse an extensive library of games by searching for game\n          titles, mechanics, or categories.\n        </p>\n        <p>\n          Create a profile and use MyGameNights to compile a digital library of\n          all your games. Your personal collection is now complete with\n          pictures, videos, and resources to jog your memory when you’ve\n          forgotten the rules or to help you decide what to play. There’s even\n          an estimated value feature so you can flex on your friends!\n        </p>\n        <p>\n          MyGameNights makes it easy to find new games using a mechanic you\n          love, expansions for your tried and true staples, or games built\n          around your favorite franchise. (Star Wars anyone?)\n        </p>\n        <p>\n          Click around. Have fun. Build your collection. Game night has never\n          been better.\n        </p>\n      </Box>\n    );\n  };\n  const handleGameClick = (gameID) => {\n    navigate(`/games/${gameID}`);\n  };\n  const HotGames = () => {\n    return (\n      <>\n        <Grid\n          container\n          direction={'column'}\n          spacing={1}\n        >\n          <Grid item>\n            <Typography\n              variant='h4'\n              sx={{ color: 'secondary.main' }}\n            >\n              Popular Games\n            </Typography>\n          </Grid>\n          {hotGames.length ? (\n            hotGames.map((i) => {\n              const game = hotGames[i];\n              return (\n                <Grid\n                  item\n                  key={game.id}\n                >\n                  <GamesListItem\n                    item={game}\n                    idx={i}\n                    clickFunc={() => handleGameClick(game.id)}\n                    isLastItem={i === hotGames.length - 1}\n                    dimensions={{ width: '8ch', height: '8ch', fontSize: 'h4' }}\n                    homepage\n                  />\n                </Grid>\n              );\n            })\n          ) : (\n            <CircularLoading />\n          )}\n        </Grid>\n      </>\n    );\n  };\n  return (\n    <Stack sx={{ paddingTop: 10 }}>\n      <ContentContainer\n        shadow={2}\n        alphascale={0.4}\n        blur\n      >\n        {currentUser ? <HotGames /> : <WelcomeMsg />}\n      </ContentContainer>\n    </Stack>\n  );\n}\n","import React from 'react';\nimport { InputAdornment, IconButton } from '@mui/material';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\n\nexport default function PasswordAdornment({\n  showPassword,\n  handleShowPassword,\n}) {\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n  return (\n    <InputAdornment position='end'>\n      <IconButton\n        aria-label='toggle password visibility'\n        onClick={handleShowPassword}\n        onMouseDown={handleMouseDownPassword}\n        edge='end'\n        sx={{ color: 'primary.muted' }}\n      >\n        {showPassword ? <VisibilityOff /> : <Visibility />}\n      </IconButton>\n    </InputAdornment>\n  );\n}\n","import React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport UserContext from '../../context/UserContext';\nimport { FormControl, Stack, Typography, Box } from '@mui/material';\nimport { FormBox, FormTextField, ErrorSpan } from '../styled';\nimport ContentContainer from './ContentContainer';\nimport PasswordAdornment from './PasswordAdornment';\nimport { PrimaryButton } from '../styled';\nimport useFields from '../../hooks/useFields';\nimport CircularLoading from './CircularLoading';\n\nexport default function FormComponent({\n  header,\n  initialState,\n  inputs,\n  submitFunc,\n}) {\n  const [showPassword, setShowPassword] = useState(false);\n  const { navigate } = useContext(UserContext);\n  const [isLoading, setIsLoading] = useState(false);\n  const isLogin = header === 'Login';\n\n  const inputType = showPassword ? 'text' : 'password';\n\n  const [formData, handleChange, formErrors, setFormErrors] =\n    useFields(initialState);\n\n  // handle showPassword toggle\n  const handleShowPassword = () => setShowPassword((show) => !show);\n\n  // handle form submit\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    // POST request in submitFunc with formData\n    const result = await submitFunc(formData);\n    if (result) {\n      // if errors in POST request\n      setFormErrors(result.err);\n      setIsLoading(false);\n    } else {\n      setIsLoading(false);\n      navigate('/');\n    }\n  };\n\n  return (\n    <Stack sx={{ paddingTop: 10 }}>\n      <ContentContainer\n        alphascale={0.4}\n        blur\n      >\n        <FormBox\n          component='form'\n          onSubmit={handleSubmit}\n        >\n          <Typography\n            variant='h5'\n            sx={{ color: 'primary.text' }}\n          >\n            {header}\n          </Typography>\n\n          <Box sx={{ height: 24, width: 400, marginBottom: '.4rem' }}>\n            {typeof formErrors[0] === 'string' ? (\n              <ErrorSpan>{formErrors[0]}</ErrorSpan>\n            ) : null}\n          </Box>\n\n          <Stack spacing={3}>\n            {inputs.map((name, idx) => {\n              const firstLetter = name[0].toUpperCase();\n              const label = firstLetter.concat(name.slice(1));\n              const isPassword = name === 'password';\n\n              return (\n                <FormControl key={name}>\n                  <FormTextField\n                    variant='outlined'\n                    label={label}\n                    type={isPassword ? inputType : 'text'}\n                    name={name}\n                    value={formData[name]}\n                    onChange={handleChange}\n                    autoFocus={idx === 0}\n                    autoComplete={isPassword ? 'current-password' : ''}\n                    InputProps={{\n                      endAdornment: isPassword ? (\n                        <PasswordAdornment\n                          showPassword={showPassword}\n                          handleShowPassword={handleShowPassword}\n                        />\n                      ) : null,\n                    }}\n                    helperText={\n                      formErrors.length && !isLogin ? (\n                        <ErrorSpan>{formErrors[0][name]}</ErrorSpan>\n                      ) : null\n                    }\n                    required\n                  />\n                </FormControl>\n              );\n            })}\n\n            {isLogin ? (\n              <Box sx={{ height: 56, display: 'flex' }}>\n                <Typography\n                  sx={{\n                    textAlign: 'center',\n                    color: 'primary.text',\n                    margin: 'auto',\n                  }}\n                >\n                  Don't have an account yet? Sign in\n                  <Link to={'/signup'}> here.</Link>\n                </Typography>\n              </Box>\n            ) : null}\n\n            <PrimaryButton\n              variant='contained'\n              type='submit'\n              className='main-button'\n            >\n              Submit\n              {isLoading ? (\n                <Box\n                  sx={{\n                    position: 'absolute',\n                    right: 20,\n                  }}\n                >\n                  <CircularLoading\n                    size='1.3rem'\n                    color='primary.dark'\n                  />\n                </Box>\n              ) : null}\n            </PrimaryButton>\n          </Stack>\n        </FormBox>\n      </ContentContainer>\n    </Stack>\n  );\n}\n","import React from 'react';\nimport FormComponent from '../common/FormComponent';\n\nexport default function LoginForm({ loginUser }) {\n  const initialState = {\n    username: '',\n    password: '',\n  };\n\n  return (\n    <FormComponent\n      header={'Login'}\n      initialState={initialState}\n      inputs={['username', 'password']}\n      submitFunc={loginUser}\n    />\n  );\n}\n","import React from 'react';\nimport FormComponent from '../common/FormComponent';\n\nexport default function SignUpForm({ registerUser }) {\n  const initialState = {\n    username: '',\n    password: '',\n    email: '',\n  };\n\n  return (\n    <FormComponent\n      header={'Sign Up'}\n      initialState={initialState}\n      inputs={['username', 'password', 'email']}\n      submitFunc={registerUser}\n    />\n  );\n}\n","import React from 'react';\nimport { Grid } from '@mui/material';\nimport BaseSkeleton from '../common/BaseSkeleton';\n\nexport default function ProfileSkeleton() {\n  return (\n    <>\n      <Grid item>\n        <BaseSkeleton\n          variant='circular'\n          width={120}\n          height={120}\n        />\n      </Grid>\n      <Grid\n        item\n        xs={8}\n        marginTop={'auto'}\n      >\n        <BaseSkeleton />\n      </Grid>\n    </>\n  );\n}\n","import React from 'react';\nimport {\n  Grid,\n  Avatar,\n  Box,\n  Button,\n  InputLabel,\n  TextField,\n} from '@mui/material';\nimport { PhotoCamera } from '@mui/icons-material';\n\nexport default function EditAvatar({ imageURL, handleFileUpload }) {\n  return (\n    <Grid\n      container\n      direction={'row'}\n      justifyContent={'space-between'}\n    >\n      <Grid item>\n        <Avatar\n          src={imageURL}\n          sx={{\n            width: 120,\n            height: 120,\n          }}\n        />\n      </Grid>\n      <Grid\n        item\n        sx={{ display: 'flex' }}\n      >\n        <Box sx={{ marginTop: 'auto' }}>\n          <InputLabel htmlFor='imageURL'>\n            <Button\n              variant='contained'\n              component='span'\n              className='main-button'\n              sx={{\n                bgcolor: 'primary.dark',\n                '&:hover': {\n                  bgcolor: 'secondary.main',\n                  color: 'primary.main',\n                },\n              }}\n            >\n              <PhotoCamera\n                fontSize='small'\n                sx={{ marginRight: 1 }}\n              />\n              Upload Image\n            </Button>\n            <TextField\n              id='imageURL'\n              type='file'\n              hidden\n              onChange={handleFileUpload}\n            />\n          </InputLabel>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useContext, useEffect } from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Stack,\n  FormControl,\n  Box,\n} from '@mui/material';\nimport {\n  FormTextField,\n  PrimaryButton,\n  CancelButton,\n  ErrorSpan,\n} from '../styled';\nimport useFields from '../../hooks/useFields';\nimport UserContext from '../../context/UserContext';\nimport EditAvatar from './EditAvatar';\n\nexport default function EditProfile({ open, setOpen, username }) {\n  const { updateUser, userData } = useContext(UserContext);\n\n  const [formData, handleChange, formErrors, setFormErrors, setFormData] =\n    useFields(userData);\n\n  // handle closing of dialog box\n  const handleClose = () => {\n    setFormErrors([]);\n    setFormData(userData);\n    setOpen(false);\n  };\n\n  // handle file uploading of imageURL\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n\n    reader.onloadend = () => {\n      setFormData({ ...formData, imageURL: reader.result });\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  /** Check for changes in edit form\n   *\n   * @param {*} formData { username, email, imageURL }\n   * @param {*} userData { username, email, imageURL }\n   * @returns {*} { username: 'newUser' }\n   *\n   * maps entries of formData and compare values\n   *  against userData values\n   *\n   * if no changes, return -1\n   *\n   * example --\n   *\n   * userData = { username: 'testUser', email: 'me@me.com', imageURL: 'someImageURL' }\n   *\n   * formData = { username: 'newUser', email: 'me@me.com', imageURL: 'someImageURL' }\n   */\n  const getChanges = (formData, userData) => {\n    const formEntries = Object.entries(formData);\n    const initialEntries = Object.entries(userData);\n    const updateData = {};\n\n    const entries = formEntries.filter(\n      ([key, val], idx) => val !== initialEntries[idx][1]\n    );\n\n    if (!entries.length) return -1;\n\n    entries.map((entry) => (updateData[entry[0]] = entry[1]));\n\n    return updateData;\n  };\n\n  // handle form submit\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // check for any changes\n    const updateData = getChanges(formData, userData);\n\n    if (updateData === -1) return handleClose();\n\n    // Patch request with updated data\n    const result = await updateUser(updateData, username);\n\n    if (result) {\n      setFormErrors(result.msg);\n    } else {\n      handleClose();\n    }\n  };\n\n  useEffect(() => {\n    setFormData(userData);\n  }, [userData, setFormData]);\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      sx={{\n        '& .MuiPaper-root': {\n          bottom: '5rem',\n          bgcolor: 'primary.main',\n          width: 600,\n          padding: '0rem 4rem 1rem 4rem',\n        },\n      }}\n    >\n      <DialogTitle\n        fontSize={'1.5rem'}\n        sx={{ color: 'primary.text', paddingBottom: 0 }}\n      >\n        Edit Profile\n      </DialogTitle>\n      <DialogContent>\n        <Box sx={{ height: 24, width: 400, marginBottom: '.4rem' }}>\n          {typeof formErrors[0] === 'string' ? (\n            <ErrorSpan>{formErrors[0]}</ErrorSpan>\n          ) : null}\n        </Box>\n        <Stack spacing={3}>\n          <EditAvatar\n            imageURL={formData.imageURL}\n            handleFileUpload={handleFileUpload}\n          />\n          {['username', 'email'].map((name) => {\n            const firstLetter = name[0].toUpperCase();\n            const label = firstLetter.concat(name.slice(1));\n\n            return (\n              <FormControl key={name}>\n                <FormTextField\n                  variant='outlined'\n                  label={label}\n                  type={'text'}\n                  name={name}\n                  value={formData[name]}\n                  onChange={handleChange}\n                  helperText={\n                    formErrors.length && typeof formErrors[0] !== 'string' ? (\n                      <ErrorSpan>{formErrors[0][name]}</ErrorSpan>\n                    ) : null\n                  }\n                />\n              </FormControl>\n            );\n          })}\n        </Stack>\n      </DialogContent>\n      <DialogActions sx={{ marginRight: 'auto', padding: '5px 0px 0px 24px' }}>\n        <CancelButton\n          variant='outlined'\n          onClick={handleClose}\n          className='main-button'\n        >\n          Cancel\n        </CancelButton>\n        <PrimaryButton\n          variant='contained'\n          onClick={handleSubmit}\n          className='main-button'\n        >\n          Submit\n        </PrimaryButton>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useContext, useEffect, useState, lazy, Suspense } from 'react';\nimport { useParams, Navigate } from 'react-router-dom';\nimport UserContext from '../../context/UserContext';\nimport {\n  Stack,\n  Typography,\n  Grid,\n  Avatar,\n  Button,\n  Divider,\n} from '@mui/material';\nimport { Edit } from '@mui/icons-material';\nimport ContentContainer from '../common/ContentContainer';\nimport ProfileSkeleton from './ProfileSkeleton';\nimport CollectionSkeleton from '../games/CollectionSkeleton';\nimport EditProfile from './EditProfile';\n\nconst CollectionComp = lazy(() => import('../games/Collection'));\n\nexport default function Profile({ itemsOnPage }) {\n  const { username } = useParams();\n  const { currentUser, getCurrentUser, userData, token } =\n    useContext(UserContext);\n\n  const [open, setOpen] = useState(false);\n\n  const handleEditClick = () => {\n    setOpen(true);\n  };\n\n  useEffect(() => {\n    // GET request for userData\n    if (!userData && currentUser) getCurrentUser(username);\n    // eslint-disable-next-line\n  }, [currentUser, getCurrentUser]);\n\n  if (!token) return <Navigate to={'/login'} />;\n\n  return (\n    <Stack>\n      <ContentContainer>\n        <Grid\n          container\n          spacing={2}\n          direction={'row'}\n          alignItems={'flex-end'}\n        >\n          {userData ? (\n            <>\n              <EditProfile\n                open={open}\n                setOpen={setOpen}\n                username={username}\n              />\n              <Grid item>\n                <Avatar\n                  src={userData.imageURL}\n                  sx={{ width: 120, height: 120 }}\n                />\n              </Grid>\n              <Grid item>\n                <Typography\n                  variant='h5'\n                  color={'secondary.main'}\n                >\n                  {userData.username}\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                marginLeft={'auto'}\n              >\n                <Button\n                  size='small'\n                  onClick={handleEditClick}\n                >\n                  <Edit\n                    fontSize='medium'\n                    sx={{\n                      color: 'secondary.main',\n                      marginLeft: 2,\n                    }}\n                  />\n                </Button>\n              </Grid>\n            </>\n          ) : (\n            <ProfileSkeleton />\n          )}\n          <Grid\n            item\n            xs={12}\n          >\n            <Divider sx={{ color: 'primary.muted' }} />\n          </Grid>\n        </Grid>\n        <Suspense fallback={<CollectionSkeleton itemsOnPage={itemsOnPage} />}>\n          <CollectionComp itemsOnPage={itemsOnPage} />\n        </Suspense>\n      </ContentContainer>\n    </Stack>\n  );\n}\n","import React from 'react';\nimport { Grid } from '@mui/material';\nimport BaseSkeleton from '../common/BaseSkeleton';\n\nexport default function ResultsSkeleton({ itemsOnPage, currentUser }) {\n  let skelItems = [];\n\n  for (let i = 0; i < itemsOnPage; i++) {\n    skelItems.push(\n      <Grid\n        item\n        key={i}\n      >\n        <BaseSkeleton\n          width={345}\n          height={currentUser ? 383 : 328}\n          shadow={1}\n        />\n      </Grid>\n    );\n  }\n\n  return <>{skelItems.map((i) => i)}</>;\n}\n","import React, { useContext, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport DataContext from '../../context/DataContext';\nimport UserContext from '../../context/UserContext';\nimport { Stack, Grid } from '@mui/material';\nimport ContentContainer from '../common/ContentContainer';\nimport GameCard from '../games/GameCard';\nimport ResultsPagination from '../common/ResultsPagination';\nimport usePagination from '../../hooks/usePagination';\nimport ResultsSkeleton from './ResultsSkeleton';\nimport BaseSkeleton from '../common/BaseSkeleton';\n\nexport default function SearchResultsPage({ itemsOnPage }) {\n  const { path, id } = useParams();\n  const { searchResults, getSearchResults, resultsHeader, getSearchHeader } =\n    useContext(DataContext);\n  const { currentUser } = useContext(UserContext);\n  const { pages, count } = searchResults;\n\n  const [page, pageCount, handleChange, setPage] = usePagination(\n    count,\n    itemsOnPage\n  );\n\n  useEffect(() => {\n    // if no header, gets header\n    if (!resultsHeader) getSearchHeader(id);\n  }, [resultsHeader, getSearchHeader, id]);\n\n  useEffect(() => {\n    // get search results from params\n    const searchObj = { [path]: id };\n    if (!Object.keys(pages).length) {\n      // no content in pages set page to 1\n      setPage(1);\n      // GET request for search results\n      getSearchResults(searchObj);\n    } else {\n      if (!pages[page]) {\n        // Get request for pagination skip amount\n        const skipAmount = (page - 1) * itemsOnPage;\n        getSearchResults(searchObj, page, skipAmount);\n      }\n    }\n    window.scrollTo({ top: 0, behavior: 'instant' });\n  }, [getSearchResults, page, setPage, itemsOnPage, pages, id, path]);\n\n  const gridItemComp = (game) => (\n    <Grid\n      item\n      key={game.id}\n    >\n      <GameCard game={game} />\n    </Grid>\n  );\n\n  const header = `Results for \"${resultsHeader}\"`;\n\n  return (\n    <Stack>\n      <ContentContainer\n        header={\n          resultsHeader ? (\n            header\n          ) : (\n            <BaseSkeleton\n              width={'30ch'}\n              height='2.5rem'\n            />\n          )\n        }\n        divider\n      >\n        <Grid\n          container\n          spacing={3}\n          padding={'1.5rem'}\n          direction={'row'}\n          justifyContent={'center'}\n        >\n          {pages[page] ? (\n            pages[page].map((g) => gridItemComp(g))\n          ) : (\n            <ResultsSkeleton\n              itemsOnPage={itemsOnPage}\n              currentUser={currentUser}\n            />\n          )}\n        </Grid>\n        {pageCount > 1 ? (\n          <ResultsPagination\n            page={page}\n            handleChange={handleChange}\n            pageCount={pageCount}\n          />\n        ) : null}\n      </ContentContainer>\n    </Stack>\n  );\n}\n","import React, { useState, useContext } from 'react';\nimport DataContext from '../../context/DataContext';\nimport UserContext from '../../context/UserContext';\nimport {\n  Box,\n  Typography,\n  Collapse,\n  Divider,\n  Grid,\n  Button,\n  Stack,\n} from '@mui/material';\nimport { ExpandMore, ExpandLess, Add, Check } from '@mui/icons-material';\nimport PlayersAndDuration from '../common/PlayersAndDuration';\nimport styled from '@emotion/styled';\nimport ContentContainer from '../common/ContentContainer';\nimport CircularLoading from '../common/CircularLoading';\n\nconst AddButton = styled(Button)(({ theme }) => ({\n  color: theme.palette.secondary.main,\n  '&:hover': {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.primary.main,\n  },\n}));\n\nconst AddedBadgeBox = styled(Box)(({ theme }) => ({\n  color: theme.palette.success.main,\n  display: 'flex',\n}));\n\nexport default function GameDescription({ game }) {\n  const [open, setOpen] = useState(false);\n  const { addGame } = useContext(DataContext);\n  const { currentUser, userGameIDs } = useContext(UserContext);\n  const inCollection = userGameIDs ? userGameIDs.has(game.id) : false;\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleDescBtnClick = () => {\n    setOpen(!open);\n  };\n\n  const handleAddBtnClick = async () => {\n    setIsLoading(true);\n    // POST request to server to add game\n    await addGame(game);\n    setIsLoading(false);\n  };\n\n  const AddButtonComp = () => (\n    <AddButton\n      variant='text'\n      onClick={handleAddBtnClick}\n      className='main-button'\n    >\n      <Add fontSize='small' />\n\n      <Typography paddingRight={1}>Add to collection</Typography>\n\n      {isLoading ? (\n        <CircularLoading\n          size='1rem'\n          color='primary.dark'\n        />\n      ) : (\n        <Box width={'1rem'} />\n      )}\n    </AddButton>\n  );\n\n  const AddedBadgeComp = () => (\n    <AddedBadgeBox>\n      <Typography margin={1}>In Collection</Typography>\n      <Typography padding={'.3rem'}>\n        <Check />\n      </Typography>\n    </AddedBadgeBox>\n  );\n\n  return (\n    <ContentContainer>\n      <Box display={'flex'}>\n        <Typography\n          variant={'h4'}\n          sx={{\n            color: 'secondary.main',\n            flex: 1,\n          }}\n        >\n          {game.name}\n        </Typography>\n        {currentUser\n          ? inCollection && !isLoading\n            ? AddedBadgeComp()\n            : AddButtonComp()\n          : null}\n      </Box>\n      <Grid\n        sx={{\n          color: 'primary.text',\n          padding: '.3rem',\n        }}\n        container\n        direction={'row'}\n        spacing={3}\n      >\n        <Grid item>{game.year_published}</Grid>\n        <PlayersAndDuration\n          min_players={game.min_players}\n          max_players={game.max_players}\n          min_playtime={game.min_playtime}\n          max_playtime={game.max_playtime}\n        />\n      </Grid>\n      <Divider sx={{ color: 'primary.muted' }} />\n      <Grid\n        container\n        direction={'row'}\n        padding={'1.2rem'}\n      >\n        <Grid\n          item\n          xs={4}\n        >\n          <img\n            width={300}\n            height={300}\n            src={game.image_url}\n            alt={game.name}\n          />\n        </Grid>\n        <Grid\n          item\n          xs={7}\n        >\n          {game.description_preview ? (\n            game.description_preview.length <= 900 ? (\n              <Typography\n                sx={{\n                  color: 'primary.text',\n                }}\n              >\n                {game.description_preview}\n              </Typography>\n            ) : (\n              <Stack>\n                <Collapse\n                  in={open}\n                  collapsedSize={265}\n                >\n                  <Typography\n                    sx={{\n                      color: 'primary.text',\n                    }}\n                  >\n                    {game.description_preview}\n                  </Typography>\n                </Collapse>\n                <Button\n                  sx={{\n                    height: '1.5rem',\n                    color: 'secondary.main',\n                    '&:hover': {\n                      backgroundColor: 'secondary.main',\n                      color: 'primary.main',\n                    },\n                  }}\n                  variant='text'\n                  onClick={handleDescBtnClick}\n                >\n                  {open ? (\n                    <ExpandLess fontSize='large' />\n                  ) : (\n                    <ExpandMore fontSize='large' />\n                  )}\n                </Button>\n              </Stack>\n            )\n          ) : null}\n        </Grid>\n      </Grid>\n    </ContentContainer>\n  );\n}\n","import React from 'react';\nimport { Stack, Grid, Divider, Typography } from '@mui/material';\nimport BaseSkeleton from '../common/BaseSkeleton';\nimport ContentContainer from '../common/ContentContainer';\n\nexport default function GameDescSkeleton() {\n  return (\n    <ContentContainer>\n      <Typography variant='h4'>\n        <BaseSkeleton width='40ch' />\n      </Typography>\n      <Grid\n        container\n        direction={'row'}\n        spacing={3}\n        sx={{\n          padding: '.3rem',\n        }}\n      >\n        <Grid item>\n          <BaseSkeleton width={220} />\n        </Grid>\n      </Grid>\n      <Divider />\n      <Grid\n        container\n        direction={'row'}\n        padding={'1.2rem'}\n      >\n        <Grid\n          item\n          xs={4}\n        >\n          <BaseSkeleton\n            width={300}\n            height={300}\n          />\n        </Grid>\n        <Grid\n          item\n          xs={7}\n        >\n          <Stack spacing={2.5}>\n            <BaseSkeleton width='65ch' />\n            <BaseSkeleton width='60ch' />\n            <BaseSkeleton width='50ch' />\n            <BaseSkeleton width='65ch' />\n            <BaseSkeleton width='50ch' />\n            <BaseSkeleton width='55ch' />\n          </Stack>\n        </Grid>\n      </Grid>\n    </ContentContainer>\n  );\n}\n","import React from 'react';\nimport { Box, Typography, alpha, Tooltip } from '@mui/material';\nimport styled from '@emotion/styled';\nimport YouTubeIcon from '@mui/icons-material/YouTube';\n\nconst StyledBox = styled(Box)(({ theme }) => ({\n  position: 'absolute',\n  backgroundColor: alpha(theme.palette.common.black, 0.6),\n  width: '100%',\n  height: '100%',\n  textAlign: 'center',\n  padding: '.5rem',\n}));\n\nexport default function VideoOverlay({ title }) {\n  return (\n    <Tooltip title={title}>\n      <StyledBox>\n        <Typography\n          sx={{\n            color: 'secondary.main',\n            textShadow: '2px 1px 1px solid black',\n          }}\n          variant='h5'\n          noWrap\n        >\n          {title}\n        </Typography>\n        <Box\n          sx={{\n            marginTop: '1rem',\n            color: 'red',\n          }}\n        >\n          <YouTubeIcon\n            sx={{\n              fontSize: '5rem',\n            }}\n          />\n        </Box>\n      </StyledBox>\n    </Tooltip>\n  );\n}\n","import React from 'react';\nimport { CardMedia, Card, CardActionArea } from '@mui/material';\nimport VideoOverlay from './VideoOverlay';\n\nexport default function MediaCard({\n  item,\n  size,\n  width,\n  height,\n  handleClick,\n  isVideo,\n}) {\n  return (\n    <Card\n      sx={{\n        height: height,\n        width: width,\n        boxShadow: 0,\n      }}\n    >\n      <CardActionArea onClick={() => handleClick(item.url)}>\n        {isVideo ? <VideoOverlay title={item.title} /> : null}\n        <CardMedia\n          sx={{\n            height: height,\n            width: width,\n            objectFit: 'fill',\n          }}\n          component='img'\n          image={item[size] || item.image_url}\n          alt={item.name || item.title}\n        />\n      </CardActionArea>\n    </Card>\n  );\n}\n","import React from 'react';\nimport { Grid, Typography } from '@mui/material';\nimport MediaCard from './MediaCard';\nimport ContentContainer from '../common/ContentContainer';\n\nexport default function MediaContainer({ items = [] }) {\n  const handleClick = (url) => {\n    window.open(url, '_blank');\n  };\n\n  const NoMediaMessage = () => (\n    <Typography\n      variant='h5'\n      color={'primary.text'}\n      paddingLeft={5}\n    >\n      Sorry, no videos uploaded yet.\n    </Typography>\n  );\n\n  return (\n    <ContentContainer\n      header={'Videos'}\n      divider\n    >\n      <Grid\n        sx={{\n          alignItems: 'center',\n          height: 220,\n          overflow: 'auto',\n          marginTop: '.3rem',\n        }}\n        container\n        direction={'row'}\n        spacing={2}\n      >\n        {items.length ? (\n          items.map((i) => (\n            <Grid\n              key={i.id}\n              item\n              justifyContent={'center'}\n            >\n              <MediaCard\n                item={i}\n                height={200}\n                width={300}\n                handleClick={handleClick}\n                isVideo\n              />\n            </Grid>\n          ))\n        ) : (\n          <NoMediaMessage />\n        )}\n      </Grid>\n    </ContentContainer>\n  );\n}\n","import React from 'react';\nimport { Grid } from '@mui/material';\nimport BaseSkeleton from '../common/BaseSkeleton';\nimport ContentContainer from '../common/ContentContainer';\n\nexport default function MediaSkeleton({ isVideo }) {\n  const height = 200;\n  const width = isVideo ? 300 : 200;\n  const header = isVideo ? 'Videos' : 'Images';\n  return (\n    <ContentContainer\n      header={header}\n      divider\n    >\n      <Grid\n        sx={{\n          alignItems: 'center',\n          height: 220,\n          overflow: 'auto',\n          marginTop: '.3rem',\n        }}\n        container\n        direction={'row'}\n        spacing={2}\n      >\n        <Grid item>\n          <BaseSkeleton\n            height={height}\n            width={width}\n          />\n        </Grid>\n        <Grid item>\n          <BaseSkeleton\n            height={height}\n            width={width}\n          />\n        </Grid>\n        <Grid item>\n          <BaseSkeleton\n            height={height}\n            width={width}\n          />\n        </Grid>\n      </Grid>\n    </ContentContainer>\n  );\n}\n","import React, { useContext } from 'react';\nimport DataContext from '../../context/DataContext';\nimport UserContext from '../../context/UserContext';\nimport { Link } from '@mui/material';\nimport { Typography, Grid } from '@mui/material';\n\nexport default function DetailListItem({ param, item, isLastItem }) {\n  const { setSearchResults, setResultsHeader, resultsHeader } =\n    useContext(DataContext);\n  const { navigate } = useContext(UserContext);\n\n  // handle list item click\n  const handleClick = () => {\n    if (resultsHeader !== item.name) {\n      // clear previous results\n      setSearchResults({ pages: {} });\n      setResultsHeader('');\n    }\n    navigate(`/search/${param}/${item.id}`);\n  };\n  return (\n    <Grid item>\n      <Link\n        onClick={handleClick}\n        variant='subtitle1'\n        sx={{\n          textDecoration: 'none',\n          cursor: 'pointer',\n        }}\n        aria-label={`search ${param} ${item.name}`}\n      >\n        <Typography\n          sx={{\n            color: 'primary.text',\n            transition: 'all 250ms',\n            '&:hover': {\n              color: 'secondary.main',\n            },\n          }}\n        >\n          {isLastItem ? item.name : item.name + ','}\n        </Typography>\n      </Link>\n    </Grid>\n  );\n}\n","import React from 'react';\nimport { Table, TableBody, TableCell, TableRow, Grid } from '@mui/material';\nimport DetailListItem from './DetailListItem';\nimport styled from '@emotion/styled';\nimport ContentContainer from '../common/ContentContainer';\n\n// create data for rows in table\nconst createData = (name, data = 'N/A') => {\n  return { name, data };\n};\n\nconst StyledRow = styled(TableRow)(({ theme }) => ({\n  backgroundColor: theme.palette.primary.main,\n  '& td, & th': {\n    border: 0,\n  },\n  '&:nth-of-type(odd)': {\n    backgroundColor: theme.palette.primary.dark,\n  },\n}));\n\nexport default function GameDetails({ game }) {\n  let MechanicsComps;\n  let CategoriesComps;\n  let rows;\n\n  if (game) {\n    if (game.mechanics.length) {\n      MechanicsComps = game.mechanics.map((m, idx) => (\n        <DetailListItem\n          key={idx}\n          param={'mechanics'}\n          item={m}\n          isLastItem={game.mechanics.length - 1 === idx}\n        />\n      ));\n    }\n\n    if (game.categories.length) {\n      CategoriesComps = game.categories.map((c, idx) => (\n        <DetailListItem\n          key={idx}\n          param={'categories'}\n          item={c}\n          isLastItem={game.categories.length - 1 === idx}\n        />\n      ));\n    }\n\n    const year = game.year_published ? game.year_published : 'N/A';\n    const publisher = game.primary_publisher\n      ? game.primary_publisher.name\n      : 'N/A';\n    const artists = game.artists.length ? game.artists.join(', ') : 'N/A';\n\n    rows = [\n      createData('Year Published', year),\n      createData('Publisher', publisher),\n      createData(\n        'Mechanics',\n        <Grid\n          container\n          spacing={2}\n          direction={'row'}\n        >\n          {MechanicsComps}\n        </Grid>\n      ),\n      createData(\n        'Categories',\n        <Grid\n          container\n          spacing={2}\n          direction={'row'}\n        >\n          {CategoriesComps}\n        </Grid>\n      ),\n      createData('Artists', artists),\n    ];\n  }\n  return (\n    <ContentContainer header='Details'>\n      <Table>\n        <TableBody>\n          {rows\n            ? rows.map((row, idx) => (\n                <StyledRow key={idx}>\n                  <TableCell\n                    component='th'\n                    scope='row'\n                    sx={{\n                      width: '35ch',\n                      color: 'primary.text',\n                      fontSize: '1.2rem',\n                    }}\n                  >\n                    {row.name}\n                  </TableCell>\n                  <TableCell\n                    sx={{\n                      color: 'primary.text',\n                      fontSize: '1.1rem',\n                    }}\n                  >\n                    {row.data}\n                  </TableCell>\n                </StyledRow>\n              ))\n            : null}\n        </TableBody>\n      </Table>\n    </ContentContainer>\n  );\n}\n","import React, { useEffect, useContext, useState } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport DataContext from '../../context/DataContext';\nimport { Stack, Typography } from '@mui/material';\nimport ContentContainer from '../common/ContentContainer';\nimport GameDescription from './GameDescription';\nimport GameDescSkeleton from './GameDescSkeleton';\nimport MediaContainer from './MediaContainer';\nimport MediaSkeleton from './MediaSkeleton';\nimport GameDetails from './GameDetails';\n\nexport default function GameDetailsPage() {\n  const { game, checkGameCache } = useContext(DataContext);\n  const gameID = useParams().id;\n  const { pathname } = useLocation();\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    try {\n      if (game.id !== gameID) {\n        setIsLoading(true);\n        // GET request to check cache for game\n        checkGameCache(gameID);\n      }\n      setIsLoading(false);\n    } catch (err) {\n      return <NoGameFound />;\n    }\n    // eslint-disable-next-line\n  }, [game, pathname]);\n\n  const NoGameFound = () => (\n    <Stack>\n      <ContentContainer>\n        <Typography\n          variant='h5'\n          textAlign={'center'}\n          color={'primary.text'}\n        >\n          Sorry, no game found with ID '{gameID}'.\n        </Typography>\n      </ContentContainer>\n    </Stack>\n  );\n\n  return (\n    <Stack spacing={'.3rem'}>\n      {!isLoading ? <GameDescription game={game} /> : <GameDescSkeleton />}\n      {!isLoading ? (\n        <MediaContainer\n          items={game.videos}\n          isVideo\n        />\n      ) : (\n        <MediaSkeleton isVideo />\n      )}\n      <GameDetails game={game} />\n    </Stack>\n  );\n}\n","import React, { useContext } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport UserContext from './context/UserContext';\nimport NotFound from './components/NotFound';\nimport Home from './components/Home';\nimport LoginForm from './components/account/LoginForm';\nimport SignUpForm from './components/account/SignUpForm';\nimport Profile from './components/account/Profile';\nimport SearchResultsPage from './components/search/SearchResultsPage';\nimport GameDetailsPage from './components/games/GameDetailsPage';\n\nexport default function AllRoutes() {\n  const { loginUser, registerUser } = useContext(UserContext);\n  return (\n    <Routes>\n      <Route\n        path='*'\n        element={<NotFound />}\n      />\n      <Route\n        path='/'\n        element={<Home />}\n      />\n      <Route\n        path='/login'\n        element={<LoginForm loginUser={loginUser} />}\n      />\n      <Route\n        path='/signup'\n        element={<SignUpForm registerUser={registerUser} />}\n      />\n      <Route\n        path='/profile/:username'\n        element={<Profile itemsOnPage={9} />}\n      />\n      <Route\n        path='search/:path/:id'\n        element={<SearchResultsPage itemsOnPage={30} />}\n      />\n      <Route\n        path='/games/:id'\n        element={<GameDetailsPage />}\n      />\n    </Routes>\n  );\n}\n","import React from 'react';\nimport { Skeleton, alpha } from '@mui/material';\nimport styled from '@emotion/styled';\n\nconst StyledSkel = styled(Skeleton)(({ theme }) => ({\n  backgroundColor: alpha(theme.palette.primary.muted, 0.4),\n  '& .MuiSkeleton-root': {\n    animationDuration: '.3sec',\n  },\n}));\n\nexport default function BaseSkeleton({\n  variant = 'rounded',\n  width = '100%',\n  height = '2rem',\n  shadow,\n}) {\n  const boxShadow = shadow ? shadow : 'none';\n  return (\n    <StyledSkel\n      variant={variant}\n      animation='wave'\n      sx={{\n        width: width,\n        height: height,\n        boxShadow: boxShadow,\n      }}\n    />\n  );\n}\n","import React, { useCallback, useMemo } from 'react';\nimport { Grid, Typography } from '@mui/material';\nimport { Person, AccessTime } from '@mui/icons-material';\nimport styled from '@emotion/styled';\n\nconst StyledTypography = styled(Typography)(({ theme }) => ({\n  alignItems: 'flex-start',\n}));\n\nexport default function PlayersAndDuration({\n  min_players,\n  max_players,\n  min_playtime,\n  max_playtime,\n}) {\n  /** format string for num of players to only display\n   * min_players if it's equal to max_players\n   *\n   * some API data with have min and max as same value\n   *\n   * instead of displaying players as 1-1,\n   * will just have display of 1\n   *\n   */\n  const getPlayers = useCallback(() => {\n    return min_players === max_players\n      ? min_players\n      : min_players + ' - ' + max_players;\n  }, [min_players, max_players]);\n\n  const players = useMemo(() => getPlayers(), [getPlayers]);\n\n  /** format string for duration of playtime to only display\n   * min_playtime if it's equal to max_playtime\n   *\n   * some API data with have min and max as same value\n   *\n   * instead of displaying playtime as 30-30,\n   * will just have display of 30\n   *\n   */\n  const getDuration = useCallback(() => {\n    return min_playtime === max_playtime\n      ? min_playtime\n      : min_playtime + ' - ' + max_playtime;\n  }, [min_playtime, max_playtime]);\n\n  const duration = useMemo(() => getDuration(), [getDuration]);\n\n  return (\n    <>\n      <Grid item>\n        <StyledTypography>\n          <Person />\n          {players}\n        </StyledTypography>\n      </Grid>\n      <Grid item>\n        <StyledTypography>\n          <AccessTime sx={{ marginRight: '.3rem', transform: 'scale(.85)' }} />\n          {duration}\n        </StyledTypography>\n      </Grid>\n    </>\n  );\n}\n","import React from 'react';\nimport { Pagination, alpha } from '@mui/material';\nimport styled from '@emotion/styled';\n\nconst StyledPagination = styled(Pagination)(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'center',\n  padding: '1rem',\n  '& .MuiPaginationItem-root': {\n    color: theme.palette.primary.text,\n  },\n  '& .MuiPaginationItem-root.Mui-selected': {\n    color: theme.palette.primary.main,\n    backgroundColor: theme.palette.secondary.main,\n    '&:hover': {\n      color: theme.palette.primary.main,\n      backgroundColor: theme.palette.secondary.dark,\n    },\n  },\n  '& .MuiButtonBase-root': {\n    '&:hover': {\n      backgroundColor: alpha(`${theme.palette.primary.dark}`, 0.6),\n    },\n  },\n}));\n\nexport default function ResultsPagination({\n  page,\n  handleChange,\n  pageCount = 10,\n}) {\n  return (\n    <StyledPagination\n      count={pageCount}\n      page={page}\n      onChange={handleChange}\n      shape='rounded'\n      size='large'\n    />\n  );\n}\n","import React from 'react';\nimport { Stack, Grid } from '@mui/material';\nimport BaseSkeleton from '../common/BaseSkeleton';\n\nexport default function CollectionSkeleton({ itemsOnPage }) {\n  let skelItems = [];\n\n  for (let i = 0; i < itemsOnPage; i++) {\n    skelItems.push(\n      <Grid\n        item\n        key={i}\n      >\n        <BaseSkeleton\n          width={345}\n          height={383}\n          shadow={1}\n        />\n      </Grid>\n    );\n  }\n\n  return (\n    <Stack spacing={2}>\n      <Stack\n        spacing={1}\n        width={300}\n        padding={'1.5rem 1.5rem 0rem 2rem'}\n      >\n        <BaseSkeleton />\n        <BaseSkeleton height='1.5rem' />\n        <BaseSkeleton height='1.5rem' />\n      </Stack>\n      <Grid\n        container\n        direction={'row'}\n        spacing={3}\n        paddingLeft={'.5rem'}\n      >\n        {skelItems.map((i) => i)}\n      </Grid>\n    </Stack>\n  );\n}\n","import React, { useContext } from 'react';\nimport {\n  Card,\n  CardActionArea,\n  CardMedia,\n  CardContent,\n  CardActions,\n  Typography,\n  Grid,\n  IconButton,\n} from '@mui/material';\nimport PlayersAndDuration from '../common/PlayersAndDuration';\nimport { Favorite, FavoriteBorder, Delete } from '@mui/icons-material';\nimport DataContext from '../../context/DataContext';\nimport UserContext from '../../context/UserContext';\n\nexport default function GameCard({ game, onProfilePage }) {\n  const { setGame, addGame, removeGame } = useContext(DataContext);\n  const { currentUser, userGameIDs, navigate } = useContext(UserContext);\n  const inCollection = userGameIDs ? userGameIDs.has(game.id) : false;\n\n  const handleCardClick = () => {\n    setGame(game);\n    navigate(`/games/${game.id}`);\n  };\n\n  const handleQuickAddClick = () => {\n    if (!inCollection) {\n      // POST request to server to add game\n      addGame(game);\n    }\n  };\n\n  const handleTrashClick = () => {\n    // POST request to server to delete game\n    removeGame(game);\n  };\n\n  const quickAddBtn = (\n    <IconButton\n      aria-label='add to collection'\n      sx={{ color: 'secondary.main', marginLeft: 'auto' }}\n      onClick={handleQuickAddClick}\n    >\n      {inCollection ? <Favorite /> : <FavoriteBorder />}\n    </IconButton>\n  );\n\n  const trashBtn = (\n    <IconButton\n      aria-label='remove from collection'\n      sx={{\n        color: 'primary.muted',\n        marginLeft: 'auto',\n        '&:hover': { color: 'red' },\n      }}\n      onClick={handleTrashClick}\n    >\n      <Delete />\n    </IconButton>\n  );\n\n  console.log(game);\n\n  return (\n    <Card\n      sx={{\n        width: 345,\n        backgroundColor: 'primary.dark',\n        transition: 'all 200ms',\n        '&:hover': {\n          transform: 'scale(1.02)',\n        },\n      }}\n    >\n      <CardActionArea onClick={handleCardClick}>\n        <CardMedia\n          sx={{\n            objectFit: 'fill',\n          }}\n          component={'img'}\n          height={230}\n          image={game.image || game.thumbnail}\n          alt={game.name}\n        />\n        <CardContent sx={{ color: 'secondary.main' }}>\n          <Typography\n            textAlign={'center'}\n            gutterBottom\n            variant='h5'\n            component='div'\n            noWrap\n          >\n            {game.name}\n          </Typography>\n          <Grid\n            container\n            direction={'row'}\n            justifyContent={'center'}\n            spacing={3}\n            sx={{\n              color: 'primary.text',\n            }}\n          >\n            <PlayersAndDuration\n              min_players={game.min_players}\n              max_players={game.max_players}\n              min_playtime={game.min_playtime}\n              max_playtime={game.max_playtime}\n            />\n          </Grid>\n        </CardContent>\n      </CardActionArea>\n      {currentUser ? (\n        <CardActions disableSpacing>\n          {!onProfilePage ? quickAddBtn : trashBtn}\n        </CardActions>\n      ) : null}\n    </Card>\n  );\n}\n","import { useEffect, useState } from 'react';\n\n/** Controls page and pageCount for pagination\n *\n * @param {*} count searchResults count\n * @param {*} itemsOnPage num prop from parent\n * @returns {*} [page, pageCount, handleChange, setPage]\n *\n * pageCount = Math.ceil(count / itemsOnPage)\n */\nexport default function usePagination(count, itemsOnPage) {\n  const [page, setPage] = useState(1);\n  const [pageCount, setPageCount] = useState(0);\n\n  useEffect(() => {\n    if (count) {\n      const initialPages = Math.ceil(count / itemsOnPage);\n      setPageCount(initialPages >= 35 ? 34 : initialPages);\n    }\n  }, [count, itemsOnPage]);\n\n  const handleChange = (evt, value) => {\n    setPage(value);\n  };\n\n  return [page, pageCount, handleChange, setPage];\n}\n"],"names":["StyledContainer","styled","Container","_ref","alphascale","theme","margin","backgroundColor","alpha","concat","palette","primary","main","borderRadius","shape","padding","alignSelf","ContentContainer","_ref2","_ref2$alphascale","_ref2$shadow","shadow","_ref2$header","header","divider","blur","children","_jsxs","maxWidth","sx","boxShadow","backdropFilter","_jsx","Typography","variant","color","gutterBottom","Divider","NotFound","Stack","textAlign","Home","_useContext","useContext","UserContext","currentUser","navigate","_useContext2","DataContext","hotGames","getHotGames","useEffect","length","WelcomeMsg","Box","fontSize","width","HotGames","_Fragment","Grid","container","direction","spacing","item","map","i","game","GamesListItem","idx","clickFunc","gameID","id","isLastItem","dimensions","height","homepage","CircularLoading","paddingTop","PasswordAdornment","showPassword","handleShowPassword","InputAdornment","position","IconButton","onClick","onMouseDown","event","preventDefault","edge","VisibilityOff","Visibility","FormComponent","initialState","inputs","submitFunc","_useState","useState","_useState2","_slicedToArray","setShowPassword","_useState3","_useState4","isLoading","setIsLoading","isLogin","inputType","_useFields","useFields","_useFields2","formData","handleChange","formErrors","setFormErrors","show","handleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","result","wrap","_context","prev","next","sent","err","stop","_x","apply","arguments","FormBox","component","onSubmit","marginBottom","ErrorSpan","name","label","toUpperCase","slice","isPassword","FormControl","FormTextField","type","value","onChange","autoFocus","autoComplete","InputProps","endAdornment","helperText","required","display","Link","to","PrimaryButton","className","right","size","LoginForm","loginUser","username","password","SignUpForm","registerUser","email","ProfileSkeleton","BaseSkeleton","xs","marginTop","EditAvatar","imageURL","handleFileUpload","justifyContent","Avatar","src","InputLabel","htmlFor","Button","bgcolor","PhotoCamera","marginRight","TextField","hidden","EditProfile","open","setOpen","updateUser","userData","setFormData","handleClose","getChanges","formEntries","Object","entries","initialEntries","updateData","filter","_ref3","entry","_ref4","abrupt","msg","Dialog","onClose","bottom","DialogTitle","paddingBottom","DialogContent","file","target","files","reader","FileReader","onloadend","_objectSpread","readAsDataURL","DialogActions","CancelButton","CollectionComp","lazy","Profile","itemsOnPage","useParams","getCurrentUser","token","alignItems","marginLeft","Edit","Suspense","fallback","CollectionSkeleton","Navigate","ResultsSkeleton","skelItems","push","SearchResultsPage","_useParams","path","searchResults","getSearchResults","resultsHeader","getSearchHeader","pages","count","_usePagination","usePagination","_usePagination2","page","pageCount","setPage","searchObj","_defineProperty","keys","window","scrollTo","top","behavior","g","GameCard","ResultsPagination","AddButton","secondary","AddedBadgeBox","success","GameDescription","addGame","userGameIDs","inCollection","has","handleAddBtnClick","flex","Check","Add","paddingRight","year_published","PlayersAndDuration","min_players","max_players","min_playtime","max_playtime","image_url","alt","description_preview","Collapse","in","collapsedSize","ExpandLess","ExpandMore","GameDescSkeleton","StyledBox","common","black","VideoOverlay","title","Tooltip","textShadow","noWrap","YouTubeIcon","MediaCard","handleClick","isVideo","Card","CardActionArea","url","CardMedia","objectFit","image","MediaContainer","_ref$items","items","NoMediaMessage","paddingLeft","overflow","MediaSkeleton","DetailListItem","param","setSearchResults","setResultsHeader","textDecoration","cursor","transition","createData","data","undefined","StyledRow","TableRow","border","dark","GameDetails","MechanicsComps","CategoriesComps","rows","mechanics","m","categories","c","year","publisher","primary_publisher","artists","join","Table","TableBody","row","TableCell","scope","GameDetailsPage","checkGameCache","pathname","useLocation","NoGameFound","videos","AllRoutes","Routes","Route","element","StyledSkel","Skeleton","muted","animationDuration","_ref2$variant","_ref2$width","_ref2$height","animation","StyledTypography","getPlayers","useCallback","players","useMemo","getDuration","duration","Person","AccessTime","transform","StyledPagination","Pagination","text","_ref2$pageCount","onProfilePage","setGame","removeGame","quickAddBtn","Favorite","FavoriteBorder","trashBtn","Delete","console","log","thumbnail","CardContent","CardActions","disableSpacing","setPageCount","initialPages","Math","ceil","evt"],"sourceRoot":""}
{"version":3,"file":"static/js/170.4ce9a2fc.chunk.js","mappings":"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","sources":["components/common/ContentContainer.js","components/NotFound.js","components/Home.js","components/common/PasswordAdornment.js","components/common/FormComponent.js","components/account/LoginForm.js","components/account/SignUpForm.js","components/account/ProfileSkeleton.js","components/account/EditAvatar.js","components/account/EditProfile.js","components/account/Profile.js","components/search/ResultsSkeleton.js","components/search/SearchResultsPage.js","components/games/GameDescription.js","components/games/GameDescSkeleton.js","components/games/VideoOverlay.js","components/games/MediaCard.js","components/games/MediaContainer.js","components/games/MediaSkeleton.js","components/games/DetailListItem.js","components/games/GameDetails.js","components/games/GameDetailsPage.js","AllRoutes.js","components/common/BaseSkeleton.js","components/common/PlayersAndDuration.js","components/common/ResultsPagination.js","components/games/CollectionSkeleton.js","components/games/GameCard.js","hooks/usePagination.js"],"sourcesContent":["import React from 'react';\nimport { Container, Typography, Divider, alpha } from '@mui/material';\nimport styled from '@emotion/styled';\n\nconst StyledContainer = styled(Container)(({ alphascale, theme }) => ({\n  margin: 0,\n  backgroundColor: alpha(`${theme.palette.primary.main}`, alphascale),\n  borderRadius: theme.shape.borderRadius,\n  padding: '1.5rem',\n  alignSelf: 'center',\n}));\n\nexport default function ContentContainer({\n  alphascale = 1,\n  shadow = 'none',\n  header = null,\n  divider,\n  blur,\n  children,\n}) {\n  return (\n    <StyledContainer\n      maxWidth={'lg'}\n      alphascale={alphascale}\n      sx={{\n        boxShadow: shadow,\n        backdropFilter: blur ? `blur(7px)` : 'none',\n      }}\n    >\n      {header ? (\n        <Typography\n          variant={'h5'}\n          sx={{\n            color: 'secondary.main',\n          }}\n          gutterBottom\n        >\n          {header}\n        </Typography>\n      ) : null}\n      {divider ? <Divider sx={{ color: 'primary.muted' }} /> : null}\n      {children}\n    </StyledContainer>\n  );\n}\n","import React from 'react';\nimport { Typography, Stack } from '@mui/material';\nimport ContentContainer from './common/ContentContainer';\n\nexport default function NotFound() {\n  return (\n    <Stack>\n      <ContentContainer>\n        <Typography\n          variant='h5'\n          sx={{ color: 'primary.text', textAlign: 'center' }}\n        >\n          404 Sorry, can't find what you're looking for.\n        </Typography>\n      </ContentContainer>\n    </Stack>\n  );\n}\n","import React, { useContext } from 'react';\nimport UserContext from '../context/UserContext';\nimport { Stack, Typography, Box } from '@mui/material';\nimport ContentContainer from './common/ContentContainer';\n\nexport default function Home() {\n  const { currentUser } = useContext(UserContext);\n  return (\n    <Stack sx={{ paddingTop: 10 }}>\n      <ContentContainer\n        shadow={2}\n        alphascale={0.4}\n        blur\n      >\n        <Box\n          sx={{\n            padding: '1rem',\n            border: '1px solid',\n            borderColor: 'primary.text',\n          }}\n        >\n          <Box\n            sx={{\n              color: 'primary.text',\n              fontSize: '1.2rem',\n              width: 800,\n              margin: 'auto',\n            }}\n          >\n            <Typography\n              variant='h5'\n              gutterBottom\n            >\n              {currentUser\n                ? `Welcome back, ${currentUser}!`\n                : 'Welcome to MyGameNights!'}\n            </Typography>\n            <p>\n              You can browse an extensive library of games by searching for\n              titles, mechanics, or categories.\n            </p>\n            <p>\n              If you’re tired of rummaging through your closets to decide what\n              game you want to play, create a profile and use MyGameNights to\n              compile a digital library of all your games. Your personal\n              collection is now complete with pictures, videos, and resources to\n              jog your memory when you’ve forgotten the rules or to help you\n              decide what to play. There’s even an estimated value feature so\n              you can flex on your friends!\n            </p>\n            <p>\n              MyGameNights makes it easy to find new games using a mechanic you\n              love, expansions for your tried and true staples, or games built\n              around your favorite franchise. (Star Wars anyone?)\n            </p>\n            <p>\n              Click around. Have fun. Build your collection. Game night has\n              never been better.\n            </p>\n          </Box>\n        </Box>\n      </ContentContainer>\n    </Stack>\n  );\n}\n","import React from 'react';\nimport { InputAdornment, IconButton } from '@mui/material';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\n\nexport default function PasswordAdornment({\n  showPassword,\n  handleShowPassword,\n}) {\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n  return (\n    <InputAdornment position='end'>\n      <IconButton\n        aria-label='toggle password visibility'\n        onClick={handleShowPassword}\n        onMouseDown={handleMouseDownPassword}\n        edge='end'\n        sx={{ color: 'primary.muted' }}\n      >\n        {showPassword ? <VisibilityOff /> : <Visibility />}\n      </IconButton>\n    </InputAdornment>\n  );\n}\n","import React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport UserContext from '../../context/UserContext';\nimport { FormControl, Stack, Typography, Box } from '@mui/material';\nimport { FormBox, FormTextField, ErrorSpan } from '../styled';\nimport ContentContainer from './ContentContainer';\nimport PasswordAdornment from './PasswordAdornment';\nimport { PrimaryButton } from '../styled';\nimport useFields from '../../hooks/useFields';\nimport CircularLoading from './CircularLoading';\n\nexport default function FormComponent({\n  header,\n  initialState,\n  inputs,\n  submitFunc,\n}) {\n  const [showPassword, setShowPassword] = useState(false);\n  const { navigate } = useContext(UserContext);\n  const [isLoading, setIsLoading] = useState(false);\n  const isLogin = header === 'Login';\n\n  const inputType = showPassword ? 'text' : 'password';\n\n  const [formData, handleChange, formErrors, setFormErrors] =\n    useFields(initialState);\n\n  // handle showPassword toggle\n  const handleShowPassword = () => setShowPassword((show) => !show);\n\n  // handle form submit\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    // POST request in submitFunc with formData\n    const result = await submitFunc(formData);\n    if (result) {\n      // if errors in POST request\n      setFormErrors(result.err);\n      setIsLoading(false);\n    } else {\n      setIsLoading(false);\n      navigate('/');\n    }\n  };\n\n  return (\n    <Stack sx={{ paddingTop: 10 }}>\n      <ContentContainer\n        alphascale={0.4}\n        blur\n      >\n        <FormBox\n          component='form'\n          onSubmit={handleSubmit}\n        >\n          <Typography\n            variant='h5'\n            sx={{ color: 'primary.text' }}\n          >\n            {header}\n          </Typography>\n\n          <Box sx={{ height: 24, width: 400, marginBottom: '.4rem' }}>\n            {typeof formErrors[0] === 'string' ? (\n              <ErrorSpan>{formErrors[0]}</ErrorSpan>\n            ) : null}\n          </Box>\n\n          <Stack spacing={3}>\n            {inputs.map((name, idx) => {\n              const firstLetter = name[0].toUpperCase();\n              const label = firstLetter.concat(name.slice(1));\n              const isPassword = name === 'password';\n\n              return (\n                <FormControl key={name}>\n                  <FormTextField\n                    variant='outlined'\n                    label={label}\n                    type={isPassword ? inputType : 'text'}\n                    name={name}\n                    value={formData[name]}\n                    onChange={handleChange}\n                    autoFocus={idx === 0}\n                    autoComplete={isPassword ? 'current-password' : ''}\n                    InputProps={{\n                      endAdornment: isPassword ? (\n                        <PasswordAdornment\n                          showPassword={showPassword}\n                          handleShowPassword={handleShowPassword}\n                        />\n                      ) : null,\n                    }}\n                    helperText={\n                      formErrors.length && !isLogin ? (\n                        <ErrorSpan>{formErrors[0][name]}</ErrorSpan>\n                      ) : null\n                    }\n                    required\n                  />\n                </FormControl>\n              );\n            })}\n\n            {isLogin ? (\n              <Box sx={{ height: 56, display: 'flex' }}>\n                <Typography\n                  sx={{\n                    textAlign: 'center',\n                    color: 'primary.text',\n                    margin: 'auto',\n                  }}\n                >\n                  Don't have an account yet? Sign in\n                  <Link to={'/signup'}> here.</Link>\n                </Typography>\n              </Box>\n            ) : null}\n\n            <PrimaryButton\n              variant='contained'\n              type='submit'\n              className='main-button'\n            >\n              Submit\n              {isLoading ? (\n                <Box\n                  sx={{\n                    position: 'absolute',\n                    right: 20,\n                  }}\n                >\n                  <CircularLoading\n                    size='1.3rem'\n                    color='primary.dark'\n                  />\n                </Box>\n              ) : null}\n            </PrimaryButton>\n          </Stack>\n        </FormBox>\n      </ContentContainer>\n    </Stack>\n  );\n}\n","import React from 'react';\nimport FormComponent from '../common/FormComponent';\n\nexport default function LoginForm({ loginUser }) {\n  const initialState = {\n    username: '',\n    password: '',\n  };\n\n  return (\n    <FormComponent\n      header={'Login'}\n      initialState={initialState}\n      inputs={['username', 'password']}\n      submitFunc={loginUser}\n    />\n  );\n}\n","import React from 'react';\nimport FormComponent from '../common/FormComponent';\n\nexport default function SignUpForm({ registerUser }) {\n  const initialState = {\n    username: '',\n    password: '',\n    email: '',\n  };\n\n  return (\n    <FormComponent\n      header={'Sign Up'}\n      initialState={initialState}\n      inputs={['username', 'password', 'email']}\n      submitFunc={registerUser}\n    />\n  );\n}\n","import React from 'react';\nimport { Grid } from '@mui/material';\nimport BaseSkeleton from '../common/BaseSkeleton';\n\nexport default function ProfileSkeleton() {\n  return (\n    <>\n      <Grid item>\n        <BaseSkeleton\n          variant='circular'\n          width={120}\n          height={120}\n        />\n      </Grid>\n      <Grid\n        item\n        xs={8}\n        marginTop={'auto'}\n      >\n        <BaseSkeleton />\n      </Grid>\n    </>\n  );\n}\n","import React from 'react';\nimport {\n  Grid,\n  Avatar,\n  Box,\n  Button,\n  InputLabel,\n  TextField,\n} from '@mui/material';\nimport { PhotoCamera } from '@mui/icons-material';\n\nexport default function EditAvatar({ imageURL, handleFileUpload }) {\n  return (\n    <Grid\n      container\n      direction={'row'}\n      justifyContent={'space-between'}\n    >\n      <Grid item>\n        <Avatar\n          src={imageURL}\n          sx={{\n            width: 120,\n            height: 120,\n          }}\n        />\n      </Grid>\n      <Grid\n        item\n        sx={{ display: 'flex' }}\n      >\n        <Box sx={{ marginTop: 'auto' }}>\n          <InputLabel htmlFor='imageURL'>\n            <Button\n              variant='contained'\n              component='span'\n              className='main-button'\n              sx={{\n                bgcolor: 'primary.dark',\n                '&:hover': {\n                  bgcolor: 'secondary.main',\n                  color: 'primary.main',\n                },\n              }}\n            >\n              <PhotoCamera\n                fontSize='small'\n                sx={{ marginRight: 1 }}\n              />\n              Upload Image\n            </Button>\n            <TextField\n              id='imageURL'\n              type='file'\n              hidden\n              onChange={handleFileUpload}\n            />\n          </InputLabel>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useContext, useEffect } from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Stack,\n  FormControl,\n  Box,\n} from '@mui/material';\nimport {\n  FormTextField,\n  PrimaryButton,\n  CancelButton,\n  ErrorSpan,\n} from '../styled';\nimport useFields from '../../hooks/useFields';\nimport UserContext from '../../context/UserContext';\nimport EditAvatar from './EditAvatar';\n\nexport default function EditProfile({ open, setOpen, username }) {\n  const { updateUser, userData } = useContext(UserContext);\n\n  const [formData, handleChange, formErrors, setFormErrors, setFormData] =\n    useFields(userData);\n\n  // handle closing of dialog box\n  const handleClose = () => {\n    setFormErrors([]);\n    setFormData(userData);\n    setOpen(false);\n  };\n\n  // handle file uploading of imageURL\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n\n    reader.onloadend = () => {\n      setFormData({ ...formData, imageURL: reader.result });\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  /** Check for changes in edit form\n   *\n   * @param {*} formData { username, email, imageURL }\n   * @param {*} userData { username, email, imageURL }\n   * @returns {*} { username: 'newUser' }\n   *\n   * maps entries of formData and compare values\n   *  against userData values\n   *\n   * if no changes, return -1\n   *\n   * example --\n   *\n   * userData = { username: 'testUser', email: 'me@me.com', imageURL: 'someImageURL' }\n   *\n   * formData = { username: 'newUser', email: 'me@me.com', imageURL: 'someImageURL' }\n   */\n  const getChanges = (formData, userData) => {\n    const formEntries = Object.entries(formData);\n    const initialEntries = Object.entries(userData);\n    const updateData = {};\n\n    const entries = formEntries.filter(\n      ([key, val], idx) => val !== initialEntries[idx][1]\n    );\n\n    if (!entries.length) return -1;\n\n    entries.map((entry) => (updateData[entry[0]] = entry[1]));\n\n    return updateData;\n  };\n\n  // handle form submit\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // check for any changes\n    const updateData = getChanges(formData, userData);\n\n    if (updateData === -1) return handleClose();\n\n    // Patch request with updated data\n    const result = await updateUser(updateData, username);\n\n    if (result) {\n      setFormErrors(result.msg);\n    } else {\n      handleClose();\n    }\n  };\n\n  useEffect(() => {\n    setFormData(userData);\n  }, [userData, setFormData]);\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      sx={{\n        '& .MuiPaper-root': {\n          bottom: '5rem',\n          bgcolor: 'primary.main',\n          width: 600,\n          padding: '0rem 4rem 1rem 4rem',\n        },\n      }}\n    >\n      <DialogTitle\n        fontSize={'1.5rem'}\n        sx={{ color: 'primary.text', paddingBottom: 0 }}\n      >\n        Edit Profile\n      </DialogTitle>\n      <DialogContent>\n        <Box sx={{ height: 24, width: 400, marginBottom: '.4rem' }}>\n          {typeof formErrors[0] === 'string' ? (\n            <ErrorSpan>{formErrors[0]}</ErrorSpan>\n          ) : null}\n        </Box>\n        <Stack spacing={3}>\n          <EditAvatar\n            imageURL={formData.imageURL}\n            handleFileUpload={handleFileUpload}\n          />\n          {['username', 'email'].map((name) => {\n            const firstLetter = name[0].toUpperCase();\n            const label = firstLetter.concat(name.slice(1));\n\n            return (\n              <FormControl key={name}>\n                <FormTextField\n                  variant='outlined'\n                  label={label}\n                  type={'text'}\n                  name={name}\n                  value={formData[name]}\n                  onChange={handleChange}\n                  helperText={\n                    formErrors.length && typeof formErrors[0] !== 'string' ? (\n                      <ErrorSpan>{formErrors[0][name]}</ErrorSpan>\n                    ) : null\n                  }\n                />\n              </FormControl>\n            );\n          })}\n        </Stack>\n      </DialogContent>\n      <DialogActions sx={{ marginRight: 'auto', padding: '5px 0px 0px 24px' }}>\n        <CancelButton\n          variant='outlined'\n          onClick={handleClose}\n          className='main-button'\n        >\n          Cancel\n        </CancelButton>\n        <PrimaryButton\n          variant='contained'\n          onClick={handleSubmit}\n          className='main-button'\n        >\n          Submit\n        </PrimaryButton>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useContext, useEffect, useState, lazy, Suspense } from 'react';\nimport { useParams, Navigate } from 'react-router-dom';\nimport UserContext from '../../context/UserContext';\nimport {\n  Stack,\n  Typography,\n  Grid,\n  Avatar,\n  Button,\n  Divider,\n} from '@mui/material';\nimport { Edit } from '@mui/icons-material';\nimport ContentContainer from '../common/ContentContainer';\nimport ProfileSkeleton from './ProfileSkeleton';\nimport CollectionSkeleton from '../games/CollectionSkeleton';\nimport EditProfile from './EditProfile';\n\nconst CollectionComp = lazy(() => import('../games/Collection'));\n\nexport default function Profile({ itemsOnPage }) {\n  const { username } = useParams();\n  const { currentUser, getCurrentUser, userData, token } =\n    useContext(UserContext);\n\n  const [open, setOpen] = useState(false);\n\n  const handleEditClick = () => {\n    setOpen(true);\n  };\n\n  useEffect(() => {\n    // GET request for userData\n    if (!userData && currentUser) getCurrentUser(username);\n    // eslint-disable-next-line\n  }, [currentUser, getCurrentUser]);\n\n  if (!token) return <Navigate to={'/login'} />;\n\n  return (\n    <Stack>\n      <ContentContainer>\n        <Grid\n          container\n          spacing={2}\n          direction={'row'}\n          alignItems={'flex-end'}\n        >\n          {userData ? (\n            <>\n              <EditProfile\n                open={open}\n                setOpen={setOpen}\n                username={username}\n              />\n              <Grid item>\n                <Avatar\n                  src={userData.imageURL}\n                  sx={{ width: 120, height: 120 }}\n                />\n              </Grid>\n              <Grid item>\n                <Typography\n                  variant='h5'\n                  color={'secondary.main'}\n                >\n                  {userData.username}\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                marginLeft={'auto'}\n              >\n                <Button\n                  size='small'\n                  onClick={handleEditClick}\n                >\n                  <Edit\n                    fontSize='medium'\n                    sx={{\n                      color: 'secondary.main',\n                      marginLeft: 2,\n                    }}\n                  />\n                </Button>\n              </Grid>\n            </>\n          ) : (\n            <ProfileSkeleton />\n          )}\n          <Grid\n            item\n            xs={12}\n          >\n            <Divider sx={{ color: 'primary.muted' }} />\n          </Grid>\n        </Grid>\n        <Suspense fallback={<CollectionSkeleton itemsOnPage={itemsOnPage} />}>\n          <CollectionComp itemsOnPage={itemsOnPage} />\n        </Suspense>\n      </ContentContainer>\n    </Stack>\n  );\n}\n","import React from 'react';\nimport { Grid } from '@mui/material';\nimport BaseSkeleton from '../common/BaseSkeleton';\n\nexport default function ResultsSkeleton({ itemsOnPage, currentUser }) {\n  let skelItems = [];\n\n  for (let i = 0; i < itemsOnPage; i++) {\n    skelItems.push(\n      <Grid\n        item\n        key={i}\n      >\n        <BaseSkeleton\n          width={345}\n          height={currentUser ? 383 : 328}\n          shadow={1}\n        />\n      </Grid>\n    );\n  }\n\n  return <>{skelItems.map((i) => i)}</>;\n}\n","import React, { useContext, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport DataContext from '../../context/DataContext';\nimport UserContext from '../../context/UserContext';\nimport { Stack, Grid } from '@mui/material';\nimport ContentContainer from '../common/ContentContainer';\nimport GameCard from '../games/GameCard';\nimport ResultsPagination from '../common/ResultsPagination';\nimport usePagination from '../../hooks/usePagination';\nimport ResultsSkeleton from './ResultsSkeleton';\nimport BaseSkeleton from '../common/BaseSkeleton';\n\nexport default function SearchResultsPage({ itemsOnPage }) {\n  const { path, id } = useParams();\n  const { searchResults, getSearchResults, resultsHeader, getSearchHeader } =\n    useContext(DataContext);\n  const { currentUser } = useContext(UserContext);\n  const { pages, count } = searchResults;\n\n  const [page, pageCount, handleChange, setPage] = usePagination(\n    count,\n    itemsOnPage\n  );\n\n  useEffect(() => {\n    // if no header, gets header\n    if (!resultsHeader) getSearchHeader(id);\n  }, [resultsHeader, getSearchHeader, id]);\n\n  useEffect(() => {\n    // get search results from params\n    const searchObj = { [path]: id };\n    if (!Object.keys(pages).length) {\n      // no content in pages set page to 1\n      setPage(1);\n      // GET request for search results\n      getSearchResults(searchObj);\n    } else {\n      if (!pages[page]) {\n        // Get request for pagination skip amount\n        const skipAmount = (page - 1) * itemsOnPage;\n        getSearchResults(searchObj, page, skipAmount);\n      }\n    }\n    window.scrollTo({ top: 0, behavior: 'instant' });\n  }, [getSearchResults, page, setPage, itemsOnPage, pages, id, path]);\n\n  const gridItemComp = (game) => (\n    <Grid\n      item\n      key={game.id}\n    >\n      <GameCard game={game} />\n    </Grid>\n  );\n\n  const header = `Results for \"${resultsHeader}\"`;\n\n  return (\n    <Stack>\n      <ContentContainer\n        header={\n          resultsHeader ? (\n            header\n          ) : (\n            <BaseSkeleton\n              width={'30ch'}\n              height='2.5rem'\n            />\n          )\n        }\n        divider\n      >\n        <Grid\n          container\n          spacing={3}\n          padding={'1.5rem'}\n          direction={'row'}\n          justifyContent={'center'}\n        >\n          {pages[page] ? (\n            pages[page].map((g) => gridItemComp(g))\n          ) : (\n            <ResultsSkeleton\n              itemsOnPage={itemsOnPage}\n              currentUser={currentUser}\n            />\n          )}\n        </Grid>\n        {pageCount > 1 ? (\n          <ResultsPagination\n            page={page}\n            handleChange={handleChange}\n            pageCount={pageCount}\n          />\n        ) : null}\n      </ContentContainer>\n    </Stack>\n  );\n}\n","import React, { useState, useContext } from 'react';\nimport DataContext from '../../context/DataContext';\nimport UserContext from '../../context/UserContext';\nimport {\n  Box,\n  Typography,\n  Collapse,\n  Divider,\n  Grid,\n  Button,\n  Stack,\n} from '@mui/material';\nimport { ExpandMore, ExpandLess, Add, Check } from '@mui/icons-material';\nimport PlayersAndDuration from '../common/PlayersAndDuration';\nimport styled from '@emotion/styled';\nimport ContentContainer from '../common/ContentContainer';\nimport CircularLoading from '../common/CircularLoading';\n\nconst AddButton = styled(Button)(({ theme }) => ({\n  color: theme.palette.secondary.main,\n  '&:hover': {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.primary.main,\n  },\n}));\n\nconst AddedBadgeBox = styled(Box)(({ theme }) => ({\n  color: theme.palette.success.main,\n  display: 'flex',\n}));\n\nexport default function GameDescription({ game }) {\n  const [open, setOpen] = useState(false);\n  const { addGame } = useContext(DataContext);\n  const { currentUser, userGameIDs } = useContext(UserContext);\n  const inCollection = userGameIDs ? userGameIDs.has(game.id) : false;\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleDescBtnClick = () => {\n    setOpen(!open);\n  };\n\n  const handleAddBtnClick = async () => {\n    setIsLoading(true);\n    // POST request to server to add game\n    await addGame(game);\n    setIsLoading(false);\n  };\n\n  const AddButtonComp = () => (\n    <AddButton\n      variant='text'\n      onClick={handleAddBtnClick}\n      className='main-button'\n    >\n      <Add fontSize='small' />\n\n      <Typography paddingRight={1}>Add to collection</Typography>\n\n      {isLoading ? (\n        <CircularLoading\n          size='1rem'\n          color='primary.dark'\n        />\n      ) : (\n        <Box width={'1rem'} />\n      )}\n    </AddButton>\n  );\n\n  const AddedBadgeComp = () => (\n    <AddedBadgeBox>\n      <Typography margin={1}>In Collection</Typography>\n      <Typography padding={'.3rem'}>\n        <Check />\n      </Typography>\n    </AddedBadgeBox>\n  );\n\n  return (\n    <ContentContainer>\n      <Box display={'flex'}>\n        <Typography\n          variant={'h4'}\n          sx={{\n            color: 'secondary.main',\n            flex: 1,\n          }}\n        >\n          {game.name}\n        </Typography>\n        {currentUser\n          ? inCollection && !isLoading\n            ? AddedBadgeComp()\n            : AddButtonComp()\n          : null}\n      </Box>\n      <Grid\n        sx={{\n          color: 'primary.text',\n          padding: '.3rem',\n        }}\n        container\n        direction={'row'}\n        spacing={3}\n      >\n        <Grid item>{game.year_published}</Grid>\n        <PlayersAndDuration\n          min_players={game.min_players}\n          max_players={game.max_players}\n          min_playtime={game.min_playtime}\n          max_playtime={game.max_playtime}\n        />\n      </Grid>\n      <Divider sx={{ color: 'primary.muted' }} />\n      <Grid\n        container\n        direction={'row'}\n        padding={'1.2rem'}\n      >\n        <Grid\n          item\n          xs={4}\n        >\n          <img\n            width={300}\n            height={300}\n            src={game.image_url}\n            alt={game.name}\n          />\n        </Grid>\n        <Grid\n          item\n          xs={7}\n        >\n          {game.description_preview ? (\n            game.description_preview.length <= 900 ? (\n              <Typography\n                sx={{\n                  color: 'primary.text',\n                }}\n              >\n                {game.description_preview}\n              </Typography>\n            ) : (\n              <Stack>\n                <Collapse\n                  in={open}\n                  collapsedSize={265}\n                >\n                  <Typography\n                    sx={{\n                      color: 'primary.text',\n                    }}\n                  >\n                    {game.description_preview}\n                  </Typography>\n                </Collapse>\n                <Button\n                  sx={{\n                    height: '1.5rem',\n                    color: 'secondary.main',\n                    '&:hover': {\n                      backgroundColor: 'secondary.main',\n                      color: 'primary.main',\n                    },\n                  }}\n                  variant='text'\n                  onClick={handleDescBtnClick}\n                >\n                  {open ? (\n                    <ExpandLess fontSize='large' />\n                  ) : (\n                    <ExpandMore fontSize='large' />\n                  )}\n                </Button>\n              </Stack>\n            )\n          ) : null}\n        </Grid>\n      </Grid>\n    </ContentContainer>\n  );\n}\n","import React from 'react';\nimport { Stack, Grid, Divider, Typography } from '@mui/material';\nimport BaseSkeleton from '../common/BaseSkeleton';\nimport ContentContainer from '../common/ContentContainer';\n\nexport default function GameDescSkeleton() {\n  return (\n    <ContentContainer>\n      <Typography variant='h4'>\n        <BaseSkeleton width='40ch' />\n      </Typography>\n      <Grid\n        container\n        direction={'row'}\n        spacing={3}\n        sx={{\n          padding: '.3rem',\n        }}\n      >\n        <Grid item>\n          <BaseSkeleton width={220} />\n        </Grid>\n      </Grid>\n      <Divider />\n      <Grid\n        container\n        direction={'row'}\n        padding={'1.2rem'}\n      >\n        <Grid\n          item\n          xs={4}\n        >\n          <BaseSkeleton\n            width={300}\n            height={300}\n          />\n        </Grid>\n        <Grid\n          item\n          xs={7}\n        >\n          <Stack spacing={2.5}>\n            <BaseSkeleton width='65ch' />\n            <BaseSkeleton width='60ch' />\n            <BaseSkeleton width='50ch' />\n            <BaseSkeleton width='65ch' />\n            <BaseSkeleton width='50ch' />\n            <BaseSkeleton width='55ch' />\n          </Stack>\n        </Grid>\n      </Grid>\n    </ContentContainer>\n  );\n}\n","import React from 'react';\nimport { Box, Typography, alpha, Tooltip } from '@mui/material';\nimport styled from '@emotion/styled';\nimport YouTubeIcon from '@mui/icons-material/YouTube';\n\nconst StyledBox = styled(Box)(({ theme }) => ({\n  position: 'absolute',\n  backgroundColor: alpha(theme.palette.common.black, 0.6),\n  width: '100%',\n  height: '100%',\n  textAlign: 'center',\n  padding: '.5rem',\n}));\n\nexport default function VideoOverlay({ title }) {\n  return (\n    <Tooltip title={title}>\n      <StyledBox>\n        <Typography\n          sx={{\n            color: 'secondary.main',\n            textShadow: '2px 1px 1px solid black',\n          }}\n          variant='h5'\n          noWrap\n        >\n          {title}\n        </Typography>\n        <Box\n          sx={{\n            marginTop: '1rem',\n            color: 'red',\n          }}\n        >\n          <YouTubeIcon\n            sx={{\n              fontSize: '5rem',\n            }}\n          />\n        </Box>\n      </StyledBox>\n    </Tooltip>\n  );\n}\n","import React from 'react';\nimport { CardMedia, Card, CardActionArea } from '@mui/material';\nimport VideoOverlay from './VideoOverlay';\n\nexport default function MediaCard({\n  item,\n  size,\n  width,\n  height,\n  handleClick,\n  isVideo,\n}) {\n  return (\n    <Card\n      sx={{\n        height: height,\n        width: width,\n        boxShadow: 0,\n      }}\n    >\n      <CardActionArea onClick={() => handleClick(item.url)}>\n        {isVideo ? <VideoOverlay title={item.title} /> : null}\n        <CardMedia\n          sx={{\n            height: height,\n            width: width,\n            objectFit: 'fill',\n          }}\n          component='img'\n          image={item[size] || item.image_url}\n          alt={item.name || item.title}\n        />\n      </CardActionArea>\n    </Card>\n  );\n}\n","import React from 'react';\nimport { Grid, Typography } from '@mui/material';\nimport MediaCard from './MediaCard';\nimport ContentContainer from '../common/ContentContainer';\n\nexport default function MediaContainer({ items, isVideo }) {\n  const handleClick = (url) => {\n    window.open(url, '_blank');\n  };\n\n  const header = isVideo ? 'Videos' : 'Images';\n\n  const ImageCardComponent = (item) => (\n    <MediaCard\n      item={item}\n      size={'medium'}\n      height={200}\n      width={200}\n      handleClick={handleClick}\n    />\n  );\n\n  const VideoCardComponent = (item) => (\n    <MediaCard\n      item={item}\n      height={200}\n      width={300}\n      handleClick={handleClick}\n      isVideo\n    />\n  );\n\n  const NoMediaMessage = () => (\n    <Typography\n      variant='h5'\n      color={'primary.text'}\n      paddingLeft={5}\n    >\n      Sorry, no {header.toLowerCase()} uploaded yet.\n    </Typography>\n  );\n\n  return (\n    <ContentContainer\n      header={header}\n      divider\n    >\n      <Grid\n        sx={{\n          alignItems: 'center',\n          height: 220,\n          overflow: 'auto',\n          marginTop: '.3rem',\n        }}\n        container\n        direction={'row'}\n        spacing={2}\n      >\n        {items.length ? (\n          items.map((i) => (\n            <Grid\n              key={i.id}\n              item\n              justifyContent={'center'}\n            >\n              {isVideo ? VideoCardComponent(i) : ImageCardComponent(i)}\n            </Grid>\n          ))\n        ) : (\n          <NoMediaMessage />\n        )}\n      </Grid>\n    </ContentContainer>\n  );\n}\n","import React from 'react';\nimport { Grid } from '@mui/material';\nimport BaseSkeleton from '../common/BaseSkeleton';\nimport ContentContainer from '../common/ContentContainer';\n\nexport default function MediaSkeleton({ isVideo }) {\n  const height = 200;\n  const width = isVideo ? 300 : 200;\n  const header = isVideo ? 'Videos' : 'Images';\n  return (\n    <ContentContainer\n      header={header}\n      divider\n    >\n      <Grid\n        sx={{\n          alignItems: 'center',\n          height: 220,\n          overflow: 'auto',\n          marginTop: '.3rem',\n        }}\n        container\n        direction={'row'}\n        spacing={2}\n      >\n        <Grid item>\n          <BaseSkeleton\n            height={height}\n            width={width}\n          />\n        </Grid>\n        <Grid item>\n          <BaseSkeleton\n            height={height}\n            width={width}\n          />\n        </Grid>\n        <Grid item>\n          <BaseSkeleton\n            height={height}\n            width={width}\n          />\n        </Grid>\n      </Grid>\n    </ContentContainer>\n  );\n}\n","import React, { useContext } from 'react';\nimport DataContext from '../../context/DataContext';\nimport UserContext from '../../context/UserContext';\nimport { Link } from '@mui/material';\nimport { Typography, Grid } from '@mui/material';\n\nexport default function DetailListItem({ param, item, isLastItem }) {\n  const { setSearchResults, setResultsHeader, resultsHeader } =\n    useContext(DataContext);\n  const { navigate } = useContext(UserContext);\n\n  // handle list item click\n  const handleClick = () => {\n    if (resultsHeader !== item.name) {\n      // clear previous results\n      setSearchResults({ pages: {} });\n      setResultsHeader('');\n    }\n    navigate(`/search/${param}/${item.id}`);\n  };\n  return (\n    <Grid item>\n      <Link\n        onClick={handleClick}\n        variant='subtitle1'\n        sx={{\n          textDecoration: 'none',\n          cursor: 'pointer',\n        }}\n        aria-label={`search ${param} ${item.name}`}\n      >\n        <Typography\n          sx={{\n            color: 'primary.text',\n            transition: 'all 250ms',\n            '&:hover': {\n              color: 'secondary.main',\n            },\n          }}\n        >\n          {isLastItem ? item.name : item.name + ','}\n        </Typography>\n      </Link>\n    </Grid>\n  );\n}\n","import React from 'react';\nimport { Table, TableBody, TableCell, TableRow, Grid } from '@mui/material';\nimport DetailListItem from './DetailListItem';\nimport styled from '@emotion/styled';\nimport ContentContainer from '../common/ContentContainer';\n\n// create data for rows in table\nconst createData = (name, data = 'N/A') => {\n  return { name, data };\n};\n\nconst StyledRow = styled(TableRow)(({ theme }) => ({\n  backgroundColor: theme.palette.primary.main,\n  '& td, & th': {\n    border: 0,\n  },\n  '&:nth-of-type(odd)': {\n    backgroundColor: theme.palette.primary.dark,\n  },\n}));\n\nexport default function GameDetails({ game }) {\n  let MechanicsComps;\n  let CategoriesComps;\n  let rows;\n\n  if (game) {\n    if (game.mechanics.length) {\n      MechanicsComps = game.mechanics.map((m, idx) => (\n        <DetailListItem\n          key={idx}\n          param={'mechanics'}\n          item={m}\n          isLastItem={game.mechanics.length - 1 === idx}\n        />\n      ));\n    }\n\n    if (game.categories.length) {\n      CategoriesComps = game.categories.map((c, idx) => (\n        <DetailListItem\n          key={idx}\n          param={'categories'}\n          item={c}\n          isLastItem={game.categories.length - 1 === idx}\n        />\n      ));\n    }\n\n    const year = game.year_published ? game.year_published : 'N/A';\n    const publisher = game.primary_publisher\n      ? game.primary_publisher.name\n      : 'N/A';\n    const artists = game.artists.length ? game.artists.join(', ') : 'N/A';\n\n    rows = [\n      createData('Year Published', year),\n      createData('Publisher', publisher),\n      createData(\n        'Mechanics',\n        <Grid\n          container\n          spacing={2}\n          direction={'row'}\n        >\n          {MechanicsComps}\n        </Grid>\n      ),\n      createData(\n        'Categories',\n        <Grid\n          container\n          spacing={2}\n          direction={'row'}\n        >\n          {CategoriesComps}\n        </Grid>\n      ),\n      createData('Artists', artists),\n    ];\n  }\n  return (\n    <ContentContainer header='Details'>\n      <Table>\n        <TableBody>\n          {rows\n            ? rows.map((row, idx) => (\n                <StyledRow key={idx}>\n                  <TableCell\n                    component='th'\n                    scope='row'\n                    sx={{\n                      width: '35ch',\n                      color: 'primary.text',\n                      fontSize: '1.2rem',\n                    }}\n                  >\n                    {row.name}\n                  </TableCell>\n                  <TableCell\n                    sx={{\n                      color: 'primary.text',\n                      fontSize: '1.1rem',\n                    }}\n                  >\n                    {row.data}\n                  </TableCell>\n                </StyledRow>\n              ))\n            : null}\n        </TableBody>\n      </Table>\n    </ContentContainer>\n  );\n}\n","import React, { useEffect, useContext, useState } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport DataContext from '../../context/DataContext';\nimport { Stack, Typography } from '@mui/material';\nimport ContentContainer from '../common/ContentContainer';\nimport GameDescription from './GameDescription';\nimport GameDescSkeleton from './GameDescSkeleton';\nimport MediaContainer from './MediaContainer';\nimport MediaSkeleton from './MediaSkeleton';\nimport GameDetails from './GameDetails';\n\nexport default function GameDetailsPage() {\n  const { game, checkGameCache } = useContext(DataContext);\n  const gameID = useParams().id;\n  const { pathname } = useLocation();\n  const [images, setImages] = useState('');\n  const [videos, setVideos] = useState('');\n\n  useEffect(() => {\n    // if no media on game obj check cache for game obj with media\n    if (!game.videos || game.id !== gameID) {\n      setImages('');\n      setVideos('');\n      // GET request to check cache for game\n      checkGameCache(gameID);\n    }\n    if (game.detail_images) setImages(game.detail_images);\n    if (game.videos) setVideos(game.videos);\n    // eslint-disable-next-line\n  }, [game, pathname]);\n\n  const NoGameFound = () => (\n    <Stack>\n      <ContentContainer>\n        <Typography\n          variant='h5'\n          textAlign={'center'}\n          color={'primary.text'}\n        >\n          Sorry, no game found with ID '{gameID}'.\n        </Typography>\n      </ContentContainer>\n    </Stack>\n  );\n\n  if (gameID.length < 10) return <NoGameFound />;\n\n  return (\n    <Stack spacing={'.3rem'}>\n      {game.videos ? <GameDescription game={game} /> : <GameDescSkeleton />}\n      {images ? <MediaContainer items={images} /> : <MediaSkeleton />}\n      {videos ? (\n        <MediaContainer\n          items={videos}\n          isVideo\n        />\n      ) : (\n        <MediaSkeleton isVideo />\n      )}\n      <GameDetails game={game} />\n    </Stack>\n  );\n}\n","import React, { useContext } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport UserContext from './context/UserContext';\nimport NotFound from './components/NotFound';\nimport Home from './components/Home';\nimport LoginForm from './components/account/LoginForm';\nimport SignUpForm from './components/account/SignUpForm';\nimport Profile from './components/account/Profile';\nimport SearchResultsPage from './components/search/SearchResultsPage';\nimport GameDetailsPage from './components/games/GameDetailsPage';\n\nexport default function AllRoutes() {\n  const { loginUser, registerUser } = useContext(UserContext);\n  return (\n    <Routes>\n      <Route\n        path='*'\n        element={<NotFound />}\n      />\n      <Route\n        path='/'\n        element={<Home />}\n      />\n      <Route\n        path='/login'\n        element={<LoginForm loginUser={loginUser} />}\n      />\n      <Route\n        path='/signup'\n        element={<SignUpForm registerUser={registerUser} />}\n      />\n      <Route\n        path='/profile/:username'\n        element={<Profile itemsOnPage={9} />}\n      />\n      <Route\n        path='search/:path/:id'\n        element={<SearchResultsPage itemsOnPage={30} />}\n      />\n      <Route\n        path='/games/:id'\n        element={<GameDetailsPage />}\n      />\n    </Routes>\n  );\n}\n","import React from 'react';\nimport { Skeleton, alpha } from '@mui/material';\nimport styled from '@emotion/styled';\n\nconst StyledSkel = styled(Skeleton)(({ theme }) => ({\n  backgroundColor: alpha(theme.palette.primary.muted, 0.4),\n  '& .MuiSkeleton-root': {\n    animationDuration: '.3sec',\n  },\n}));\n\nexport default function BaseSkeleton({\n  variant = 'rounded',\n  width = '100%',\n  height = '2rem',\n  shadow,\n}) {\n  const boxShadow = shadow ? shadow : 'none';\n  return (\n    <StyledSkel\n      variant={variant}\n      animation='wave'\n      sx={{\n        width: width,\n        height: height,\n        boxShadow: boxShadow,\n      }}\n    />\n  );\n}\n","import React, { useCallback, useMemo } from 'react';\nimport { Grid, Typography } from '@mui/material';\nimport { Person, AccessTime } from '@mui/icons-material';\nimport styled from '@emotion/styled';\n\nconst StyledTypography = styled(Typography)(({ theme }) => ({\n  alignItems: 'flex-start',\n}));\n\nexport default function PlayersAndDuration({\n  min_players,\n  max_players,\n  min_playtime,\n  max_playtime,\n}) {\n  /** format string for num of players to only display\n   * min_players if it's equal to max_players\n   *\n   * some API data with have min and max as same value\n   *\n   * instead of displaying players as 1-1,\n   * will just have display of 1\n   *\n   */\n  const getPlayers = useCallback(() => {\n    return min_players === max_players\n      ? min_players\n      : min_players + ' - ' + max_players;\n  }, [min_players, max_players]);\n\n  const players = useMemo(() => getPlayers(), [getPlayers]);\n\n  /** format string for duration of playtime to only display\n   * min_playtime if it's equal to max_playtime\n   *\n   * some API data with have min and max as same value\n   *\n   * instead of displaying playtime as 30-30,\n   * will just have display of 30\n   *\n   */\n  const getDuration = useCallback(() => {\n    return min_playtime === max_playtime\n      ? min_playtime\n      : min_playtime + ' - ' + max_playtime;\n  }, [min_playtime, max_playtime]);\n\n  const duration = useMemo(() => getDuration(), [getDuration]);\n\n  return (\n    <>\n      <Grid item>\n        <StyledTypography>\n          <Person />\n          {players}\n        </StyledTypography>\n      </Grid>\n      <Grid item>\n        <StyledTypography>\n          <AccessTime sx={{ marginRight: '.3rem', transform: 'scale(.85)' }} />\n          {duration}\n        </StyledTypography>\n      </Grid>\n    </>\n  );\n}\n","import React from 'react';\nimport { Pagination, alpha } from '@mui/material';\nimport styled from '@emotion/styled';\n\nconst StyledPagination = styled(Pagination)(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'center',\n  padding: '1rem',\n  '& .MuiPaginationItem-root': {\n    color: theme.palette.primary.text,\n  },\n  '& .MuiPaginationItem-root.Mui-selected': {\n    color: theme.palette.primary.main,\n    backgroundColor: theme.palette.secondary.main,\n    '&:hover': {\n      color: theme.palette.primary.main,\n      backgroundColor: theme.palette.secondary.dark,\n    },\n  },\n  '& .MuiButtonBase-root': {\n    '&:hover': {\n      backgroundColor: alpha(`${theme.palette.primary.dark}`, 0.6),\n    },\n  },\n}));\n\nexport default function ResultsPagination({\n  page,\n  handleChange,\n  pageCount = 10,\n}) {\n  return (\n    <StyledPagination\n      count={pageCount}\n      page={page}\n      onChange={handleChange}\n      shape='rounded'\n      size='large'\n    />\n  );\n}\n","import React from 'react';\nimport { Stack, Grid } from '@mui/material';\nimport BaseSkeleton from '../common/BaseSkeleton';\n\nexport default function CollectionSkeleton({ itemsOnPage }) {\n  let skelItems = [];\n\n  for (let i = 0; i < itemsOnPage; i++) {\n    skelItems.push(\n      <Grid\n        item\n        key={i}\n      >\n        <BaseSkeleton\n          width={345}\n          height={383}\n          shadow={1}\n        />\n      </Grid>\n    );\n  }\n\n  return (\n    <Stack spacing={2}>\n      <Stack\n        spacing={1}\n        width={300}\n        padding={'1.5rem 1.5rem 0rem 2rem'}\n      >\n        <BaseSkeleton />\n        <BaseSkeleton height='1.5rem' />\n        <BaseSkeleton height='1.5rem' />\n      </Stack>\n      <Grid\n        container\n        direction={'row'}\n        spacing={3}\n        paddingLeft={'.5rem'}\n      >\n        {skelItems.map((i) => i)}\n      </Grid>\n    </Stack>\n  );\n}\n","import React, { useContext } from 'react';\nimport {\n  Card,\n  CardActionArea,\n  CardMedia,\n  CardContent,\n  CardActions,\n  Typography,\n  Grid,\n  IconButton,\n} from '@mui/material';\nimport PlayersAndDuration from '../common/PlayersAndDuration';\nimport { Favorite, FavoriteBorder, Delete } from '@mui/icons-material';\nimport DataContext from '../../context/DataContext';\nimport UserContext from '../../context/UserContext';\n\nexport default function GameCard({ game, onProfilePage }) {\n  const { setGame, addGame, removeGame } = useContext(DataContext);\n  const { currentUser, userGameIDs, navigate } = useContext(UserContext);\n  const inCollection = userGameIDs ? userGameIDs.has(game.id) : false;\n\n  const handleCardClick = () => {\n    setGame(game);\n    navigate(`/games/${game.id}`);\n  };\n\n  const handleQuickAddClick = () => {\n    if (!inCollection) {\n      // POST request to server to add game\n      addGame(game);\n    }\n  };\n\n  const handleTrashClick = () => {\n    // POST request to server to delete game\n    removeGame(game);\n  };\n\n  const quickAddBtn = (\n    <IconButton\n      aria-label='add to collection'\n      sx={{ color: 'secondary.main', marginLeft: 'auto' }}\n      onClick={handleQuickAddClick}\n    >\n      {inCollection ? <Favorite /> : <FavoriteBorder />}\n    </IconButton>\n  );\n\n  const trashBtn = (\n    <IconButton\n      aria-label='remove from collection'\n      sx={{\n        color: 'primary.muted',\n        marginLeft: 'auto',\n        '&:hover': { color: 'red' },\n      }}\n      onClick={handleTrashClick}\n    >\n      <Delete />\n    </IconButton>\n  );\n\n  return (\n    <Card\n      sx={{\n        width: 345,\n        backgroundColor: 'primary.dark',\n        transition: 'all 200ms',\n        '&:hover': {\n          transform: 'scale(1.02)',\n        },\n      }}\n    >\n      <CardActionArea onClick={handleCardClick}>\n        <CardMedia\n          sx={{\n            objectFit: 'fill',\n          }}\n          component={'img'}\n          height={230}\n          image={game.images.large || game.image_url}\n          alt={game.name}\n        />\n        <CardContent sx={{ color: 'secondary.main' }}>\n          <Typography\n            textAlign={'center'}\n            gutterBottom\n            variant='h5'\n            component='div'\n            noWrap\n          >\n            {game.name}\n          </Typography>\n          <Grid\n            container\n            direction={'row'}\n            justifyContent={'center'}\n            spacing={3}\n            sx={{\n              color: 'primary.text',\n            }}\n          >\n            <PlayersAndDuration\n              min_players={game.min_players}\n              max_players={game.max_players}\n              min_playtime={game.min_playtime}\n              max_playtime={game.max_playtime}\n            />\n          </Grid>\n        </CardContent>\n      </CardActionArea>\n      {currentUser ? (\n        <CardActions disableSpacing>\n          {!onProfilePage ? quickAddBtn : trashBtn}\n        </CardActions>\n      ) : null}\n    </Card>\n  );\n}\n","import { useEffect, useState } from 'react';\n\n/** Controls page and pageCount for pagination\n *\n * @param {*} count searchResults count\n * @param {*} itemsOnPage num prop from parent\n * @returns {*} [page, pageCount, handleChange, setPage]\n *\n * pageCount = Math.ceil(count / itemsOnPage)\n */\nexport default function usePagination(count, itemsOnPage) {\n  const [page, setPage] = useState(1);\n  const [pageCount, setPageCount] = useState(0);\n\n  useEffect(() => {\n    if (count) {\n      const initialPages = Math.ceil(count / itemsOnPage);\n      setPageCount(initialPages >= 35 ? 34 : initialPages);\n    }\n  }, [count, itemsOnPage]);\n\n  const handleChange = (evt, value) => {\n    setPage(value);\n  };\n\n  return [page, pageCount, handleChange, setPage];\n}\n"],"names":["StyledContainer","styled","Container","_ref","alphascale","theme","margin","backgroundColor","alpha","concat","palette","primary","main","borderRadius","shape","padding","alignSelf","ContentContainer","_ref2","_ref2$alphascale","_ref2$shadow","shadow","_ref2$header","header","divider","blur","children","_jsxs","maxWidth","sx","boxShadow","backdropFilter","_jsx","Typography","variant","color","gutterBottom","Divider","NotFound","Stack","textAlign","Home","currentUser","useContext","UserContext","paddingTop","Box","border","borderColor","fontSize","width","PasswordAdornment","showPassword","handleShowPassword","InputAdornment","position","IconButton","onClick","onMouseDown","event","preventDefault","edge","VisibilityOff","Visibility","FormComponent","initialState","inputs","submitFunc","_useState","useState","_useState2","_slicedToArray","setShowPassword","navigate","_useState3","_useState4","isLoading","setIsLoading","isLogin","inputType","_useFields","useFields","_useFields2","formData","handleChange","formErrors","setFormErrors","show","handleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","result","wrap","_context","prev","next","sent","err","stop","_x","apply","arguments","FormBox","component","onSubmit","height","marginBottom","ErrorSpan","spacing","map","name","idx","label","toUpperCase","slice","isPassword","FormControl","FormTextField","type","value","onChange","autoFocus","autoComplete","InputProps","endAdornment","helperText","length","required","display","Link","to","PrimaryButton","className","right","CircularLoading","size","LoginForm","loginUser","username","password","SignUpForm","registerUser","email","ProfileSkeleton","_Fragment","Grid","item","BaseSkeleton","xs","marginTop","EditAvatar","imageURL","handleFileUpload","container","direction","justifyContent","Avatar","src","InputLabel","htmlFor","Button","bgcolor","PhotoCamera","marginRight","TextField","id","hidden","EditProfile","open","setOpen","_useContext","updateUser","userData","setFormData","handleClose","getChanges","formEntries","Object","entries","initialEntries","updateData","filter","_ref3","entry","_ref4","abrupt","msg","useEffect","Dialog","onClose","bottom","DialogTitle","paddingBottom","DialogContent","file","target","files","reader","FileReader","onloadend","_objectSpread","readAsDataURL","DialogActions","CancelButton","CollectionComp","lazy","Profile","itemsOnPage","useParams","getCurrentUser","token","alignItems","marginLeft","Edit","Suspense","fallback","CollectionSkeleton","Navigate","ResultsSkeleton","skelItems","i","push","SearchResultsPage","_useParams","path","DataContext","searchResults","getSearchResults","resultsHeader","getSearchHeader","pages","count","_usePagination","usePagination","_usePagination2","page","pageCount","setPage","searchObj","_defineProperty","keys","window","scrollTo","top","behavior","g","game","GameCard","ResultsPagination","AddButton","secondary","AddedBadgeBox","success","GameDescription","addGame","_useContext2","userGameIDs","inCollection","has","handleAddBtnClick","flex","Check","Add","paddingRight","year_published","PlayersAndDuration","min_players","max_players","min_playtime","max_playtime","image_url","alt","description_preview","Collapse","in","collapsedSize","ExpandLess","ExpandMore","GameDescSkeleton","StyledBox","common","black","VideoOverlay","title","Tooltip","textShadow","noWrap","YouTubeIcon","MediaCard","handleClick","isVideo","Card","CardActionArea","url","CardMedia","objectFit","image","MediaContainer","items","ImageCardComponent","NoMediaMessage","paddingLeft","toLowerCase","overflow","MediaSkeleton","DetailListItem","param","isLastItem","setSearchResults","setResultsHeader","textDecoration","cursor","transition","createData","data","undefined","StyledRow","TableRow","dark","GameDetails","MechanicsComps","CategoriesComps","rows","mechanics","m","categories","c","year","publisher","primary_publisher","artists","join","Table","TableBody","row","TableCell","scope","GameDetailsPage","checkGameCache","gameID","pathname","useLocation","images","setImages","videos","setVideos","detail_images","NoGameFound","AllRoutes","Routes","Route","element","StyledSkel","Skeleton","muted","animationDuration","_ref2$variant","_ref2$width","_ref2$height","animation","StyledTypography","getPlayers","useCallback","players","useMemo","getDuration","duration","Person","AccessTime","transform","StyledPagination","Pagination","text","_ref2$pageCount","onProfilePage","setGame","removeGame","quickAddBtn","Favorite","FavoriteBorder","trashBtn","Delete","large","CardContent","CardActions","disableSpacing","setPageCount","initialPages","Math","ceil","evt"],"sourceRoot":""}
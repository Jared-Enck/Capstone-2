{"version":3,"file":"static/js/572.90b47fec.chunk.js","mappings":"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","sources":["components/common/ContentContainer.js","components/NotFound.js","components/Home.js","components/common/PasswordAdornment.js","components/common/FormComponent.js","components/account/LoginForm.js","components/account/SignUpForm.js","components/account/ProfileSkeleton.js","components/account/EditAvatar.js","components/account/EditProfile.js","components/account/Profile.js","components/games/GameDescription.js","components/games/GameDescSkeleton.js","components/videos/VideoOverlay.js","components/videos/MediaCard.js","components/videos/MediaSkeleton.js","components/videos/VideoPlayer.js","components/videos/MediaContainer.js","components/games/GameDetails.js","components/games/GameDetailsPage.js","AllRoutes.js","components/collection/CollectionSkeleton.js","components/common/BaseSkeleton.js","components/common/PlayersAndDuration.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport DataContext from '../../context/DataContext';\nimport { Container, Typography, Divider, alpha, Stack } from '@mui/material';\nimport styled from '@emotion/styled';\n\nconst StyledContainer = styled(Container)(({ alphascale, theme }) => ({\n  margin: 0,\n  backgroundColor: alpha(`${theme.palette.primary.main}`, alphascale),\n  borderRadius: theme.shape.borderRadius,\n  alignSelf: 'center',\n}));\n\nexport default function ContentContainer({\n  alphascale = 1,\n  shadow = 'none',\n  header = null,\n  headerData,\n  divider,\n  blur,\n  children,\n}) {\n  const { isSmallScreen } = useContext(DataContext);\n  return (\n    <StyledContainer\n      maxWidth={'lg'}\n      alphascale={alphascale}\n      sx={{\n        padding: isSmallScreen ? '.5rem' : '1.5rem',\n        boxShadow: shadow,\n        backdropFilter: blur ? `blur(7px)` : 'none',\n      }}\n    >\n      {header ? (\n        <Stack\n          direction={'row'}\n          spacing={2}\n        >\n          <Typography\n            variant={isSmallScreen ? 'h5' : 'h4'}\n            sx={{\n              color: 'secondary.main',\n            }}\n            gutterBottom\n          >\n            {header}\n          </Typography>\n\n          {headerData ? (\n            <Typography\n              variant='h6'\n              sx={{ color: 'primary.muted' }}\n            >{`(${headerData})`}</Typography>\n          ) : null}\n        </Stack>\n      ) : null}\n      {divider ? <Divider sx={{ bgcolor: 'primary.dark' }} /> : null}\n      {children}\n    </StyledContainer>\n  );\n}\n","import React from 'react';\nimport { Typography, Stack } from '@mui/material';\nimport ContentContainer from './common/ContentContainer';\n\nexport default function NotFound() {\n  return (\n    <Stack>\n      <ContentContainer>\n        <Typography\n          variant='h5'\n          sx={{ color: 'primary.text', textAlign: 'center' }}\n        >\n          404 Sorry, can't find what you're looking for.\n        </Typography>\n      </ContentContainer>\n    </Stack>\n  );\n}\n","import React, { useContext, useEffect } from 'react';\nimport UserContext from '../context/UserContext';\nimport DataContext from '../context/DataContext';\nimport { Stack, Typography, Box, List } from '@mui/material';\nimport ContentContainer from './common/ContentContainer';\nimport GamesListItem from './common/GamesListItem';\nimport CircularLoading from './common/CircularLoading';\n\nexport default function Home() {\n  const { currentUser, navigate } = useContext(UserContext);\n  const { isSmallScreen, hotGames, getHotCache, setGame } =\n    useContext(DataContext);\n\n  useEffect(() => {\n    if (!hotGames.length && currentUser) getHotCache();\n  }, [hotGames.length, currentUser, getHotCache]);\n\n  const hotListDimensions = {\n    width: '5rem',\n    height: '5rem',\n    fontSize: '1.8rem',\n  };\n\n  const WelcomeMsgComp = () => {\n    return (\n      <ContentContainer\n        shadow={2}\n        alphascale={0.4}\n        blur\n      >\n        <Box\n          sx={{\n            color: 'primary.text',\n            fontSize: '1.2rem',\n            width: '95%',\n            margin: 'auto',\n          }}\n        >\n          <Typography\n            variant={isSmallScreen ? 'h6' : 'h4'}\n            gutterBottom\n          >\n            Welcome to MyGameNights!\n          </Typography>\n          <p>\n            You can browse an extensive library of games by searching for board\n            game titles.\n          </p>\n          <p>\n            Create a profile and use MyGameNights to compile a digital library\n            of all your games.\n          </p>\n          <p>\n            Your personal collection is now complete with videos and resources\n            to jog your memory when you’ve forgotten the rules or to help you\n            decide what to play.\n          </p>\n          {/* <p>\n          MyGameNights makes it easy to find new games using a mechanic you\n          love, expansions for your tried and true staples, or games built\n          around your favorite franchise. (Star Wars anyone?)\n        </p> */}\n          <p>\n            Click around. Have fun. Build your collection. Game night has never\n            been better.\n          </p>\n        </Box>\n      </ContentContainer>\n    );\n  };\n  const handleGameClick = (gameID) => {\n    setGame('');\n    navigate(`/games/${gameID}`);\n  };\n\n  const HotGamesComp = () => {\n    return (\n      <ContentContainer\n        shadow={2}\n        alphascale={0}\n        blur\n        header={'Popular Games'}\n        divider\n      >\n        <List>\n          {hotGames.length ? (\n            hotGames.map((i, idx) => {\n              return (\n                <GamesListItem\n                  key={i.id}\n                  item={i}\n                  idx={idx}\n                  clickFunc={handleGameClick}\n                  isLastItem={i === hotGames.length - 1}\n                  dimensions={isSmallScreen ? {} : hotListDimensions}\n                  isSmallScreen={isSmallScreen}\n                  hotListItem\n                />\n              );\n            })\n          ) : (\n            <CircularLoading />\n          )}\n        </List>\n      </ContentContainer>\n    );\n  };\n\n  return <Stack>{currentUser ? <HotGamesComp /> : <WelcomeMsgComp />}</Stack>;\n}\n","import React from 'react';\nimport { InputAdornment, IconButton } from '@mui/material';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\n\nexport default function PasswordAdornment({\n  showPassword,\n  handleShowPassword,\n}) {\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n  return (\n    <InputAdornment position='end'>\n      <IconButton\n        aria-label='toggle password visibility'\n        onClick={handleShowPassword}\n        onMouseDown={handleMouseDownPassword}\n        edge='end'\n        sx={{ color: 'primary.muted' }}\n      >\n        {showPassword ? <VisibilityOff /> : <Visibility />}\n      </IconButton>\n    </InputAdornment>\n  );\n}\n","import React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport UserContext from '../../context/UserContext';\nimport { FormControl, Stack, Typography, Box } from '@mui/material';\nimport { FormBox, FormTextField, ErrorSpan } from '../styled';\nimport ContentContainer from './ContentContainer';\nimport PasswordAdornment from './PasswordAdornment';\nimport { PrimaryButton } from '../styled';\nimport useFields from '../../hooks/useFields';\nimport CircularLoading from './CircularLoading';\n\nexport default function FormComponent({\n  header,\n  initialState,\n  inputs,\n  submitFunc,\n}) {\n  const [showPassword, setShowPassword] = useState(false);\n  const { navigate } = useContext(UserContext);\n  const [isLoading, setIsLoading] = useState(false);\n  const isLogin = header === 'Login';\n\n  const inputType = showPassword ? 'text' : 'password';\n\n  const [formData, handleChange, formErrors, setFormErrors] =\n    useFields(initialState);\n\n  // handle showPassword toggle\n  const handleShowPassword = () => setShowPassword((show) => !show);\n\n  // handle form submit\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    // POST request in submitFunc with formData\n    const result = await submitFunc(formData);\n    if (result) {\n      // if errors in POST request\n      setFormErrors(result.err);\n      setIsLoading(false);\n    } else {\n      setIsLoading(false);\n      navigate('/');\n    }\n  };\n\n  return (\n    <Stack sx={{ paddingTop: 10 }}>\n      <ContentContainer alphascale={0.4}>\n        <FormBox\n          component='form'\n          onSubmit={handleSubmit}\n        >\n          <Typography\n            variant='h5'\n            sx={{ color: 'primary.text' }}\n          >\n            {header}\n          </Typography>\n\n          <Box\n            sx={{ height: '1.5rem', maxWidth: '22rem', marginBottom: '.4rem' }}\n          >\n            {typeof formErrors[0] === 'string' ? (\n              <ErrorSpan>{formErrors[0]}</ErrorSpan>\n            ) : null}\n          </Box>\n\n          <Stack spacing={3}>\n            {inputs.map((name, idx) => {\n              const firstLetter = name[0].toUpperCase();\n              const label = firstLetter.concat(name.slice(1));\n              const isPassword = name === 'password';\n\n              return (\n                <FormControl key={name}>\n                  <FormTextField\n                    variant='outlined'\n                    label={label}\n                    type={isPassword ? inputType : 'text'}\n                    name={name}\n                    value={formData[name]}\n                    onChange={handleChange}\n                    autoFocus={idx === 0}\n                    autoComplete={isPassword ? 'current-password' : ''}\n                    InputProps={{\n                      endAdornment: isPassword ? (\n                        <PasswordAdornment\n                          showPassword={showPassword}\n                          handleShowPassword={handleShowPassword}\n                        />\n                      ) : null,\n                    }}\n                    helperText={\n                      formErrors.length && !isLogin ? (\n                        <ErrorSpan>{formErrors[0][name]}</ErrorSpan>\n                      ) : null\n                    }\n                    required\n                  />\n                </FormControl>\n              );\n            })}\n\n            {isLogin ? (\n              <Stack\n                sx={{\n                  height: '3.5rem',\n                  justifyContent: 'center',\n                  color: 'primary.text',\n                  margin: 'auto',\n                }}\n              >\n                <Typography sx={{ textAlign: 'center' }}>\n                  Don't have an account yet?\n                </Typography>\n                <Stack\n                  spacing={0.6}\n                  direction={'row'}\n                  justifyContent={'center'}\n                >\n                  <Typography>Sign up</Typography>\n                  <Link to={'/signup'}>\n                    <Typography sx={{ color: 'secondary.main' }}>\n                      here.\n                    </Typography>\n                  </Link>\n                </Stack>\n              </Stack>\n            ) : null}\n\n            <PrimaryButton\n              variant='contained'\n              type='submit'\n              className='main-button'\n            >\n              Submit\n              {isLoading ? (\n                <Box\n                  sx={{\n                    position: 'absolute',\n                    right: 20,\n                  }}\n                >\n                  <CircularLoading\n                    size='1.3rem'\n                    color='primary.dark'\n                  />\n                </Box>\n              ) : null}\n            </PrimaryButton>\n          </Stack>\n        </FormBox>\n      </ContentContainer>\n    </Stack>\n  );\n}\n","import React from 'react';\nimport FormComponent from '../common/FormComponent';\n\nexport default function LoginForm({ loginUser }) {\n  const initialState = {\n    username: '',\n    password: '',\n  };\n\n  return (\n    <FormComponent\n      header={'Login'}\n      initialState={initialState}\n      inputs={['username', 'password']}\n      submitFunc={loginUser}\n    />\n  );\n}\n","import React from 'react';\nimport FormComponent from '../common/FormComponent';\n\nexport default function SignUpForm({ registerUser }) {\n  const initialState = {\n    username: '',\n    password: '',\n    email: '',\n  };\n\n  return (\n    <FormComponent\n      header={'Sign Up'}\n      initialState={initialState}\n      inputs={['username', 'password', 'email']}\n      submitFunc={registerUser}\n    />\n  );\n}\n","import React from 'react';\nimport { Grid } from '@mui/material';\nimport BaseSkeleton from '../common/BaseSkeleton';\n\nexport default function ProfileSkeleton({ avatarSize }) {\n  return (\n    <>\n      <Grid\n        item\n        xs={12}\n        md={2}\n      >\n        <BaseSkeleton\n          variant='circular'\n          width={avatarSize.width}\n          height={avatarSize.height}\n        />\n      </Grid>\n      <Grid\n        item\n        marginTop={'auto'}\n        xs={12}\n        md={10}\n      >\n        <BaseSkeleton width='10rem' />\n      </Grid>\n    </>\n  );\n}\n","import React from 'react';\nimport {\n  Stack,\n  Avatar,\n  Box,\n  Button,\n  InputLabel,\n  TextField,\n} from '@mui/material';\nimport { PhotoCamera } from '@mui/icons-material';\n\nexport default function EditAvatar({\n  avatarSize,\n  imageURL,\n  handleFileUpload,\n  isSmallScreen,\n}) {\n  return (\n    <Stack direction={'row'}>\n      <Avatar\n        src={imageURL}\n        sx={{\n          width: avatarSize.width,\n          height: avatarSize.height,\n        }}\n      />\n      <Box sx={{ marginTop: 'auto', marginLeft: 'auto' }}>\n        <InputLabel\n          htmlFor='imageURL'\n          sx={{ padding: '.3rem', borderRadius: 9999 }}\n        >\n          <Button\n            variant='contained'\n            component='span'\n            className='main-button'\n            size={isSmallScreen ? 'small' : 'medium'}\n            sx={{\n              bgcolor: 'primary.dark',\n              '&:hover': {\n                bgcolor: 'secondary.main',\n                color: 'primary.main',\n              },\n            }}\n          >\n            <PhotoCamera\n              fontSize='small'\n              sx={{ marginRight: 1 }}\n            />\n            Upload Image\n          </Button>\n          <TextField\n            id='imageURL'\n            type='file'\n            onChange={handleFileUpload}\n            sx={{ display: 'none' }}\n          />\n        </InputLabel>\n      </Box>\n    </Stack>\n  );\n}\n","import React, { useContext, useEffect } from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Stack,\n  Box,\n} from '@mui/material';\nimport {\n  FormTextField,\n  PrimaryButton,\n  CancelButton,\n  ErrorSpan,\n} from '../styled';\nimport useFields from '../../hooks/useFields';\nimport UserContext from '../../context/UserContext';\nimport DataContext from '../../context/DataContext';\nimport EditAvatar from './EditAvatar';\n\nexport default function EditProfile({ open, setOpen, username, avatarSize }) {\n  const { updateUser, userData } = useContext(UserContext);\n  const { isSmallScreen } = useContext(DataContext);\n\n  const [formData, handleChange, formErrors, setFormErrors, setFormData] =\n    useFields(userData);\n\n  // handle closing of dialog box\n  const handleClose = () => {\n    setFormErrors([]);\n    setFormData(userData);\n    setOpen(false);\n  };\n\n  // handle file uploading of imageURL\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n\n    reader.onloadend = () => {\n      setFormData({ ...formData, imageURL: reader.result });\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  /** Check for changes in edit form\n   *\n   * @param {*} formData { username, email, imageURL }\n   * @param {*} userData { username, email, imageURL }\n   * @returns {*} { username: 'newUser' }\n   *\n   * maps entries of formData and compare values\n   *  against userData values\n   *\n   * if no changes, return -1\n   *\n   * example --\n   *\n   * userData = { username: 'testUser', email: 'me@me.com', imageURL: 'someImageURL' }\n   *\n   * formData = { username: 'newUser', email: 'me@me.com', imageURL: 'someImageURL' }\n   */\n  const getChanges = (formData, userData) => {\n    const formEntries = Object.entries(formData);\n    const initialEntries = Object.entries(userData);\n    const updateData = {};\n\n    const entries = formEntries.filter(\n      ([key, val], idx) => val !== initialEntries[idx][1]\n    );\n\n    if (!entries.length) return -1;\n\n    entries.map((entry) => (updateData[entry[0]] = entry[1]));\n\n    return updateData;\n  };\n\n  // handle form submit\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // check for any changes\n    const updateData = getChanges(formData, userData);\n\n    if (updateData === -1) return handleClose();\n\n    // Patch request with updated data\n    const result = await updateUser(updateData, username);\n\n    if (result) {\n      setFormErrors(result.msg);\n    } else {\n      handleClose();\n    }\n  };\n\n  useEffect(() => {\n    setFormData(userData);\n  }, [userData, setFormData]);\n\n  return (\n    <Dialog\n      fullScreen={isSmallScreen}\n      open={open}\n      onClose={handleClose}\n      fullWidth={true}\n      maxWidth='sm'\n      sx={{\n        '& .MuiPaper-root': {\n          bgcolor: 'primary.main',\n          padding: isSmallScreen ? 1 : '0rem 4rem 1rem 4rem',\n        },\n      }}\n    >\n      <DialogTitle\n        fontSize={isSmallScreen ? '1.2rem' : '1.5rem'}\n        sx={{ color: 'primary.text', paddingBottom: 0 }}\n      >\n        Edit Profile\n      </DialogTitle>\n      <DialogContent>\n        <Box sx={{ marginBottom: '.4rem' }}>\n          {typeof formErrors[0] === 'string' ? (\n            <ErrorSpan>{formErrors[0]}</ErrorSpan>\n          ) : null}\n        </Box>\n        <Stack spacing={3}>\n          <EditAvatar\n            imageURL={formData.imageURL}\n            handleFileUpload={handleFileUpload}\n            avatarSize={avatarSize}\n            isSmallScreen={isSmallScreen}\n          />\n          {['username', 'email'].map((name) => {\n            const firstLetter = name[0].toUpperCase();\n            const label = firstLetter.concat(name.slice(1));\n\n            return (\n              <FormTextField\n                key={name}\n                variant='outlined'\n                label={label}\n                type={'text'}\n                name={name}\n                value={formData[name]}\n                onChange={handleChange}\n                helperText={\n                  formErrors.length && typeof formErrors[0] !== 'string' ? (\n                    <ErrorSpan>{formErrors[0][name]}</ErrorSpan>\n                  ) : null\n                }\n              />\n            );\n          })}\n        </Stack>\n      </DialogContent>\n      <DialogActions sx={{ marginRight: 'auto', padding: '5px 0px 0px 24px' }}>\n        <CancelButton\n          variant='outlined'\n          onClick={handleClose}\n          className='main-button'\n        >\n          Cancel\n        </CancelButton>\n        <PrimaryButton\n          variant='contained'\n          onClick={handleSubmit}\n          className='main-button'\n        >\n          Submit\n        </PrimaryButton>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useContext, useEffect, useState, lazy, Suspense } from 'react';\nimport { useParams, Navigate } from 'react-router-dom';\nimport UserContext from '../../context/UserContext';\nimport DataContext from '../../context/DataContext';\nimport {\n  Stack,\n  Typography,\n  Grid,\n  Avatar,\n  Button,\n  Divider,\n} from '@mui/material';\nimport { Edit } from '@mui/icons-material';\nimport ContentContainer from '../common/ContentContainer';\nimport ProfileSkeleton from './ProfileSkeleton';\nimport CollectionSkeleton from '../collection/CollectionSkeleton';\nimport EditProfile from './EditProfile';\n\nconst CollectionComp = lazy(() => import('../collection/Collection'));\n\nexport default function Profile({ itemsOnPage }) {\n  const { username } = useParams();\n  const { currentUser, getCurrentUser, userData, token } =\n    useContext(UserContext);\n\n  const { isSmallScreen } = useContext(DataContext);\n  const avatarSize = isSmallScreen\n    ? { width: '5.5rem', height: '5.5rem' }\n    : { width: '7.5rem', height: '7.5rem' };\n  const [open, setOpen] = useState(false);\n\n  const handleEditClick = () => {\n    setOpen(true);\n  };\n\n  useEffect(() => {\n    // GET request for userData\n    if (!userData && currentUser) getCurrentUser(username);\n    // eslint-disable-next-line\n  }, [currentUser, getCurrentUser]);\n\n  if (!token) return <Navigate to={'/login'} />;\n\n  return (\n    <Stack>\n      {userData ? (\n        <EditProfile\n          open={open}\n          setOpen={setOpen}\n          username={username}\n          avatarSize={avatarSize}\n        />\n      ) : null}\n      <ContentContainer>\n        <Grid\n          container\n          spacing={2}\n          direction={'row'}\n          alignItems={'flex-end'}\n          padding={1}\n        >\n          {userData ? (\n            <>\n              <Grid\n                item\n                xs={12}\n                md={2}\n              >\n                <Avatar\n                  src={userData.imageURL}\n                  sx={{ width: avatarSize.width, height: avatarSize.height }}\n                />\n              </Grid>\n              <Grid\n                item\n                sx={{ display: 'flex' }}\n                xs={12}\n                md={10}\n              >\n                <Typography\n                  variant='h5'\n                  color={'secondary.main'}\n                  sx={{ flexGrow: 1 }}\n                >\n                  {userData.username}\n                </Typography>\n                <Button\n                  size='small'\n                  onClick={handleEditClick}\n                >\n                  <Edit\n                    fontSize='medium'\n                    sx={{\n                      color: 'secondary.main',\n                      marginLeft: 2,\n                    }}\n                  />\n                </Button>\n              </Grid>\n            </>\n          ) : (\n            <ProfileSkeleton avatarSize={avatarSize} />\n          )}\n        </Grid>\n\n        <Divider sx={{ bgcolor: 'primary.dark', margin: 1 }} />\n\n        <Suspense\n          fallback={\n            <CollectionSkeleton\n              itemsOnPage={itemsOnPage}\n              isSmallScreen={isSmallScreen}\n            />\n          }\n        >\n          <CollectionComp itemsOnPage={itemsOnPage} />\n        </Suspense>\n      </ContentContainer>\n    </Stack>\n  );\n}\n","import React, { useState, useContext, useEffect } from 'react';\nimport DataContext from '../../context/DataContext';\nimport UserContext from '../../context/UserContext';\nimport {\n  Box,\n  Typography,\n  Collapse,\n  Divider,\n  Grid,\n  Button,\n  Stack,\n  ListItem,\n  ListItemText,\n  Fab,\n  CardMedia,\n} from '@mui/material';\nimport { ExpandMore, ExpandLess, Add, Check } from '@mui/icons-material';\nimport PlayersAndDuration from '../common/PlayersAndDuration';\nimport styled from '@emotion/styled';\nimport ContentContainer from '../common/ContentContainer';\nimport CircularLoading from '../common/CircularLoading';\n\nconst AddButton = styled(Button)(({ theme }) => ({\n  color: theme.palette.secondary.main,\n  '&:hover': {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.primary.main,\n  },\n}));\n\nconst AddedBadgeBox = styled(Box)(({ theme }) => ({\n  color: theme.palette.success.main,\n  display: 'flex',\n}));\n\nconst PlayersAndDurationGrid = styled(Grid)(({ theme }) => ({\n  height: '2rem',\n  color: theme.palette.primary.text,\n  [theme.breakpoints.down('sm')]: {\n    justifyContent: 'space-around',\n  },\n}));\n\nexport default function GameDescription({ game }) {\n  const [open, setOpen] = useState(false);\n  const { addGame, isSmallScreen } = useContext(DataContext);\n  const { currentUser, userGameIDs } = useContext(UserContext);\n  const inCollection = userGameIDs ? userGameIDs.has(game.objectid) : false;\n  const [isLoading, setIsLoading] = useState(false);\n  const showExpandDesc = isSmallScreen ? 300 : 800;\n\n  const handleDescBtnClick = () => {\n    setOpen(!open);\n    if (open) window.scrollTo({ top: 0 });\n  };\n\n  const handleAddBtnClick = async () => {\n    setIsLoading(true);\n    // POST request to server to add game\n    await addGame(game);\n    setIsLoading(false);\n  };\n\n  const AddButtonComp = () =>\n    isSmallScreen ? (\n      <Fab\n        size='small'\n        sx={{\n          color: 'secondary.main',\n          bgcolor: 'primary.dark',\n          alignSelf: 'flex-end',\n        }}\n        onClick={handleAddBtnClick}\n      >\n        {isLoading ? (\n          <CircularLoading\n            size='1rem'\n            color='secondary.main'\n          />\n        ) : (\n          <Add />\n        )}\n      </Fab>\n    ) : (\n      <AddButton\n        variant='text'\n        onClick={handleAddBtnClick}\n        className='main-button'\n      >\n        <Add fontSize='small' />\n\n        <Typography paddingRight={1}>Add to collection</Typography>\n\n        {isLoading ? (\n          <CircularLoading\n            size='1rem'\n            color='primary.dark'\n          />\n        ) : (\n          <Box width={'1rem'} />\n        )}\n      </AddButton>\n    );\n\n  const AddedBadgeComp = () => (\n    <AddedBadgeBox>\n      {isSmallScreen ? (\n        <Typography\n          sx={{\n            alignSelf: 'flex-end',\n            display: 'flex',\n            padding: '.3rem',\n          }}\n        >\n          <Check />\n        </Typography>\n      ) : (\n        <>\n          <Typography margin={1}>In Collection</Typography>\n          <Typography padding={'.3rem'}>\n            <Check />\n          </Typography>\n        </>\n      )}\n    </AddedBadgeBox>\n  );\n\n  useEffect(() => {\n    const descFrag = document\n      .createRange()\n      .createContextualFragment(game.description);\n    const description = document.getElementById('description');\n    description.appendChild(descFrag);\n  }, [game.description]);\n\n  return (\n    <ContentContainer>\n      <Stack spacing={1}>\n        <Box display={'flex'}>\n          <Typography\n            variant={isSmallScreen ? 'h5' : 'h4'}\n            sx={{\n              color: 'secondary.main',\n              flex: 1,\n              alignSelf: 'center',\n            }}\n          >\n            {game.name}\n          </Typography>\n          {currentUser\n            ? inCollection\n              ? AddedBadgeComp()\n              : AddButtonComp()\n            : null}\n        </Box>\n        <PlayersAndDurationGrid\n          container\n          direction={'row'}\n        >\n          <Grid item>\n            <ListItem sx={{ padding: isSmallScreen ? 0 : null }}>\n              <ListItemText>{game.yearpublished}</ListItemText>\n            </ListItem>\n          </Grid>\n          <PlayersAndDuration\n            min_players={game.minplayers}\n            max_players={game.maxplayers}\n            min_playtime={game.minplaytime}\n            max_playtime={game.maxplaytime}\n            isSmallScreen={isSmallScreen}\n          />\n        </PlayersAndDurationGrid>\n        <Divider sx={{ bgcolor: 'primary.dark' }} />\n        <Grid\n          container\n          direction={isSmallScreen ? 'column' : 'row'}\n          justifyContent={isSmallScreen ? 'center' : 'space-around'}\n        >\n          <Grid\n            item\n            display={'flex'}\n            justifyContent={'center'}\n          >\n            <CardMedia\n              component={'img'}\n              src={game.image}\n              alt={game.name}\n              sx={{\n                maxWidth: '18rem',\n                maxHeight: '18rem',\n              }}\n            />\n          </Grid>\n          <Grid\n            item\n            xs={7}\n          >\n            {game.description ? (\n              <Stack\n                spacing={1}\n                padding={isSmallScreen ? 1 : 0}\n              >\n                <Collapse\n                  in={open}\n                  collapsedSize={isSmallScreen ? '7.8rem' : '18rem'}\n                >\n                  <Typography\n                    id='description'\n                    sx={{\n                      color: 'primary.text',\n                    }}\n                  />\n                </Collapse>\n                {game.description.length > showExpandDesc ? (\n                  <Button\n                    sx={{\n                      height: '1.5rem',\n                      color: 'secondary.main',\n                      '&:hover': {\n                        backgroundColor: 'secondary.main',\n                        color: 'primary.main',\n                      },\n                      alignSelf: 'flex-end',\n                    }}\n                    variant='text'\n                    onClick={handleDescBtnClick}\n                  >\n                    {open ? (\n                      <ExpandLess fontSize='large' />\n                    ) : (\n                      <ExpandMore fontSize='large' />\n                    )}\n                  </Button>\n                ) : null}\n              </Stack>\n            ) : null}\n          </Grid>\n        </Grid>\n      </Stack>\n    </ContentContainer>\n  );\n}\n","import React, { useContext } from 'react';\nimport DataContext from '../../context/DataContext';\nimport { Stack, Grid, Divider, Typography, ListItem, Box } from '@mui/material';\nimport styled from '@emotion/styled';\nimport BaseSkeleton from '../common/BaseSkeleton';\nimport ContentContainer from '../common/ContentContainer';\n\nconst PDSkelGrid = styled(Grid)(({ theme }) => ({\n  height: '2rem',\n  [theme.breakpoints.down('sm')]: {\n    justifyContent: 'space-around',\n  },\n}));\n\nexport default function GameDescSkeleton() {\n  const { isSmallScreen } = useContext(DataContext);\n\n  const genSkelDesc = () => {\n    const skels = [];\n    const numSkels = isSmallScreen ? 5 : 9;\n    const firstBreak = isSmallScreen ? 2 : 3;\n    const secondBreak = isSmallScreen ? null : 6;\n\n    for (let i = 0; i < numSkels; i++) {\n      const skelWidth = Math.floor(Math.random() * (100 - 90) + 90);\n      if (i === firstBreak || i === secondBreak) {\n        skels.push(<Box height={isSmallScreen ? '1rem' : '1.5rem'} />);\n      } else {\n        skels.push(\n          <BaseSkeleton\n            width={`${skelWidth}%`}\n            height={isSmallScreen ? '1rem' : '1.5rem'}\n          />\n        );\n      }\n    }\n    return skels;\n  };\n  return (\n    <ContentContainer>\n      <Stack spacing={1}>\n        <Typography>\n          <BaseSkeleton\n            width='70%'\n            height={isSmallScreen ? '2rem' : '2.624rem'}\n          />\n        </Typography>\n        <PDSkelGrid\n          container\n          direction={'row'}\n        >\n          {['', '', ''].map((i, idx) => (\n            <Grid\n              item\n              key={idx}\n              display={'flex'}\n              alignItems={'flex-end'}\n            >\n              <ListItem sx={{ padding: isSmallScreen ? 0 : null }}>\n                <BaseSkeleton\n                  width={isSmallScreen ? '4rem' : '4.816rem'}\n                  height={isSmallScreen ? '1.5rem' : '1.7rem'}\n                />\n              </ListItem>\n            </Grid>\n          ))}\n        </PDSkelGrid>\n        <Divider sx={{ bgcolor: 'primary.dark' }} />\n        <Grid\n          container\n          direction={isSmallScreen ? 'column' : 'row'}\n          justifyContent={isSmallScreen ? 'center' : 'space-around'}\n        >\n          <Grid\n            item\n            display={'flex'}\n            justifyContent={'center'}\n            width={isSmallScreen ? '100%' : 'none'}\n          >\n            <BaseSkeleton\n              width={isSmallScreen ? '17rem' : '18rem'}\n              height={isSmallScreen ? '17rem' : '18rem'}\n            />\n          </Grid>\n          <Grid\n            item\n            xs={7}\n          >\n            <Stack\n              spacing={1}\n              padding={isSmallScreen ? 1 : 0}\n            >\n              {genSkelDesc().map((i, idx) => (\n                <div key={idx}>{i}</div>\n              ))}\n              <Box height='2.188rem' />\n            </Stack>\n          </Grid>\n        </Grid>\n      </Stack>\n    </ContentContainer>\n  );\n}\n","import React from 'react';\nimport { Box, Typography, alpha, Tooltip } from '@mui/material';\nimport styled from '@emotion/styled';\nimport YouTubeIcon from '@mui/icons-material/YouTube';\n\nconst StyledBox = styled(Box)(({ theme }) => ({\n  position: 'absolute',\n  backgroundColor: alpha(theme.palette.common.black, 0.6),\n  width: '100%',\n  height: '100%',\n  textAlign: 'center',\n  padding: '.5rem',\n}));\n\nexport default function VideoOverlay({ title }) {\n  return (\n    <Tooltip title={title}>\n      <StyledBox>\n        <Typography\n          sx={{\n            color: 'secondary.main',\n            textShadow: '2px 1px 1px solid black',\n          }}\n          variant='h5'\n          noWrap\n        >\n          {title}\n        </Typography>\n        <Box\n          sx={{\n            marginTop: '1rem',\n            color: 'red',\n          }}\n        >\n          <YouTubeIcon\n            sx={{\n              fontSize: '5rem',\n            }}\n          />\n        </Box>\n      </StyledBox>\n    </Tooltip>\n  );\n}\n","import React from 'react';\nimport { CardMedia, Card, CardActionArea } from '@mui/material';\nimport VideoOverlay from './VideoOverlay';\n\nexport default function MediaCard({ item, handleClick }) {\n  return (\n    <Card\n      sx={{\n        boxShadow: 0,\n      }}\n    >\n      <CardActionArea onClick={() => handleClick(item)}>\n        <VideoOverlay title={item.snippet.title} />\n        <CardMedia\n          src={item.snippet.thumbnails.medium.url}\n          sx={{\n            objectFit: 'fill',\n          }}\n          component='img'\n          alt={item.snippet.title}\n        />\n      </CardActionArea>\n    </Card>\n  );\n}\n","import React from 'react';\nimport { Grid, Card } from '@mui/material';\nimport BaseSkeleton from '../common/BaseSkeleton';\n\nexport default function MediaSkeleton({ isSmallScreen }) {\n  const genSkels = () => {\n    const skels = [];\n    for (let i = 0; i < 6; i++) {\n      skels.push(\n        <Grid\n          key={i}\n          item\n          margin={'auto'}\n          width={isSmallScreen ? '100%' : null}\n        >\n          <Card sx={{ boxShadow: 0, bgcolor: 'transparent' }}>\n            <BaseSkeleton\n              width={isSmallScreen ? '18rem' : '20rem'}\n              height={isSmallScreen ? '9.25rem' : '11.25rem'}\n            />\n          </Card>\n        </Grid>\n      );\n    }\n    return skels;\n  };\n  return genSkels();\n}\n","import React from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  Card,\n  CardMedia,\n  IconButton,\n} from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\n\nexport default function VideoPlayer({ open, video, handleClose, fullScreen }) {\n  return (\n    <Dialog\n      fullScreen={fullScreen}\n      open={open}\n      onClose={handleClose}\n      sx={{\n        '& .MuiPaper-root': {\n          bgcolor: 'primary.dark',\n        },\n      }}\n      maxWidth={'lg'}\n      fullWidth\n    >\n      {fullScreen ? (\n        <DialogTitle\n          sx={{\n            padding: 0,\n            display: 'flex',\n          }}\n        >\n          <IconButton\n            aria-label='close'\n            onClick={handleClose}\n            sx={{\n              color: 'primary.muted',\n              marginLeft: 'auto',\n            }}\n          >\n            <CloseIcon />\n          </IconButton>\n        </DialogTitle>\n      ) : null}\n      <Card\n        sx={{\n          position: 'relative',\n          width: '100%',\n          paddingBottom: '56.25%',\n          borderRadius: fullScreen ? 0 : null,\n          display: 'flex',\n        }}\n      >\n        <CardMedia\n          component={'iframe'}\n          src={`https://www.youtube.com/embed/${video.id.videoId}?autoplay=1`}\n          title={video.snippet.title}\n          allowFullScreen\n          allow='accelerometer; \n              autoplay; \n              encrypted-media; \n              gyroscope; \n              picture-in-picture'\n          sx={{\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            border: 0,\n          }}\n        />\n      </Card>\n    </Dialog>\n  );\n}\n","import React, { useState, useContext } from 'react';\nimport DataContext from '../../context/DataContext';\nimport { Grid } from '@mui/material';\nimport MediaCard from './MediaCard';\nimport ContentContainer from '../common/ContentContainer';\nimport MediaSkeleton from './MediaSkeleton';\nimport VideoPlayer from './VideoPlayer';\n\nexport default function MediaContainer({ game, items }) {\n  const [open, setOpen] = useState(false);\n  const [video, setVideo] = useState('');\n  const { isSmallScreen } = useContext(DataContext);\n\n  const handleClick = (item) => {\n    setOpen(true);\n    setVideo(item);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setVideo('');\n  };\n\n  return (\n    <ContentContainer\n      header={'Videos'}\n      divider\n    >\n      {video ? (\n        <VideoPlayer\n          open={open}\n          video={video}\n          handleClose={handleClose}\n          fullScreen={isSmallScreen}\n        />\n      ) : null}\n      <Grid\n        sx={{\n          marginTop: 1,\n          overflow: 'auto',\n          height: isSmallScreen ? '21.5rem' : null,\n        }}\n        container\n        direction={'row'}\n        spacing={2}\n      >\n        {game ? (\n          items.map((i) => (\n            <Grid\n              key={i.id.videoId}\n              item\n              margin='auto'\n            >\n              <MediaCard\n                item={i}\n                handleClick={handleClick}\n                isSmallScreen={isSmallScreen}\n              />\n            </Grid>\n          ))\n        ) : (\n          <MediaSkeleton isSmallScreen={isSmallScreen} />\n        )}\n      </Grid>\n    </ContentContainer>\n  );\n}\n","import React from 'react';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  useMediaQuery,\n} from '@mui/material';\n// import DetailListItem from './DetailListItem';\nimport styled from '@emotion/styled';\nimport ContentContainer from '../common/ContentContainer';\nimport CircularLoading from '../common/CircularLoading';\nimport { useTheme } from '@mui/material/styles';\n\n// create data for rows in table\nconst createData = (name, data = 'N/A') => {\n  return { name, data };\n};\n\nconst StyledRow = styled(TableRow)(({ theme }) => ({\n  backgroundColor: theme.palette.primary.main,\n  '& td, & th': {\n    border: 0,\n  },\n  '&:nth-of-type(odd)': {\n    backgroundColor: theme.palette.primary.dark,\n  },\n}));\n\nexport default function GameDetails({ game }) {\n  let MechanicsComps;\n  let CategoriesComps;\n  let rows;\n\n  const theme = useTheme();\n  const isSmallScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  if (game) {\n    MechanicsComps = game.boardgamemechanic.length\n      ? game.boardgamemechanic\n          .map(\n            (m, idx) => m._text\n            // <DetailListItem\n            //   key={idx}\n            //   // param={'mechanics'}\n            //   isSmallScreen={isSmallScreen}\n            //   item={m}\n            //   isLastItem={game.boardgamemechanic.length - 1 === idx}\n            // />\n          )\n          .join(', ')\n      : 'N/A';\n\n    CategoriesComps = game.boardgamecategory.length\n      ? game.boardgamecategory\n          .map(\n            (c, idx) => c._text\n            // <DetailListItem\n            //   key={idx}\n            //   // param={'categories'}\n            //   isSmallScreen={isSmallScreen}\n            //   item={c}\n            //   isLastItem={game.boardgamecategory.length - 1 === idx}\n            // />\n          )\n          .join(', ')\n      : 'N/A';\n\n    const year = game.yearpublished ? game.yearpublished : 'N/A';\n    const publisher = game.publishers.length ? game.publishers[0] : 'N/A';\n    const artists = game.artists ? game.artists.join(', ') : 'N/A';\n    const ages = game.age.concat('+');\n\n    rows = [\n      createData('Ages', ages),\n      createData('Year Published', year),\n      createData('Publisher', publisher),\n      createData('Artists', artists),\n      createData(\n        'Mechanics',\n        // <Grid\n        //   container\n        //   spacing={gridSpacing}\n        //   direction={'row'}\n        // >\n        MechanicsComps\n        // {/* </Grid> */}\n      ),\n      createData(\n        'Categories',\n        // <Grid\n        //   container\n        //   spacing={gridSpacing}\n        //   direction={'row'}\n        // >\n        CategoriesComps\n        // {/* </Grid> */}\n      ),\n    ];\n  }\n  return (\n    <ContentContainer header='Details'>\n      {game ? (\n        <Table>\n          <TableBody>\n            {rows\n              ? rows.map((row, idx) => (\n                  <StyledRow key={idx}>\n                    <TableCell\n                      component='th'\n                      scope='row'\n                      sx={{\n                        color: 'primary.text',\n                        fontSize: isSmallScreen ? '1.1rem' : '1.3rem',\n                      }}\n                    >\n                      {row.name}\n                    </TableCell>\n                    <TableCell\n                      sx={{\n                        color: 'primary.text',\n                        fontSize: isSmallScreen ? '.9rem' : '1.1rem',\n                      }}\n                    >\n                      {row.data}\n                    </TableCell>\n                  </StyledRow>\n                ))\n              : null}\n          </TableBody>\n        </Table>\n      ) : (\n        <CircularLoading />\n      )}\n    </ContentContainer>\n  );\n}\n","import React, { useEffect, useContext } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport DataContext from '../../context/DataContext';\nimport { Stack, Typography } from '@mui/material';\nimport ContentContainer from '../common/ContentContainer';\nimport GameDescription from './GameDescription';\nimport GameDescSkeleton from './GameDescSkeleton';\nimport MediaContainer from '../videos/MediaContainer';\nimport GameDetails from './GameDetails';\n\nexport default function GameDetailsPage() {\n  const { game, videos, checkGameCache } = useContext(DataContext);\n  const gameID = useParams().id;\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    try {\n      if (!game || game.objectid !== gameID) {\n        // GET request to check cache for game\n        checkGameCache(gameID);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [game, pathname, checkGameCache, gameID]);\n\n  const NoGameFound = () => (\n    <Stack>\n      <ContentContainer>\n        <Typography\n          variant='h5'\n          textAlign={'center'}\n          color={'primary.text'}\n        >\n          Sorry, no game found with ID '{gameID}'.\n        </Typography>\n      </ContentContainer>\n    </Stack>\n  );\n\n  return game === -1 ? (\n    <NoGameFound />\n  ) : (\n    <Stack spacing={'.3rem'}>\n      {game ? <GameDescription game={game} /> : <GameDescSkeleton />}\n      <MediaContainer\n        game={game}\n        items={videos}\n      />\n      <GameDetails game={game} />\n    </Stack>\n  );\n}\n","import React, { useContext } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport UserContext from './context/UserContext';\nimport NotFound from './components/NotFound';\nimport Home from './components/Home';\nimport LoginForm from './components/account/LoginForm';\nimport SignUpForm from './components/account/SignUpForm';\nimport Profile from './components/account/Profile';\n// import SearchResultsPage from './components/search/SearchResultsPage';\nimport GameDetailsPage from './components/games/GameDetailsPage';\n\nexport default function AllRoutes() {\n  const { loginUser, registerUser } = useContext(UserContext);\n  return (\n    <Routes>\n      <Route\n        path='*'\n        element={<NotFound />}\n      />\n      <Route\n        path='/'\n        element={<Home />}\n      />\n      <Route\n        path='/login'\n        element={<LoginForm loginUser={loginUser} />}\n      />\n      <Route\n        path='/signup'\n        element={<SignUpForm registerUser={registerUser} />}\n      />\n      <Route\n        path='/profile/:username'\n        element={<Profile itemsOnPage={9} />}\n      />\n      {/* <Route\n        path='search/:path/:id'\n        element={<SearchResultsPage itemsOnPage={30} />}\n      /> */}\n      <Route\n        path='/games/:id'\n        element={<GameDetailsPage />}\n      />\n    </Routes>\n  );\n}\n","import React from 'react';\nimport { Stack, Grid } from '@mui/material';\nimport BaseSkeleton from '../common/BaseSkeleton';\n\nexport default function CollectionSkeleton({ itemsOnPage, isSmallScreen }) {\n  let skelItems = [];\n\n  for (let i = 0; i < itemsOnPage; i++) {\n    skelItems.push(\n      <Grid\n        item\n        key={i}\n        sx={{ marginBottom: 2 }}\n        lg={4}\n      >\n        <BaseSkeleton\n          width={isSmallScreen ? '16rem' : '20rem'}\n          height={isSmallScreen ? '19rem' : '24rem'}\n          shadow={1}\n          center={true}\n        />\n      </Grid>\n    );\n  }\n\n  return (\n    <Stack spacing={2}>\n      <Stack\n        spacing={1}\n        padding={'1.5rem 1.5rem 0rem 2rem'}\n      >\n        <BaseSkeleton width='7rem' />\n        <BaseSkeleton\n          width='8rem'\n          height='1.5rem'\n        />\n      </Stack>\n      <Grid\n        container\n        direction={'row'}\n        sx={{ width: '100%', justifyContent: 'space-around' }}\n      >\n        {skelItems.map((i) => i)}\n      </Grid>\n    </Stack>\n  );\n}\n","import React from 'react';\nimport { Skeleton, alpha } from '@mui/material';\nimport styled from '@emotion/styled';\n\nconst StyledSkel = styled(Skeleton)(({ theme }) => ({\n  backgroundColor: alpha(theme.palette.primary.muted, 0.4),\n  '& .MuiSkeleton-root': {\n    animationDuration: '.3sec',\n  },\n}));\n\nexport default function BaseSkeleton({\n  variant = 'rounded',\n  width = '100%',\n  height = '2rem',\n  shadow,\n  center,\n}) {\n  const boxShadow = shadow ? shadow : 'none';\n  return (\n    <StyledSkel\n      variant={variant}\n      animation='wave'\n      sx={{\n        margin: center ? 'auto' : null,\n        width: width,\n        height: height,\n        boxShadow: boxShadow,\n      }}\n    />\n  );\n}\n","import React from 'react';\nimport { Grid, ListItem, ListItemIcon, ListItemText } from '@mui/material';\nimport { Person, AccessTime } from '@mui/icons-material';\n\nexport default function PlayersAndDuration({\n  min_players,\n  max_players,\n  min_playtime,\n  max_playtime,\n  isSmallScreen,\n}) {\n  /** format string for num of players to only display\n   * min_players if it's equal to max_players\n   *\n   * some API data with have min and max as same value\n   *\n   * instead of displaying players as 1-1,\n   * will just have display of 1\n   *\n   */\n  const players = () => {\n    const players =\n      min_players === max_players\n        ? min_players\n        : min_players + ' - ' + max_players;\n    return [<Person />, players];\n  };\n\n  /** format string for duration of playtime to only display\n   * min_playtime if it's equal to max_playtime\n   *\n   * some API data with have min and max as same value\n   *\n   * instead of displaying playtime as 30-30,\n   * will just have display of 30\n   *\n   */\n  const duration = () => {\n    const duration =\n      min_playtime === max_playtime\n        ? min_playtime\n        : min_playtime + ' - ' + max_playtime;\n    return [<AccessTime />, duration];\n  };\n\n  return (\n    <>\n      {[players(), duration()].map((i, idx, arr) => {\n        return (\n          <Grid\n            item\n            key={idx}\n          >\n            <ListItem sx={{ padding: isSmallScreen ? 0 : null }}>\n              <ListItemIcon sx={{ color: 'primary.text', minWidth: 30 }}>\n                {i[0]}\n              </ListItemIcon>\n              <ListItemText>{i[1]}</ListItemText>\n            </ListItem>\n          </Grid>\n        );\n      })}\n    </>\n  );\n}\n"],"names":["StyledContainer","styled","Container","_ref","alphascale","theme","margin","backgroundColor","alpha","concat","palette","primary","main","borderRadius","shape","alignSelf","ContentContainer","_ref2","_ref2$alphascale","_ref2$shadow","shadow","_ref2$header","header","headerData","divider","blur","children","isSmallScreen","useContext","DataContext","_jsxs","maxWidth","sx","padding","boxShadow","backdropFilter","Stack","direction","spacing","_jsx","Typography","variant","color","gutterBottom","Divider","bgcolor","NotFound","textAlign","Home","_useContext","UserContext","currentUser","navigate","_useContext2","hotGames","getHotCache","setGame","useEffect","length","hotListDimensions","width","height","fontSize","WelcomeMsgComp","Box","handleGameClick","gameID","HotGamesComp","List","map","i","idx","GamesListItem","item","clickFunc","isLastItem","dimensions","hotListItem","id","CircularLoading","PasswordAdornment","showPassword","handleShowPassword","InputAdornment","position","IconButton","onClick","onMouseDown","event","preventDefault","edge","VisibilityOff","Visibility","FormComponent","initialState","inputs","submitFunc","_useState","useState","_useState2","_slicedToArray","setShowPassword","_useState3","_useState4","isLoading","setIsLoading","isLogin","inputType","_useFields","useFields","_useFields2","formData","handleChange","formErrors","setFormErrors","show","handleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","result","wrap","_context","prev","next","sent","err","stop","_x","apply","arguments","paddingTop","FormBox","component","onSubmit","marginBottom","ErrorSpan","name","label","toUpperCase","slice","isPassword","FormControl","FormTextField","type","value","onChange","autoFocus","autoComplete","InputProps","endAdornment","helperText","required","justifyContent","Link","to","PrimaryButton","className","right","size","LoginForm","loginUser","username","password","SignUpForm","registerUser","email","ProfileSkeleton","avatarSize","_Fragment","Grid","xs","md","BaseSkeleton","marginTop","EditAvatar","imageURL","handleFileUpload","Avatar","src","marginLeft","InputLabel","htmlFor","Button","PhotoCamera","marginRight","TextField","display","EditProfile","open","setOpen","updateUser","userData","setFormData","handleClose","getChanges","formEntries","Object","entries","initialEntries","updateData","filter","_ref3","entry","_ref4","abrupt","msg","Dialog","fullScreen","onClose","fullWidth","DialogTitle","paddingBottom","DialogContent","file","target","files","reader","FileReader","onloadend","_objectSpread","readAsDataURL","DialogActions","CancelButton","CollectionComp","lazy","Profile","itemsOnPage","useParams","getCurrentUser","token","container","alignItems","flexGrow","Edit","Suspense","fallback","CollectionSkeleton","Navigate","AddButton","secondary","AddedBadgeBox","success","PlayersAndDurationGrid","_defineProperty","text","breakpoints","down","GameDescription","_ref5","game","addGame","userGameIDs","inCollection","has","objectid","showExpandDesc","handleAddBtnClick","_ref6","descFrag","document","createRange","createContextualFragment","description","getElementById","appendChild","flex","Check","Fab","Add","paddingRight","ListItem","ListItemText","yearpublished","PlayersAndDuration","min_players","minplayers","max_players","maxplayers","min_playtime","minplaytime","max_playtime","maxplaytime","CardMedia","image","alt","maxHeight","Collapse","in","collapsedSize","window","scrollTo","top","ExpandLess","ExpandMore","PDSkelGrid","GameDescSkeleton","skels","numSkels","firstBreak","secondBreak","skelWidth","Math","floor","random","push","genSkelDesc","StyledBox","common","black","VideoOverlay","title","Tooltip","textShadow","noWrap","YouTubeIcon","MediaCard","handleClick","Card","CardActionArea","snippet","thumbnails","medium","url","objectFit","MediaSkeleton","genSkels","VideoPlayer","video","CloseIcon","videoId","allowFullScreen","allow","border","MediaContainer","items","setVideo","overflow","createData","data","undefined","StyledRow","TableRow","dark","GameDetails","MechanicsComps","CategoriesComps","rows","useTheme","useMediaQuery","boardgamemechanic","m","_text","join","boardgamecategory","c","year","publisher","publishers","artists","ages","age","Table","TableBody","row","TableCell","scope","GameDetailsPage","videos","checkGameCache","pathname","useLocation","console","error","NoGameFound","AllRoutes","Routes","Route","path","element","skelItems","lg","center","StyledSkel","Skeleton","muted","animationDuration","_ref2$variant","_ref2$width","_ref2$height","animation","players","Person","duration","AccessTime","arr","ListItemIcon","minWidth"],"sourceRoot":""}
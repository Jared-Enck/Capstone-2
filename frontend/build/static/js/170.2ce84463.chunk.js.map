{"version":3,"file":"static/js/170.2ce84463.chunk.js","mappings":"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","sources":["components/common/ContentContainer.js","components/NotFound.js","components/Home.js","components/common/PasswordAdornment.js","components/common/FormComponent.js","components/account/LoginForm.js","components/account/SignUpForm.js","components/account/ProfileSkeleton.js","components/account/EditAvatar.js","components/account/EditProfile.js","components/account/Profile.js","components/search/ResultsSkeleton.js","components/search/SearchResultsPage.js","components/games/GameDescription.js","components/games/GameDescSkeleton.js","components/games/VideoOverlay.js","components/games/MediaCard.js","components/games/MediaSkeleton.js","components/games/MediaContainer.js","components/games/DetailListItem.js","components/games/GameDetails.js","components/games/GameDetailsPage.js","AllRoutes.js","components/common/BaseSkeleton.js","components/common/PlayersAndDuration.js","components/common/ResultsPagination.js","components/games/CollectionSkeleton.js","components/games/GameCard.js","hooks/usePagination.js"],"sourcesContent":["import React from 'react';\nimport { Container, Typography, Divider, alpha, Stack } from '@mui/material';\nimport styled from '@emotion/styled';\n\nconst StyledContainer = styled(Container)(({ alphascale, theme }) => ({\n  margin: 0,\n  backgroundColor: alpha(`${theme.palette.primary.main}`, alphascale),\n  borderRadius: theme.shape.borderRadius,\n  padding: '1.5rem',\n  alignSelf: 'center',\n}));\n\nexport default function ContentContainer({\n  alphascale = 1,\n  shadow = 'none',\n  header = null,\n  headerData,\n  divider,\n  blur,\n  children,\n}) {\n  return (\n    <StyledContainer\n      maxWidth={'lg'}\n      alphascale={alphascale}\n      sx={{\n        boxShadow: shadow,\n        backdropFilter: blur ? `blur(7px)` : 'none',\n      }}\n    >\n      {header ? (\n        <Stack\n          direction={'row'}\n          spacing={2}\n        >\n          <Typography\n            variant={'h5'}\n            sx={{\n              color: 'secondary.main',\n            }}\n            gutterBottom\n          >\n            {header}\n          </Typography>\n\n          {headerData ? (\n            <Typography\n              variant='h6'\n              sx={{ color: 'primary.muted' }}\n            >{`(${headerData})`}</Typography>\n          ) : null}\n        </Stack>\n      ) : null}\n      {divider ? <Divider sx={{ color: 'primary.muted' }} /> : null}\n      {children}\n    </StyledContainer>\n  );\n}\n","import React from 'react';\nimport { Typography, Stack } from '@mui/material';\nimport ContentContainer from './common/ContentContainer';\n\nexport default function NotFound() {\n  return (\n    <Stack>\n      <ContentContainer>\n        <Typography\n          variant='h5'\n          sx={{ color: 'primary.text', textAlign: 'center' }}\n        >\n          404 Sorry, can't find what you're looking for.\n        </Typography>\n      </ContentContainer>\n    </Stack>\n  );\n}\n","import React, { useContext, useEffect } from 'react';\nimport UserContext from '../context/UserContext';\nimport DataContext from '../context/DataContext';\nimport { Stack, Typography, Box, Grid } from '@mui/material';\nimport ContentContainer from './common/ContentContainer';\nimport GamesListItem from './common/GamesListItem';\nimport CircularLoading from './common/CircularLoading';\n\nexport default function Home() {\n  const { currentUser, navigate } = useContext(UserContext);\n  const { hotGames, getHotCache, setGame } = useContext(DataContext);\n\n  useEffect(() => {\n    if (!hotGames.length && currentUser) getHotCache();\n  }, [hotGames.length, currentUser, getHotCache]);\n\n  const WelcomeMsg = () => {\n    return (\n      <Box\n        sx={{\n          color: 'primary.text',\n          fontSize: '1.2rem',\n          width: '95%',\n          margin: 'auto',\n        }}\n      >\n        <Typography\n          variant='h5'\n          gutterBottom\n        >\n          Welcome to MyGameNights!\n        </Typography>\n        <p>\n          You can browse an extensive library of games by searching for board\n          game titles.\n        </p>\n        <p>\n          Create a profile and use MyGameNights to compile a digital library of\n          all your games. Your personal collection is now complete with videos\n          and resources to jog your memory when you’ve forgotten the rules or to\n          help you decide what to play.\n        </p>\n        {/* <p>\n          MyGameNights makes it easy to find new games using a mechanic you\n          love, expansions for your tried and true staples, or games built\n          around your favorite franchise. (Star Wars anyone?)\n        </p> */}\n        <p>\n          Click around. Have fun. Build your collection. Game night has never\n          been better.\n        </p>\n      </Box>\n    );\n  };\n  const handleGameClick = (gameID) => {\n    setGame('');\n    navigate(`/games/${gameID}`);\n  };\n  const HotGames = () => {\n    return (\n      <>\n        <Grid\n          container\n          direction={'column'}\n          spacing={1}\n        >\n          <Grid item>\n            <Typography\n              variant='h4'\n              sx={{ color: 'secondary.main' }}\n            >\n              Popular Games\n            </Typography>\n          </Grid>\n          {hotGames.length ? (\n            hotGames.map((i, idx) => {\n              return (\n                <Grid\n                  item\n                  key={i.id}\n                >\n                  <GamesListItem\n                    item={i}\n                    idx={idx}\n                    clickFunc={handleGameClick}\n                    isLastItem={i === hotGames.length - 1}\n                    dimensions={{ width: '8ch', height: '8ch', fontSize: 'h4' }}\n                    homepage\n                  />\n                </Grid>\n              );\n            })\n          ) : (\n            <CircularLoading />\n          )}\n        </Grid>\n      </>\n    );\n  };\n  return (\n    <Stack sx={{ paddingTop: 10 }}>\n      <ContentContainer\n        shadow={2}\n        alphascale={0.4}\n        blur\n      >\n        {currentUser ? <HotGames /> : <WelcomeMsg />}\n      </ContentContainer>\n    </Stack>\n  );\n}\n","import React from 'react';\nimport { InputAdornment, IconButton } from '@mui/material';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\n\nexport default function PasswordAdornment({\n  showPassword,\n  handleShowPassword,\n}) {\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n  return (\n    <InputAdornment position='end'>\n      <IconButton\n        aria-label='toggle password visibility'\n        onClick={handleShowPassword}\n        onMouseDown={handleMouseDownPassword}\n        edge='end'\n        sx={{ color: 'primary.muted' }}\n      >\n        {showPassword ? <VisibilityOff /> : <Visibility />}\n      </IconButton>\n    </InputAdornment>\n  );\n}\n","import React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport UserContext from '../../context/UserContext';\nimport { FormControl, Stack, Typography, Box } from '@mui/material';\nimport { FormBox, FormTextField, ErrorSpan } from '../styled';\nimport ContentContainer from './ContentContainer';\nimport PasswordAdornment from './PasswordAdornment';\nimport { PrimaryButton } from '../styled';\nimport useFields from '../../hooks/useFields';\nimport CircularLoading from './CircularLoading';\n\nexport default function FormComponent({\n  header,\n  initialState,\n  inputs,\n  submitFunc,\n}) {\n  const [showPassword, setShowPassword] = useState(false);\n  const { navigate } = useContext(UserContext);\n  const [isLoading, setIsLoading] = useState(false);\n  const isLogin = header === 'Login';\n\n  const inputType = showPassword ? 'text' : 'password';\n\n  const [formData, handleChange, formErrors, setFormErrors] =\n    useFields(initialState);\n\n  // handle showPassword toggle\n  const handleShowPassword = () => setShowPassword((show) => !show);\n\n  // handle form submit\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    // POST request in submitFunc with formData\n    const result = await submitFunc(formData);\n    if (result) {\n      // if errors in POST request\n      setFormErrors(result.err);\n      setIsLoading(false);\n    } else {\n      setIsLoading(false);\n      navigate('/');\n    }\n  };\n\n  return (\n    <Stack sx={{ paddingTop: 10 }}>\n      <ContentContainer\n        alphascale={0.4}\n        blur\n      >\n        <FormBox\n          component='form'\n          onSubmit={handleSubmit}\n        >\n          <Typography\n            variant='h5'\n            sx={{ color: 'primary.text' }}\n          >\n            {header}\n          </Typography>\n\n          <Box sx={{ height: 24, width: 400, marginBottom: '.4rem' }}>\n            {typeof formErrors[0] === 'string' ? (\n              <ErrorSpan>{formErrors[0]}</ErrorSpan>\n            ) : null}\n          </Box>\n\n          <Stack spacing={3}>\n            {inputs.map((name, idx) => {\n              const firstLetter = name[0].toUpperCase();\n              const label = firstLetter.concat(name.slice(1));\n              const isPassword = name === 'password';\n\n              return (\n                <FormControl key={name}>\n                  <FormTextField\n                    variant='outlined'\n                    label={label}\n                    type={isPassword ? inputType : 'text'}\n                    name={name}\n                    value={formData[name]}\n                    onChange={handleChange}\n                    autoFocus={idx === 0}\n                    autoComplete={isPassword ? 'current-password' : ''}\n                    InputProps={{\n                      endAdornment: isPassword ? (\n                        <PasswordAdornment\n                          showPassword={showPassword}\n                          handleShowPassword={handleShowPassword}\n                        />\n                      ) : null,\n                    }}\n                    helperText={\n                      formErrors.length && !isLogin ? (\n                        <ErrorSpan>{formErrors[0][name]}</ErrorSpan>\n                      ) : null\n                    }\n                    required\n                  />\n                </FormControl>\n              );\n            })}\n\n            {isLogin ? (\n              <Box sx={{ height: 56, display: 'flex' }}>\n                <Typography\n                  sx={{\n                    textAlign: 'center',\n                    color: 'primary.text',\n                    margin: 'auto',\n                  }}\n                >\n                  Don't have an account yet? Sign up\n                  <Link to={'/signup'}> here.</Link>\n                </Typography>\n              </Box>\n            ) : null}\n\n            <PrimaryButton\n              variant='contained'\n              type='submit'\n              className='main-button'\n            >\n              Submit\n              {isLoading ? (\n                <Box\n                  sx={{\n                    position: 'absolute',\n                    right: 20,\n                  }}\n                >\n                  <CircularLoading\n                    size='1.3rem'\n                    color='primary.dark'\n                  />\n                </Box>\n              ) : null}\n            </PrimaryButton>\n          </Stack>\n        </FormBox>\n      </ContentContainer>\n    </Stack>\n  );\n}\n","import React from 'react';\nimport FormComponent from '../common/FormComponent';\n\nexport default function LoginForm({ loginUser }) {\n  const initialState = {\n    username: '',\n    password: '',\n  };\n\n  return (\n    <FormComponent\n      header={'Login'}\n      initialState={initialState}\n      inputs={['username', 'password']}\n      submitFunc={loginUser}\n    />\n  );\n}\n","import React from 'react';\nimport FormComponent from '../common/FormComponent';\n\nexport default function SignUpForm({ registerUser }) {\n  const initialState = {\n    username: '',\n    password: '',\n    email: '',\n  };\n\n  return (\n    <FormComponent\n      header={'Sign Up'}\n      initialState={initialState}\n      inputs={['username', 'password', 'email']}\n      submitFunc={registerUser}\n    />\n  );\n}\n","import React from 'react';\nimport { Grid } from '@mui/material';\nimport BaseSkeleton from '../common/BaseSkeleton';\n\nexport default function ProfileSkeleton() {\n  return (\n    <>\n      <Grid item>\n        <BaseSkeleton\n          variant='circular'\n          width={120}\n          height={120}\n        />\n      </Grid>\n      <Grid\n        item\n        xs={8}\n        marginTop={'auto'}\n      >\n        <BaseSkeleton />\n      </Grid>\n    </>\n  );\n}\n","import React from 'react';\nimport { Grid, Avatar, Box, Button, InputLabel } from '@mui/material';\nimport { PhotoCamera } from '@mui/icons-material';\n\nexport default function EditAvatar({ imageURL, handleFileUpload }) {\n  return (\n    <Grid\n      container\n      direction={'row'}\n      justifyContent={'space-between'}\n    >\n      <Grid item>\n        <Avatar\n          src={imageURL}\n          sx={{\n            width: 120,\n            height: 120,\n          }}\n        />\n      </Grid>\n      <Grid\n        item\n        sx={{ display: 'flex' }}\n      >\n        <Box sx={{ marginTop: 'auto' }}>\n          <InputLabel htmlFor='imageURL'>\n            <Button\n              variant='contained'\n              component='span'\n              className='main-button'\n              sx={{\n                bgcolor: 'primary.dark',\n                '&:hover': {\n                  bgcolor: 'secondary.main',\n                  color: 'primary.main',\n                },\n              }}\n            >\n              <PhotoCamera\n                fontSize='small'\n                sx={{ marginRight: 1 }}\n              />\n              Upload Image\n            </Button>\n            <input\n              id='imageURL'\n              type='file'\n              hidden\n              onChange={handleFileUpload}\n            />\n          </InputLabel>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useContext, useEffect } from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Stack,\n  FormControl,\n  Box,\n} from '@mui/material';\nimport {\n  FormTextField,\n  PrimaryButton,\n  CancelButton,\n  ErrorSpan,\n} from '../styled';\nimport useFields from '../../hooks/useFields';\nimport UserContext from '../../context/UserContext';\nimport EditAvatar from './EditAvatar';\n\nexport default function EditProfile({ open, setOpen, username }) {\n  const { updateUser, userData } = useContext(UserContext);\n\n  const [formData, handleChange, formErrors, setFormErrors, setFormData] =\n    useFields(userData);\n\n  // handle closing of dialog box\n  const handleClose = () => {\n    setFormErrors([]);\n    setFormData(userData);\n    setOpen(false);\n  };\n\n  // handle file uploading of imageURL\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n\n    reader.onloadend = () => {\n      setFormData({ ...formData, imageURL: reader.result });\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  /** Check for changes in edit form\n   *\n   * @param {*} formData { username, email, imageURL }\n   * @param {*} userData { username, email, imageURL }\n   * @returns {*} { username: 'newUser' }\n   *\n   * maps entries of formData and compare values\n   *  against userData values\n   *\n   * if no changes, return -1\n   *\n   * example --\n   *\n   * userData = { username: 'testUser', email: 'me@me.com', imageURL: 'someImageURL' }\n   *\n   * formData = { username: 'newUser', email: 'me@me.com', imageURL: 'someImageURL' }\n   */\n  const getChanges = (formData, userData) => {\n    const formEntries = Object.entries(formData);\n    const initialEntries = Object.entries(userData);\n    const updateData = {};\n\n    const entries = formEntries.filter(\n      ([key, val], idx) => val !== initialEntries[idx][1]\n    );\n\n    if (!entries.length) return -1;\n\n    entries.map((entry) => (updateData[entry[0]] = entry[1]));\n\n    return updateData;\n  };\n\n  // handle form submit\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // check for any changes\n    const updateData = getChanges(formData, userData);\n\n    if (updateData === -1) return handleClose();\n\n    // Patch request with updated data\n    const result = await updateUser(updateData, username);\n\n    if (result) {\n      setFormErrors(result.msg);\n    } else {\n      handleClose();\n    }\n  };\n\n  useEffect(() => {\n    setFormData(userData);\n  }, [userData, setFormData]);\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      sx={{\n        '& .MuiPaper-root': {\n          bottom: '5rem',\n          bgcolor: 'primary.main',\n          width: 600,\n          padding: '0rem 4rem 1rem 4rem',\n        },\n      }}\n    >\n      <DialogTitle\n        fontSize={'1.5rem'}\n        sx={{ color: 'primary.text', paddingBottom: 0 }}\n      >\n        Edit Profile\n      </DialogTitle>\n      <DialogContent>\n        <Box sx={{ height: 24, width: 400, marginBottom: '.4rem' }}>\n          {typeof formErrors[0] === 'string' ? (\n            <ErrorSpan>{formErrors[0]}</ErrorSpan>\n          ) : null}\n        </Box>\n        <Stack spacing={3}>\n          <EditAvatar\n            imageURL={formData.imageURL}\n            handleFileUpload={handleFileUpload}\n          />\n          {['username', 'email'].map((name) => {\n            const firstLetter = name[0].toUpperCase();\n            const label = firstLetter.concat(name.slice(1));\n\n            return (\n              <FormControl key={name}>\n                <FormTextField\n                  variant='outlined'\n                  label={label}\n                  type={'text'}\n                  name={name}\n                  value={formData[name]}\n                  onChange={handleChange}\n                  helperText={\n                    formErrors.length && typeof formErrors[0] !== 'string' ? (\n                      <ErrorSpan>{formErrors[0][name]}</ErrorSpan>\n                    ) : null\n                  }\n                />\n              </FormControl>\n            );\n          })}\n        </Stack>\n      </DialogContent>\n      <DialogActions sx={{ marginRight: 'auto', padding: '5px 0px 0px 24px' }}>\n        <CancelButton\n          variant='outlined'\n          onClick={handleClose}\n          className='main-button'\n        >\n          Cancel\n        </CancelButton>\n        <PrimaryButton\n          variant='contained'\n          onClick={handleSubmit}\n          className='main-button'\n        >\n          Submit\n        </PrimaryButton>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useContext, useEffect, useState, lazy, Suspense } from 'react';\nimport { useParams, Navigate } from 'react-router-dom';\nimport UserContext from '../../context/UserContext';\nimport {\n  Stack,\n  Typography,\n  Grid,\n  Avatar,\n  Button,\n  Divider,\n} from '@mui/material';\nimport { Edit } from '@mui/icons-material';\nimport ContentContainer from '../common/ContentContainer';\nimport ProfileSkeleton from './ProfileSkeleton';\nimport CollectionSkeleton from '../games/CollectionSkeleton';\nimport EditProfile from './EditProfile';\n\nconst CollectionComp = lazy(() => import('../games/Collection'));\n\nexport default function Profile({ itemsOnPage }) {\n  const { username } = useParams();\n  const { currentUser, getCurrentUser, userData, token } =\n    useContext(UserContext);\n\n  const [open, setOpen] = useState(false);\n\n  const handleEditClick = () => {\n    setOpen(true);\n  };\n\n  useEffect(() => {\n    // GET request for userData\n    if (!userData && currentUser) getCurrentUser(username);\n    // eslint-disable-next-line\n  }, [currentUser, getCurrentUser]);\n\n  if (!token) return <Navigate to={'/login'} />;\n\n  return (\n    <Stack>\n      <ContentContainer>\n        <Grid\n          container\n          spacing={2}\n          direction={'row'}\n          alignItems={'flex-end'}\n        >\n          {userData ? (\n            <>\n              <EditProfile\n                open={open}\n                setOpen={setOpen}\n                username={username}\n              />\n              <Grid item>\n                <Avatar\n                  src={userData.imageURL}\n                  sx={{ width: 120, height: 120 }}\n                />\n              </Grid>\n              <Grid item>\n                <Typography\n                  variant='h5'\n                  color={'secondary.main'}\n                >\n                  {userData.username}\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                marginLeft={'auto'}\n              >\n                <Button\n                  size='small'\n                  onClick={handleEditClick}\n                >\n                  <Edit\n                    fontSize='medium'\n                    sx={{\n                      color: 'secondary.main',\n                      marginLeft: 2,\n                    }}\n                  />\n                </Button>\n              </Grid>\n            </>\n          ) : (\n            <ProfileSkeleton />\n          )}\n          <Grid\n            item\n            xs={12}\n          >\n            <Divider sx={{ color: 'primary.muted' }} />\n          </Grid>\n        </Grid>\n        <Suspense fallback={<CollectionSkeleton itemsOnPage={itemsOnPage} />}>\n          <CollectionComp itemsOnPage={itemsOnPage} />\n        </Suspense>\n      </ContentContainer>\n    </Stack>\n  );\n}\n","import React from 'react';\nimport { Grid } from '@mui/material';\nimport BaseSkeleton from '../common/BaseSkeleton';\n\nexport default function ResultsSkeleton({ itemsOnPage, currentUser }) {\n  let skelItems = [];\n\n  for (let i = 0; i < itemsOnPage; i++) {\n    skelItems.push(\n      <Grid\n        item\n        key={i}\n      >\n        <BaseSkeleton\n          width={345}\n          height={currentUser ? 383 : 328}\n          shadow={1}\n        />\n      </Grid>\n    );\n  }\n\n  return <>{skelItems.map((i) => i)}</>;\n}\n","import React, { useContext, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport DataContext from '../../context/DataContext';\nimport UserContext from '../../context/UserContext';\nimport { Stack, Grid } from '@mui/material';\nimport ContentContainer from '../common/ContentContainer';\nimport GameCard from '../games/GameCard';\nimport ResultsPagination from '../common/ResultsPagination';\nimport usePagination from '../../hooks/usePagination';\nimport ResultsSkeleton from './ResultsSkeleton';\nimport BaseSkeleton from '../common/BaseSkeleton';\n\nexport default function SearchResultsPage({ itemsOnPage }) {\n  const { path, id } = useParams();\n  const { searchResults, getSearchResults, resultsHeader, getSearchHeader } =\n    useContext(DataContext);\n  const { currentUser } = useContext(UserContext);\n  const { pages, count } = searchResults;\n\n  const [page, pageCount, handleChange, setPage] = usePagination(\n    count,\n    itemsOnPage\n  );\n\n  useEffect(() => {\n    // if no header, gets header\n    if (!resultsHeader) getSearchHeader(id);\n  }, [resultsHeader, getSearchHeader, id]);\n\n  useEffect(() => {\n    // get search results from params\n    const searchObj = { [path]: id };\n    if (!Object.keys(pages).length) {\n      // no content in pages set page to 1\n      setPage(1);\n      // GET request for search results\n      getSearchResults(searchObj);\n    } else {\n      if (!pages[page]) {\n        // Get request for pagination skip amount\n        const skipAmount = (page - 1) * itemsOnPage;\n        getSearchResults(searchObj, page, skipAmount);\n      }\n    }\n    window.scrollTo({ top: 0, behavior: 'instant' });\n  }, [getSearchResults, page, setPage, itemsOnPage, pages, id, path]);\n\n  const gridItemComp = (game) => (\n    <Grid\n      item\n      key={game.id}\n    >\n      <GameCard game={game} />\n    </Grid>\n  );\n\n  const header = `Results for \"${resultsHeader}\"`;\n\n  return (\n    <Stack>\n      <ContentContainer\n        header={\n          resultsHeader ? (\n            header\n          ) : (\n            <BaseSkeleton\n              width={'30ch'}\n              height='2.5rem'\n            />\n          )\n        }\n        divider\n      >\n        <Grid\n          container\n          spacing={3}\n          padding={'1.5rem'}\n          direction={'row'}\n          justifyContent={'center'}\n        >\n          {pages[page] ? (\n            pages[page].map((g) => gridItemComp(g))\n          ) : (\n            <ResultsSkeleton\n              itemsOnPage={itemsOnPage}\n              currentUser={currentUser}\n            />\n          )}\n        </Grid>\n        {pageCount > 1 ? (\n          <ResultsPagination\n            page={page}\n            handleChange={handleChange}\n            pageCount={pageCount}\n          />\n        ) : null}\n      </ContentContainer>\n    </Stack>\n  );\n}\n","import React, { useState, useContext } from 'react';\nimport DataContext from '../../context/DataContext';\nimport UserContext from '../../context/UserContext';\nimport {\n  Box,\n  Typography,\n  Collapse,\n  Divider,\n  Grid,\n  Button,\n  Stack,\n  ListItem,\n  ListItemText,\n} from '@mui/material';\nimport { ExpandMore, ExpandLess, Add, Check } from '@mui/icons-material';\nimport PlayersAndDuration from '../common/PlayersAndDuration';\nimport styled from '@emotion/styled';\nimport ContentContainer from '../common/ContentContainer';\nimport CircularLoading from '../common/CircularLoading';\n\nconst AddButton = styled(Button)(({ theme }) => ({\n  color: theme.palette.secondary.main,\n  '&:hover': {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.primary.main,\n  },\n}));\n\nconst AddedBadgeBox = styled(Box)(({ theme }) => ({\n  color: theme.palette.success.main,\n  display: 'flex',\n}));\n\nexport default function GameDescription({ game }) {\n  const [open, setOpen] = useState(false);\n  const { addGame } = useContext(DataContext);\n  const { currentUser, userGameIDs } = useContext(UserContext);\n  const inCollection = userGameIDs ? userGameIDs.has(game.objectid) : false;\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleDescBtnClick = () => {\n    setOpen(!open);\n  };\n\n  const handleAddBtnClick = async () => {\n    setIsLoading(true);\n    // POST request to server to add game\n    await addGame(game);\n    setIsLoading(false);\n  };\n\n  const AddButtonComp = () => (\n    <AddButton\n      variant='text'\n      onClick={handleAddBtnClick}\n      className='main-button'\n    >\n      <Add fontSize='small' />\n\n      <Typography paddingRight={1}>Add to collection</Typography>\n\n      {isLoading ? (\n        <CircularLoading\n          size='1rem'\n          color='primary.dark'\n        />\n      ) : (\n        <Box width={'1rem'} />\n      )}\n    </AddButton>\n  );\n\n  const AddedBadgeComp = () => (\n    <AddedBadgeBox>\n      <Typography margin={1}>In Collection</Typography>\n      <Typography padding={'.3rem'}>\n        <Check />\n      </Typography>\n    </AddedBadgeBox>\n  );\n  return (\n    <ContentContainer>\n      <Stack spacing={1}>\n        <Box display={'flex'}>\n          <Typography\n            variant={'h4'}\n            sx={{\n              color: 'secondary.main',\n              flex: 1,\n            }}\n          >\n            {game.name}\n          </Typography>\n          {currentUser\n            ? inCollection\n              ? AddedBadgeComp()\n              : AddButtonComp()\n            : null}\n        </Box>\n        <Grid\n          sx={{\n            color: 'primary.text',\n          }}\n          container\n          direction={'row'}\n          height={'2rem'}\n        >\n          <Grid item>\n            <ListItem\n              disableGutters\n              sx={{ marginRight: 2 }}\n            >\n              <ListItemText>{game.yearpublished}</ListItemText>\n            </ListItem>\n          </Grid>\n          <PlayersAndDuration\n            min_players={game.minplayers}\n            max_players={game.maxplayers}\n            min_playtime={game.minplaytime}\n            max_playtime={game.maxplaytime}\n          />\n        </Grid>\n        <Divider sx={{ color: 'primary.muted' }} />\n        <Grid\n          container\n          direction={'row'}\n        >\n          <Grid\n            item\n            xs={4}\n          >\n            <img\n              width={300}\n              height={300}\n              src={game.image}\n              alt={game.name}\n            />\n          </Grid>\n          <Grid\n            item\n            xs={7}\n          >\n            {game.description ? (\n              game.description.length < 900 ? (\n                <Typography\n                  sx={{\n                    color: 'primary.text',\n                  }}\n                >\n                  {game.description}\n                </Typography>\n              ) : (\n                <Stack>\n                  <Collapse\n                    in={open}\n                    collapsedSize={265}\n                  >\n                    <Typography\n                      sx={{\n                        color: 'primary.text',\n                      }}\n                    >\n                      {game.description}\n                    </Typography>\n                  </Collapse>\n                  <Button\n                    sx={{\n                      height: '1.5rem',\n                      color: 'secondary.main',\n                      '&:hover': {\n                        backgroundColor: 'secondary.main',\n                        color: 'primary.main',\n                      },\n                    }}\n                    variant='text'\n                    onClick={handleDescBtnClick}\n                  >\n                    {open ? (\n                      <ExpandLess fontSize='large' />\n                    ) : (\n                      <ExpandMore fontSize='large' />\n                    )}\n                  </Button>\n                </Stack>\n              )\n            ) : null}\n          </Grid>\n        </Grid>\n      </Stack>\n    </ContentContainer>\n  );\n}\n","import React from 'react';\nimport { Stack, Grid, Divider, Typography } from '@mui/material';\nimport BaseSkeleton from '../common/BaseSkeleton';\nimport ContentContainer from '../common/ContentContainer';\n\nexport default function GameDescSkeleton() {\n  return (\n    <ContentContainer>\n      <Typography variant='h4'>\n        <BaseSkeleton width='40ch' />\n      </Typography>\n      <Grid\n        container\n        direction={'row'}\n        spacing={3}\n        sx={{\n          padding: '.3rem',\n        }}\n      >\n        <Grid item>\n          <BaseSkeleton width={220} />\n        </Grid>\n      </Grid>\n      <Divider />\n      <Grid\n        container\n        direction={'row'}\n        padding={'1.2rem'}\n      >\n        <Grid\n          item\n          xs={4}\n        >\n          <BaseSkeleton\n            width={300}\n            height={300}\n          />\n        </Grid>\n        <Grid\n          item\n          xs={7}\n        >\n          <Stack spacing={2.5}>\n            <BaseSkeleton width='65ch' />\n            <BaseSkeleton width='60ch' />\n            <BaseSkeleton width='50ch' />\n            <BaseSkeleton width='65ch' />\n            <BaseSkeleton width='50ch' />\n            <BaseSkeleton width='55ch' />\n          </Stack>\n        </Grid>\n      </Grid>\n    </ContentContainer>\n  );\n}\n","import React from 'react';\nimport { Box, Typography, alpha, Tooltip } from '@mui/material';\nimport styled from '@emotion/styled';\nimport YouTubeIcon from '@mui/icons-material/YouTube';\n\nconst StyledBox = styled(Box)(({ theme }) => ({\n  position: 'absolute',\n  backgroundColor: alpha(theme.palette.common.black, 0.6),\n  width: '100%',\n  height: '100%',\n  textAlign: 'center',\n  padding: '.5rem',\n}));\n\nexport default function VideoOverlay({ title }) {\n  return (\n    <Tooltip title={title}>\n      <StyledBox>\n        <Typography\n          sx={{\n            color: 'secondary.main',\n            textShadow: '2px 1px 1px solid black',\n          }}\n          variant='h5'\n          noWrap\n        >\n          {title}\n        </Typography>\n        <Box\n          sx={{\n            marginTop: '1rem',\n            color: 'red',\n          }}\n        >\n          <YouTubeIcon\n            sx={{\n              fontSize: '5rem',\n            }}\n          />\n        </Box>\n      </StyledBox>\n    </Tooltip>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { CardMedia, Card, CardActionArea } from '@mui/material';\nimport VideoOverlay from './VideoOverlay';\n\nexport default function MediaCard({ item, width, height, handleClick }) {\n  return (\n    <Card\n      sx={{\n        height: height,\n        width: width,\n        boxShadow: 0,\n      }}\n    >\n      <CardActionArea onClick={() => handleClick(item)}>\n        <VideoOverlay title={item.snippet.title} />\n        <CardMedia\n          src={item.snippet.thumbnails.medium.url}\n          sx={{\n            height: height,\n            width: width,\n            objectFit: 'fill',\n          }}\n          component='img'\n          alt={item.snippet.title}\n        />\n      </CardActionArea>\n    </Card>\n  );\n}\n","import React from 'react';\nimport { Grid } from '@mui/material';\nimport BaseSkeleton from '../common/BaseSkeleton';\nimport ContentContainer from '../common/ContentContainer';\n\nexport default function MediaSkeleton({ isVideo }) {\n  const height = 200;\n  const width = isVideo ? 300 : 200;\n  const header = isVideo ? 'Videos' : 'Images';\n  return (\n    <ContentContainer\n      header={header}\n      divider\n    >\n      <Grid\n        sx={{\n          alignItems: 'center',\n          height: 220,\n          overflow: 'auto',\n          marginTop: '.3rem',\n        }}\n        container\n        direction={'row'}\n        spacing={2}\n      >\n        <Grid item>\n          <BaseSkeleton\n            height={height}\n            width={width}\n          />\n        </Grid>\n        <Grid item>\n          <BaseSkeleton\n            height={height}\n            width={width}\n          />\n        </Grid>\n        <Grid item>\n          <BaseSkeleton\n            height={height}\n            width={width}\n          />\n        </Grid>\n      </Grid>\n    </ContentContainer>\n  );\n}\n","import React, { useCallback, useEffect, useRef } from 'react';\nimport { Grid, Typography } from '@mui/material';\nimport MediaCard from './MediaCard';\nimport ContentContainer from '../common/ContentContainer';\nimport MediaSkeleton from './MediaSkeleton';\n\nexport default function MediaContainer({ items, getVideos }) {\n  const videos = useRef();\n\n  const handleClick = (item) => {\n    console.log('opening video player...');\n    console.log(item);\n  };\n\n  // const handleScroll = useCallback((div) => {\n  //   const bottom = div.scrollHeight - div.scrollTop === div.clientHeight;\n  //   if (bottom) {\n  //     getVideos();\n  //     div.removeEventListener('scroll', () => handleScroll(div));\n  //   }\n  // }, []);\n\n  // useEffect(() => {\n  //   const div = videos.current;\n  //   if (div) {\n  //     div.addEventListener('scroll', () => handleScroll(div));\n  //   }\n  // }, [videos, handleScroll]);\n\n  return (\n    <ContentContainer\n      header={'Videos'}\n      headerData={items ? items.length : 0}\n      divider\n    >\n      <Grid\n        sx={{\n          alignItems: 'center',\n          height: 220,\n          overflow: 'auto',\n          marginTop: '.3rem',\n        }}\n        container\n        direction={'row'}\n        spacing={2}\n        ref={videos}\n      >\n        {items ? (\n          items.map((i) => (\n            <Grid\n              key={i.id.videoId}\n              item\n              justifyContent={'center'}\n            >\n              <MediaCard\n                item={i}\n                height={200}\n                width={300}\n                handleClick={handleClick}\n              />\n            </Grid>\n          ))\n        ) : (\n          <MediaSkeleton isVideo />\n        )}\n      </Grid>\n    </ContentContainer>\n  );\n}\n","import React, { useContext } from 'react';\nimport DataContext from '../../context/DataContext';\nimport UserContext from '../../context/UserContext';\nimport { Link } from '@mui/material';\nimport { Typography, Grid } from '@mui/material';\n\nexport default function DetailListItem({ param, item, isLastItem }) {\n  const { setSearchResults, setResultsHeader, resultsHeader } =\n    useContext(DataContext);\n  const { navigate } = useContext(UserContext);\n\n  // handle list item click\n  const handleClick = () => {\n    if (resultsHeader !== item._text) {\n      // clear previous results\n      setSearchResults({ pages: {} });\n      setResultsHeader('');\n    }\n    navigate(`/search/${param}/${item.objectid}`);\n  };\n  return (\n    <Grid item>\n      {/* <Link\n        onClick={handleClick}\n        variant='subtitle1'\n        sx={{\n          textDecoration: 'none',\n          cursor: 'pointer',\n        }}\n        aria-label={`search ${param} ${item.value}`}\n      > */}\n      <Typography\n        sx={{\n          color: 'primary.text',\n          // transition: 'all 250ms',\n          // '&:hover': {\n          //   color: 'secondary.main',\n          // },\n        }}\n      >\n        {isLastItem ? item._text : item._text + ','}\n      </Typography>\n      {/* </Link> */}\n    </Grid>\n  );\n}\n","import React from 'react';\nimport { Table, TableBody, TableCell, TableRow, Grid } from '@mui/material';\nimport DetailListItem from './DetailListItem';\nimport styled from '@emotion/styled';\nimport ContentContainer from '../common/ContentContainer';\nimport CircularLoading from '../common/CircularLoading';\n\n// create data for rows in table\nconst createData = (name, data = 'N/A') => {\n  return { name, data };\n};\n\nconst StyledRow = styled(TableRow)(({ theme }) => ({\n  backgroundColor: theme.palette.primary.main,\n  '& td, & th': {\n    border: 0,\n  },\n  '&:nth-of-type(odd)': {\n    backgroundColor: theme.palette.primary.dark,\n  },\n}));\n\nexport default function GameDetails({ game }) {\n  let MechanicsComps;\n  let CategoriesComps;\n  let rows;\n\n  if (game) {\n    MechanicsComps = game.boardgamemechanic.length\n      ? game.boardgamemechanic.map((m, idx) => (\n          <DetailListItem\n            key={idx}\n            param={'mechanics'}\n            item={m}\n            isLastItem={game.boardgamemechanic.length - 1 === idx}\n          />\n        ))\n      : 'N/A';\n\n    CategoriesComps = game.boardgamecategory.length\n      ? game.boardgamecategory.map((c, idx) => (\n          <DetailListItem\n            key={idx}\n            param={'categories'}\n            item={c}\n            isLastItem={game.boardgamecategory.length - 1 === idx}\n          />\n        ))\n      : 'N/A';\n\n    const year = game.yearpublished ? game.yearpublished : 'N/A';\n    const publishers = game.publishers.length\n      ? game.publishers.join(', ')\n      : 'N/A';\n    const artists = game.artists ? game.artists.join(', ') : 'N/A';\n    const ages = game.age.concat('+');\n\n    rows = [\n      createData('Ages', ages),\n      createData('Year Published', year),\n      createData('Publishers', publishers),\n      createData('Artists', artists),\n      createData(\n        'Mechanics',\n        <Grid\n          container\n          spacing={2}\n          direction={'row'}\n        >\n          {MechanicsComps}\n        </Grid>\n      ),\n      createData(\n        'Categories',\n        <Grid\n          container\n          spacing={2}\n          direction={'row'}\n        >\n          {CategoriesComps}\n        </Grid>\n      ),\n    ];\n  }\n  return (\n    <ContentContainer header='Details'>\n      {game ? (\n        <Table>\n          <TableBody>\n            {rows\n              ? rows.map((row, idx) => (\n                  <StyledRow key={idx}>\n                    <TableCell\n                      component='th'\n                      scope='row'\n                      sx={{\n                        width: '35ch',\n                        color: 'primary.text',\n                        fontSize: '1.2rem',\n                      }}\n                    >\n                      {row.name}\n                    </TableCell>\n                    <TableCell\n                      sx={{\n                        color: 'primary.text',\n                        fontSize: '1.1rem',\n                      }}\n                    >\n                      {row.data}\n                    </TableCell>\n                  </StyledRow>\n                ))\n              : null}\n          </TableBody>\n        </Table>\n      ) : (\n        <CircularLoading />\n      )}\n    </ContentContainer>\n  );\n}\n","import React, { useEffect, useContext, useState } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport DataContext from '../../context/DataContext';\nimport { Stack, Typography } from '@mui/material';\nimport ContentContainer from '../common/ContentContainer';\nimport GameDescription from './GameDescription';\nimport GameDescSkeleton from './GameDescSkeleton';\nimport MediaContainer from './MediaContainer';\nimport MediaSkeleton from './MediaSkeleton';\nimport GameDetails from './GameDetails';\n\nexport default function GameDetailsPage() {\n  const { game, videos, getVideos, nextPageToken, checkGameCache } =\n    useContext(DataContext);\n  const gameID = useParams().id;\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    try {\n      if (!game || game.objectid !== gameID) {\n        // GET request to check cache for game\n        checkGameCache(gameID);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [game, pathname, checkGameCache, gameID]);\n\n  const NoGameFound = () => (\n    <Stack>\n      <ContentContainer>\n        <Typography\n          variant='h5'\n          textAlign={'center'}\n          color={'primary.text'}\n        >\n          Sorry, no game found with ID '{gameID}'.\n        </Typography>\n      </ContentContainer>\n    </Stack>\n  );\n\n  return (\n    <Stack spacing={'.3rem'}>\n      {game ? <GameDescription game={game} /> : <GameDescSkeleton />}\n      {game ? (\n        <MediaContainer\n          items={videos}\n          getVideos={() => getVideos(nextPageToken)}\n        />\n      ) : (\n        <MediaSkeleton isVideo />\n      )}\n      <GameDetails game={game} />\n    </Stack>\n  );\n}\n","import React, { useContext } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport UserContext from './context/UserContext';\nimport NotFound from './components/NotFound';\nimport Home from './components/Home';\nimport LoginForm from './components/account/LoginForm';\nimport SignUpForm from './components/account/SignUpForm';\nimport Profile from './components/account/Profile';\nimport SearchResultsPage from './components/search/SearchResultsPage';\nimport GameDetailsPage from './components/games/GameDetailsPage';\n\nexport default function AllRoutes() {\n  const { loginUser, registerUser } = useContext(UserContext);\n  return (\n    <Routes>\n      <Route\n        path='*'\n        element={<NotFound />}\n      />\n      <Route\n        path='/'\n        element={<Home />}\n      />\n      <Route\n        path='/login'\n        element={<LoginForm loginUser={loginUser} />}\n      />\n      <Route\n        path='/signup'\n        element={<SignUpForm registerUser={registerUser} />}\n      />\n      <Route\n        path='/profile/:username'\n        element={<Profile itemsOnPage={9} />}\n      />\n      <Route\n        path='search/:path/:id'\n        element={<SearchResultsPage itemsOnPage={30} />}\n      />\n      <Route\n        path='/games/:id'\n        element={<GameDetailsPage />}\n      />\n    </Routes>\n  );\n}\n","import React from 'react';\nimport { Skeleton, alpha } from '@mui/material';\nimport styled from '@emotion/styled';\n\nconst StyledSkel = styled(Skeleton)(({ theme }) => ({\n  backgroundColor: alpha(theme.palette.primary.muted, 0.4),\n  '& .MuiSkeleton-root': {\n    animationDuration: '.3sec',\n  },\n}));\n\nexport default function BaseSkeleton({\n  variant = 'rounded',\n  width = '100%',\n  height = '2rem',\n  shadow,\n}) {\n  const boxShadow = shadow ? shadow : 'none';\n  return (\n    <StyledSkel\n      variant={variant}\n      animation='wave'\n      sx={{\n        width: width,\n        height: height,\n        boxShadow: boxShadow,\n      }}\n    />\n  );\n}\n","import React from 'react';\nimport { Grid, ListItem, ListItemIcon, ListItemText } from '@mui/material';\nimport { Person, AccessTime } from '@mui/icons-material';\n\nexport default function PlayersAndDuration({\n  min_players,\n  max_players,\n  min_playtime,\n  max_playtime,\n}) {\n  /** format string for num of players to only display\n   * min_players if it's equal to max_players\n   *\n   * some API data with have min and max as same value\n   *\n   * instead of displaying players as 1-1,\n   * will just have display of 1\n   *\n   */\n  const players = () => {\n    const players =\n      min_players === max_players\n        ? min_players\n        : min_players + ' - ' + max_players;\n    return [<Person />, players];\n  };\n\n  /** format string for duration of playtime to only display\n   * min_playtime if it's equal to max_playtime\n   *\n   * some API data with have min and max as same value\n   *\n   * instead of displaying playtime as 30-30,\n   * will just have display of 30\n   *\n   */\n  const duration = () => {\n    const duration =\n      min_playtime === max_playtime\n        ? min_playtime\n        : min_playtime + ' - ' + max_playtime;\n    return [<AccessTime />, duration];\n  };\n\n  return (\n    <>\n      {[players(), duration()].map((i, idx, arr) => {\n        const last = arr.length - 1;\n        return (\n          <Grid\n            item\n            key={idx}\n          >\n            <ListItem\n              disableGutters\n              sx={{ marginRight: idx === last ? 0 : 2 }}\n            >\n              <ListItemIcon sx={{ color: 'primary.text', minWidth: 30 }}>\n                {i[0]}\n              </ListItemIcon>\n              <ListItemText>{i[1]}</ListItemText>\n            </ListItem>\n          </Grid>\n        );\n      })}\n    </>\n  );\n}\n","import React from 'react';\nimport { Pagination, alpha } from '@mui/material';\nimport styled from '@emotion/styled';\n\nconst StyledPagination = styled(Pagination)(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'center',\n  padding: '1rem',\n  '& .MuiPaginationItem-root': {\n    color: theme.palette.primary.text,\n  },\n  '& .MuiPaginationItem-root.Mui-selected': {\n    color: theme.palette.primary.main,\n    backgroundColor: theme.palette.secondary.main,\n    '&:hover': {\n      color: theme.palette.primary.main,\n      backgroundColor: theme.palette.secondary.dark,\n    },\n  },\n  '& .MuiButtonBase-root': {\n    '&:hover': {\n      backgroundColor: alpha(`${theme.palette.primary.dark}`, 0.6),\n    },\n  },\n}));\n\nexport default function ResultsPagination({\n  page,\n  handleChange,\n  pageCount = 10,\n}) {\n  return (\n    <StyledPagination\n      count={pageCount}\n      page={page}\n      onChange={handleChange}\n      shape='rounded'\n      size='large'\n    />\n  );\n}\n","import React from 'react';\nimport { Stack, Grid } from '@mui/material';\nimport BaseSkeleton from '../common/BaseSkeleton';\n\nexport default function CollectionSkeleton({ itemsOnPage }) {\n  let skelItems = [];\n\n  for (let i = 0; i < itemsOnPage; i++) {\n    skelItems.push(\n      <Grid\n        item\n        key={i}\n      >\n        <BaseSkeleton\n          width={345}\n          height={383}\n          shadow={1}\n        />\n      </Grid>\n    );\n  }\n\n  return (\n    <Stack spacing={2}>\n      <Stack\n        spacing={1}\n        width={300}\n        padding={'1.5rem 1.5rem 0rem 2rem'}\n      >\n        <BaseSkeleton />\n        <BaseSkeleton height='1.5rem' />\n      </Stack>\n      <Grid\n        container\n        direction={'row'}\n        spacing={3}\n        paddingLeft={'.5rem'}\n      >\n        {skelItems.map((i) => i)}\n      </Grid>\n    </Stack>\n  );\n}\n","import React, { useContext } from 'react';\nimport {\n  Card,\n  CardActionArea,\n  CardMedia,\n  CardContent,\n  CardActions,\n  Typography,\n  Grid,\n  IconButton,\n} from '@mui/material';\nimport PlayersAndDuration from '../common/PlayersAndDuration';\nimport { Favorite, FavoriteBorder, Delete } from '@mui/icons-material';\nimport DataContext from '../../context/DataContext';\nimport UserContext from '../../context/UserContext';\n\nexport default function GameCard({ game, onProfilePage }) {\n  const { setGame, addGame, removeGame } = useContext(DataContext);\n  const { currentUser, userGameIDs, navigate } = useContext(UserContext);\n  const inCollection = userGameIDs ? userGameIDs.has(game.objectid) : false;\n  const name = Array.isArray(game.name)\n    ? game.name.filter((n) => n.primary)[0]._text\n    : game.name;\n\n  const handleCardClick = () => {\n    setGame('');\n    navigate(`/games/${game.objectid}`);\n  };\n\n  const handleQuickAddClick = () => {\n    if (!inCollection) {\n      // POST request to server to add game\n      addGame(game);\n    }\n  };\n\n  const handleTrashClick = () => {\n    // POST request to server to delete game\n    removeGame(game);\n  };\n\n  const quickAddBtn = (\n    <IconButton\n      aria-label='add to collection'\n      sx={{ color: 'secondary.main', marginLeft: 'auto' }}\n      onClick={handleQuickAddClick}\n    >\n      {inCollection ? <Favorite /> : <FavoriteBorder />}\n    </IconButton>\n  );\n\n  const trashBtn = (\n    <IconButton\n      aria-label='remove from collection'\n      sx={{\n        color: 'primary.muted',\n        marginLeft: 'auto',\n        '&:hover': { color: 'red' },\n      }}\n      onClick={handleTrashClick}\n    >\n      <Delete />\n    </IconButton>\n  );\n\n  return (\n    <Card\n      sx={{\n        width: 345,\n        backgroundColor: 'primary.dark',\n        transition: 'all 200ms',\n        '&:hover': {\n          transform: 'scale(1.02)',\n        },\n      }}\n    >\n      <CardActionArea onClick={handleCardClick}>\n        <CardMedia\n          sx={{\n            objectFit: 'fill',\n          }}\n          component={'img'}\n          height={230}\n          image={game.image || game.thumbnail}\n          alt={name}\n        />\n        <CardContent sx={{ color: 'secondary.main' }}>\n          <Typography\n            textAlign={'center'}\n            gutterBottom\n            variant='h5'\n            component='div'\n            noWrap\n          >\n            {name}\n          </Typography>\n          <Grid\n            container\n            direction={'row'}\n            justifyContent={'center'}\n            spacing={3}\n            sx={{\n              color: 'primary.text',\n            }}\n          >\n            <PlayersAndDuration\n              min_players={game.minplayers}\n              max_players={game.maxplayers}\n              min_playtime={game.minplaytime}\n              max_playtime={game.maxplaytime}\n            />\n          </Grid>\n        </CardContent>\n      </CardActionArea>\n      {currentUser ? (\n        <CardActions disableSpacing>\n          {!onProfilePage ? quickAddBtn : trashBtn}\n        </CardActions>\n      ) : null}\n    </Card>\n  );\n}\n","import { useEffect, useState } from 'react';\n\n/** Controls page and pageCount for pagination\n *\n * @param {*} count searchResults count\n * @param {*} itemsOnPage num prop from parent\n * @returns {*} [page, pageCount, handleChange, setPage]\n *\n * pageCount = Math.ceil(count / itemsOnPage)\n */\nexport default function usePagination(count, itemsOnPage) {\n  const [page, setPage] = useState(1);\n  const [pageCount, setPageCount] = useState(0);\n\n  useEffect(() => {\n    if (count) {\n      const initialPages = Math.ceil(count / itemsOnPage);\n      setPageCount(initialPages >= 35 ? 34 : initialPages);\n    }\n  }, [count, itemsOnPage]);\n\n  const handleChange = (evt, value) => {\n    setPage(value);\n  };\n\n  return [page, pageCount, handleChange, setPage];\n}\n"],"names":["StyledContainer","styled","Container","_ref","alphascale","theme","margin","backgroundColor","alpha","concat","palette","primary","main","borderRadius","shape","padding","alignSelf","ContentContainer","_ref2","_ref2$alphascale","_ref2$shadow","shadow","_ref2$header","header","headerData","divider","blur","children","_jsxs","maxWidth","sx","boxShadow","backdropFilter","Stack","direction","spacing","_jsx","Typography","variant","color","gutterBottom","Divider","NotFound","textAlign","Home","_useContext","useContext","UserContext","currentUser","navigate","_useContext2","DataContext","hotGames","getHotCache","setGame","useEffect","length","WelcomeMsg","Box","fontSize","width","handleGameClick","gameID","HotGames","_Fragment","Grid","container","item","map","i","idx","GamesListItem","clickFunc","isLastItem","dimensions","height","homepage","id","CircularLoading","paddingTop","PasswordAdornment","showPassword","handleShowPassword","InputAdornment","position","IconButton","onClick","onMouseDown","event","preventDefault","edge","VisibilityOff","Visibility","FormComponent","initialState","inputs","submitFunc","_useState","useState","_useState2","_slicedToArray","setShowPassword","_useState3","_useState4","isLoading","setIsLoading","isLogin","inputType","_useFields","useFields","_useFields2","formData","handleChange","formErrors","setFormErrors","show","handleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","result","wrap","_context","prev","next","sent","err","stop","_x","apply","arguments","FormBox","component","onSubmit","marginBottom","ErrorSpan","name","label","toUpperCase","slice","isPassword","FormControl","FormTextField","type","value","onChange","autoFocus","autoComplete","InputProps","endAdornment","helperText","required","display","Link","to","PrimaryButton","className","right","size","LoginForm","loginUser","username","password","SignUpForm","registerUser","email","ProfileSkeleton","BaseSkeleton","xs","marginTop","EditAvatar","imageURL","handleFileUpload","justifyContent","Avatar","src","InputLabel","htmlFor","Button","bgcolor","PhotoCamera","marginRight","hidden","EditProfile","open","setOpen","updateUser","userData","setFormData","handleClose","getChanges","formEntries","Object","entries","initialEntries","updateData","filter","_ref3","entry","_ref4","abrupt","msg","Dialog","onClose","bottom","DialogTitle","paddingBottom","DialogContent","file","target","files","reader","FileReader","onloadend","_objectSpread","readAsDataURL","DialogActions","CancelButton","CollectionComp","lazy","Profile","itemsOnPage","useParams","getCurrentUser","token","alignItems","marginLeft","Edit","Suspense","fallback","CollectionSkeleton","Navigate","ResultsSkeleton","skelItems","push","SearchResultsPage","_useParams","path","searchResults","getSearchResults","resultsHeader","getSearchHeader","pages","count","_usePagination","usePagination","_usePagination2","page","pageCount","setPage","searchObj","_defineProperty","keys","window","scrollTo","top","behavior","g","game","GameCard","ResultsPagination","AddButton","secondary","AddedBadgeBox","success","GameDescription","addGame","userGameIDs","inCollection","has","objectid","handleAddBtnClick","flex","Check","Add","paddingRight","ListItem","disableGutters","ListItemText","yearpublished","PlayersAndDuration","min_players","minplayers","max_players","maxplayers","min_playtime","minplaytime","max_playtime","maxplaytime","image","alt","description","Collapse","in","collapsedSize","ExpandLess","ExpandMore","GameDescSkeleton","StyledBox","common","black","VideoOverlay","title","Tooltip","textShadow","noWrap","YouTubeIcon","MediaCard","handleClick","Card","CardActionArea","snippet","CardMedia","thumbnails","medium","url","objectFit","MediaSkeleton","isVideo","overflow","MediaContainer","items","videos","getVideos","useRef","console","log","ref","videoId","DetailListItem","param","setSearchResults","setResultsHeader","_text","createData","data","undefined","StyledRow","TableRow","border","dark","GameDetails","MechanicsComps","CategoriesComps","rows","boardgamemechanic","m","boardgamecategory","c","year","publishers","join","artists","ages","age","Table","TableBody","row","TableCell","scope","GameDetailsPage","nextPageToken","checkGameCache","pathname","useLocation","error","AllRoutes","Routes","Route","element","StyledSkel","Skeleton","muted","animationDuration","_ref2$variant","_ref2$width","_ref2$height","animation","players","Person","duration","AccessTime","arr","last","ListItemIcon","minWidth","StyledPagination","Pagination","text","_ref2$pageCount","paddingLeft","onProfilePage","removeGame","Array","isArray","n","quickAddBtn","Favorite","FavoriteBorder","trashBtn","Delete","transition","transform","thumbnail","CardContent","CardActions","disableSpacing","setPageCount","initialPages","Math","ceil","evt"],"sourceRoot":""}